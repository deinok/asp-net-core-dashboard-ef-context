// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VMES.Database.Vmes;

namespace VMES.Database.Vmes.Migrations
{
    [DbContext(typeof(VmesDbContext))]
    [Migration("20230404065530_NetAlarmasTipoRespuestaOrigen")]
    partial class NetAlarmasTipoRespuestaOrigen
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VMES.Database.Vmes.Models.Aditivos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Cantidad")
                        .HasColumnType("real");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<int?>("Formato")
                        .HasColumnType("int");

                    b.Property<int>("IdOld")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Lote")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<int>("Serie")
                        .HasColumnType("int");

                    b.Property<float?>("Servida")
                        .HasColumnType("real");

                    b.Property<int?>("Ubicacion")
                        .HasColumnType("int");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Formato");

                    b.HasIndex("Orden");

                    b.HasIndex("Producto");

                    b.HasIndex("Ubicacion");

                    b.HasIndex("Unidad");

                    b.ToTable("Aditivos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Afecciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Afecciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Alarmas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Accion")
                        .HasColumnType("int");

                    b.Property<float?>("Argumento")
                        .HasColumnType("real");

                    b.Property<int?>("ArgumentoAccion")
                        .HasColumnType("int");

                    b.Property<int?>("Aviso")
                        .HasColumnType("int");

                    b.Property<int?>("Contador")
                        .HasColumnType("int");

                    b.Property<int?>("Equipo")
                        .HasColumnType("int");

                    b.Property<int?>("EquipoRemoto")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaAccion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaEnvio")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int?>("Medidor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("Orden")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoFinal")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoInicial")
                        .HasColumnType("int");

                    b.Property<int?>("Seccion")
                        .HasColumnType("int");

                    b.Property<int?>("SerieOrden")
                        .HasColumnType("int");

                    b.Property<int?>("Sesion")
                        .HasColumnType("int");

                    b.Property<int?>("SesionRemoto")
                        .HasColumnType("int");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("Usuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Medidor");

                    b.ToTable("Alarmas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.AlertasSmtpConfigs", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("smtpEmisor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("smtpPass")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("smtpPort")
                        .HasColumnType("int");

                    b.Property<bool?>("smtpSSL")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("smtpServer")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("smtpUser")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("AlertasSmtpConfigs");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.AlertasUsuarios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ReceptorNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SMSReceptor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("idServerSmtp")
                        .HasColumnType("int");

                    b.Property<string>("smtpAsunto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("smtpIsBodyHtml")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("smtpMensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smtpReceptor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.HasIndex("idServerSmtp");

                    b.ToTable("AlertasUsuarios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.AlertasUsuariosAlarmas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ActivoMail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("ActivoSMS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("idAlertaUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("idModulo")
                        .HasColumnType("int");

                    b.Property<int>("idNetAlarmaTipo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idAlertaUsuario");

                    b.HasIndex("idModulo");

                    b.HasIndex("idNetAlarmaTipo");

                    b.ToTable("AlertasUsuariosAlarmas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.AlertasUsuariosInformes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Asunto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("DiaMes1")
                        .HasColumnType("int");

                    b.Property<int?>("DiaMes2")
                        .HasColumnType("int");

                    b.Property<int?>("DiaSemana")
                        .HasColumnType("int");

                    b.Property<int?>("HoraEntrega")
                        .HasColumnType("int");

                    b.Property<string>("Mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoProgramacion")
                        .HasColumnType("int");

                    b.Property<int?>("idAlertasUsuarios")
                        .HasColumnType("int");

                    b.Property<int?>("idInforme")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idAlertasUsuarios");

                    b.ToTable("AlertasUsuariosInformes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.AlertasUsuariosInformesParametros", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripción")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("idAlertaUsuarioInformes")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idAlertaUsuarioInformes");

                    b.ToTable("AlertasUsuariosInformesParametros");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Analisis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<float?>("Precio")
                        .HasColumnType("real");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Analisis");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.AnalizadoresRed", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Corriente0")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Corriente1")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Corriente2")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Corriente_Neutro")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Corriente_trifasica")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("CosFi_Trifasico")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal?>("Energia_Activa")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Energia_Activa_Generada")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Energia_Aparente")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Energia_Aparente_Generada")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Energia_Capacitiva_Generada")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Energia_Inductiva_Generada")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Energia_Reactiva_Capacitiva")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Energia_Reactiva_Inductiva")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("FactorPotencia0")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("FactorPotencia1")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("FactorPotencia2")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("FactorPotencia_Trifasico")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Frecuencia")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<int?>("IdOpc")
                        .HasColumnType("int");

                    b.Property<decimal?>("Max_Demanda")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Max_Demanda_L1")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Max_Demanda_L2")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Max_Demanda_L3")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<bool?>("ModoMaximetro")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("PosicionPLC")
                        .HasColumnType("int");

                    b.Property<decimal?>("PotenciaActiva0")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("PotenciaActiva1")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("PotenciaActiva2")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("PotenciaActiva_Trifasica")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("PotenciaAparente0")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("PotenciaAparente1")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("PotenciaAparente2")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("PotenciaAparente_Trifasica")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("PotenciaCapacitativa_Trifasica")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("PotenciaInductiva_Trifasica")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("PotenciaReactiva0")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("PotenciaReactiva1")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("PotenciaReactiva2")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<bool?>("RegistrarDatos")
                        .HasColumnType("bit");

                    b.Property<decimal?>("SobreConsumo")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("THD_A0")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("THD_A1")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("THD_A2")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("THD_V0")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("THD_V1")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("THD_V2")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("Temperatura")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("TensionSimple0")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("TensionSimple1")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("TensionSimple2")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("VCompuestaL1_L2")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("VCompuestaL2_L3")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<decimal?>("VCompuestaL3_L1")
                        .HasColumnType("decimal(15, 5)");

                    b.HasKey("id");

                    b.ToTable("AnalizadoresRed");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Hostname")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Mac")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.AuditColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuditTableId")
                        .HasColumnType("int");

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("AuditTableId");

                    b.ToTable("AuditColumns");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.AuditTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuditId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.ToTable("AuditTables");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Backups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("HayError")
                        .HasColumnType("bit");

                    b.Property<string>("TextoError")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("HayError")
                        .HasName("_dta_index_Backups_1");

                    b.ToTable("Backups");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Basculas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CadenaPeticion")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("CantidadOpc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Captura")
                        .HasColumnType("int");

                    b.Property<string>("Comando")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Configuracion")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ControlFlujo")
                        .HasColumnType("int");

                    b.Property<bool?>("Entradas")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnviarDatosAPLC")
                        .HasColumnType("bit");

                    b.Property<int?>("Equipo")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FLectura")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaLecturaPeso")
                        .HasColumnType("datetime");

                    b.Property<int?>("FinTrama")
                        .HasColumnType("int");

                    b.Property<bool?>("GrabarEnPLC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("IdOpc")
                        .HasColumnType("int");

                    b.Property<int?>("IdPlc")
                        .HasColumnName("PosicionPLC")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int?>("InicioTrama")
                        .HasColumnType("int");

                    b.Property<bool?>("LecturaNetos")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LecturaPeso")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<bool?>("LeerEnPLC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<float?>("Minimo")
                        .HasColumnType("real");

                    b.Property<int?>("ModoTransmisionPeso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("NDecimales")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("NuloTrama")
                        .HasColumnType("int");

                    b.Property<int?>("OpcConfigId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PLCBCapacidadMaxima")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<bool?>("PLCBDesactivarALAcumulados")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCBDesactivarALBaNoVacia")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCBDesactivarALEstabilidad")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCBDesactivarALFaltaProducto")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCBDesactivarALProceso")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCBDesactivarALTimDescarga")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCBDesactivarALTimMaxDosiAuto")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCBDesactivarALTimMaxDosiMan")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCBDesactivarALTodas")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCBDesactivarALTolerancia")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCBDesactivarALVisorPenko")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PLCBLimInferiorCorrColas")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCBLimSuperiorCorrColas")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<int?>("PLCBModoPesado")
                        .HasColumnType("int");

                    b.Property<int?>("PLCBModoVaciado")
                        .HasColumnType("int");

                    b.Property<bool?>("PLCBMultidosiReady")
                        .HasColumnType("bit");

                    b.Property<int?>("PLCBNumMaxCiclos")
                        .HasColumnType("int");

                    b.Property<bool?>("PLCBOmitirToleranciaPrecisionZero")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PLCBPar1")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCBPar2")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCBPar3")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCBPar4")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCBPar5")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<int?>("PLCBParticionarPesada")
                        .HasColumnType("int");

                    b.Property<decimal?>("PLCBPesoMaxAcumulado")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCBPesoMinBasculaVacia")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<int?>("PLCBPorcentCorrColas")
                        .HasColumnType("int");

                    b.Property<bool?>("PLCBReintentarDosificacionPerdidaSP")
                        .HasColumnType("bit");

                    b.Property<int?>("PLCBTiempoMaxAdicion")
                        .HasColumnType("int");

                    b.Property<int?>("PLCBTiempoMaxDescarga")
                        .HasColumnType("int");

                    b.Property<int?>("PLCBTiempoMaxEstable")
                        .HasColumnType("int");

                    b.Property<int?>("PLCBTiempoMaxIncrementos")
                        .HasColumnType("int");

                    b.Property<int?>("PLCBTiempoMaxRespuestaPenko")
                        .HasColumnType("int");

                    b.Property<int?>("PLCBTiempoMinDescarga")
                        .HasColumnType("int");

                    b.Property<int?>("PLCBTiempoMinEstable")
                        .HasColumnType("int");

                    b.Property<int?>("PLCBTiempoRestablecerPerturbacion")
                        .HasColumnType("int");

                    b.Property<int?>("PLCBTiempoRetardoCiclo1")
                        .HasColumnType("int");

                    b.Property<int?>("PLCBTipoBascula")
                        .HasColumnType("int");

                    b.Property<decimal?>("PLCBToleranciaPrecisionZero")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCBValorIncrementoMin")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<bool?>("PLCCAutocalibracionAtivada")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PLCCCaudalMaximo")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<bool?>("PLCCDesactivarALFaltaProducto")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCCDesactivarALTimMaxAdicion")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCCDesactivarTodasAlarmas")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCCInKgOL")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PLCCLimInferiorCorrColas")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCCLimSuperiorAnalogica")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCCLimSuperiorCorrColas")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<bool?>("PLCCModoContaje")
                        .HasColumnType("bit");

                    b.Property<int?>("PLCCNumerodeOrden")
                        .HasColumnType("int");

                    b.Property<decimal?>("PLCCPar1")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCCPar2")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCCPar3")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCCPar4")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCCPar5")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<bool?>("PLCCPermitirContajeEnManual")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCCPermitirTestEnAuto")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PLCCPorcentCorrColas")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCCPulsosKg")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCCPulsosL")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<bool?>("PLCCSecuenciarLiquido")
                        .HasColumnType("bit");

                    b.Property<int?>("PLCCTiempoMaxAdicion")
                        .HasColumnType("int");

                    b.Property<int?>("PLCCTiempoMaxIncrementos")
                        .HasColumnType("int");

                    b.Property<bool?>("PLCCTipoContador")
                        .HasColumnType("bit");

                    b.Property<int?>("PLCCTipoContaje")
                        .HasColumnType("int");

                    b.Property<decimal?>("PLCCValorIncrementoMin")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCCValorMaxCaudal")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCCValorMinCaudal")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<int?>("PLCIConFallos")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIDatosAdicionales0")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIDatosAdicionales1")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIDatosAdicionales2")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIEstadoActual")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIModelo")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIModoIndicacion")
                        .HasColumnType("int");

                    b.Property<int?>("PLCINumDecimales")
                        .HasColumnType("int");

                    b.Property<int?>("PLCINumDecimales2")
                        .HasColumnType("int");

                    b.Property<int?>("PLCINumSerie")
                        .HasColumnType("int");

                    b.Property<string>("PLCITextoAdicional")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PLCITextoAdicional2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("PLCITipoIndicador")
                        .HasColumnType("int");

                    b.Property<decimal?>("PLCIValorActual")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCIValorActual2")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<int?>("PLCIVersion")
                        .HasColumnType("int");

                    b.Property<bool?>("PLCODesactivarAlarmas")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PLCOPar1")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCOPar10")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCOPar2")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCOPar3")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCOPar4")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCOPar5")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCOPar6")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCOPar7")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCOPar8")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCOPar9")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCOVMaxEscalaIng")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCOVMaxLogico")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCOVMinEscalaIng")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PLCOVMinLogico")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<int?>("Periodo")
                        .HasColumnType("int");

                    b.Property<int?>("PeriodoVisible")
                        .HasColumnType("int");

                    b.Property<string>("PerleBitsDatos")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PerleBitsParada")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("PerleDTR")
                        .HasColumnType("bit");

                    b.Property<string>("PerleHandShake")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PerleParidad")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PerlePuerto")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("PerleRTS")
                        .HasColumnType("bit");

                    b.Property<string>("PerleVelocidad")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("PesoMaximoAviso")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<decimal?>("PesoMinimoAviso")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<decimal?>("PesoRecipiente")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<bool>("PlcEnabled")
                        .HasColumnType("bit");

                    b.Property<int?>("Puerto")
                        .HasColumnType("int");

                    b.Property<bool?>("RTS")
                        .HasColumnType("bit");

                    b.Property<bool?>("Recipiente")
                        .HasColumnType("bit");

                    b.Property<string>("Respuesta")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Salidas")
                        .HasColumnType("bit");

                    b.Property<string>("SeparadorNewLine")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("ServidaOpc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Sesion")
                        .HasColumnType("int");

                    b.Property<int?>("Tag")
                        .HasColumnType("int");

                    b.Property<int?>("TiempoMaximoLectura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<decimal?>("ToleranciaInferior")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(8, 2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("ToleranciaSuperior")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(8, 2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ValidadoServidaOpc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValidarServidaOpc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("OpcConfigId");

                    b.HasIndex("Tag");

                    b.ToTable("Basculas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferConsumidos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BitAux1")
                        .HasColumnType("bit");

                    b.Property<bool?>("BitAux2")
                        .HasColumnType("bit");

                    b.Property<int?>("Camino")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<bool?>("CantidadManual")
                        .HasColumnType("bit");

                    b.Property<int?>("Ciclo")
                        .HasColumnType("int");

                    b.Property<int?>("CodError")
                        .HasColumnType("int");

                    b.Property<int?>("Destino")
                        .HasColumnType("int");

                    b.Property<int?>("DuracionStamp")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaConsumido")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaRecibido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaTratado")
                        .HasColumnType("datetime");

                    b.Property<bool?>("FinalCiclo")
                        .HasColumnType("bit");

                    b.Property<bool?>("FinalMedidor")
                        .HasColumnType("bit");

                    b.Property<bool?>("FinalOrden")
                        .HasColumnType("bit");

                    b.Property<bool?>("FinalSecuencia")
                        .HasColumnType("bit");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<decimal?>("Humedad")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("IndicadorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("KWhEfectivo")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal?>("KWhTotal")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int?>("MedidorId")
                        .HasColumnType("int");

                    b.Property<int?>("ModuloId")
                        .HasColumnType("int");

                    b.Property<int?>("MultidosiId")
                        .HasColumnType("int");

                    b.Property<int?>("NumCorrecion")
                        .HasColumnType("int");

                    b.Property<int?>("OpcConfigId")
                        .HasColumnType("int");

                    b.Property<int?>("OperacionId")
                        .HasColumnType("int");

                    b.Property<int?>("Orden")
                        .HasColumnType("int");

                    b.Property<bool?>("OrdenCancelada")
                        .HasColumnType("bit");

                    b.Property<int?>("Origen")
                        .HasColumnType("int");

                    b.Property<decimal?>("Ph")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("PhId")
                        .HasColumnType("int");

                    b.Property<int?>("ProdCodigo")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProdDensidad")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("ProdIdLoteActual")
                        .HasColumnType("int");

                    b.Property<string>("ProdNombre")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ProdNombreLoteActual")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("Secuencia")
                        .HasColumnType("int");

                    b.Property<decimal?>("Temperatura")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("TemperaturaId")
                        .HasColumnType("int");

                    b.Property<int?>("TiempoEfectivo")
                        .HasColumnType("int");

                    b.Property<int?>("TiempoTotal")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime");

                    b.Property<int?>("TotalCiclos")
                        .HasColumnType("int");

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<string>("TxtError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("ValidacionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Variable1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Variable2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("idDosificacionMes")
                        .HasColumnType("int");

                    b.Property<int?>("idUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("idopc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OpcConfigId");

                    b.HasIndex("Tratado", "ModuloId")
                        .HasName("NonClusteredIndex-20210719-021448");

                    b.ToTable("BufferConsumidos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPCabOrdenes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FCaducidadLoteProducto")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FFabricacionLoteProducto")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombreLoteProducto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombreProducto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("NumCiclos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RefERP")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefProducto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Tratado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("preparado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("BufferERPCabOrdenes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPChoferes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CIF")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Poblacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("BufferERPChoferes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPClienteDomicilioPuntoDescarga", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<int?>("idDomicilio")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idDomicilio");

                    b.ToTable("BufferERPClienteDomicilioPuntoDescarga");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPClientes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CIF")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Inhabilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Poblacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("BufferERPClientes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPClientesDomicilios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Especie")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Inhabilitado")
                        .HasColumnType("bit");

                    b.Property<string>("LoteAnimalActual")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("MarcaOficial")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("NumeroEspecies")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Poblacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("REGA")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefCliente")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Responsable")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Simogan")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<int?>("idCliente")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idCliente");

                    b.ToTable("BufferERPClientesDomicilios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPComponentes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AddVersionActiva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Automatico")
                        .HasColumnType("bit");

                    b.Property<float?>("Cantidad")
                        .HasColumnType("real");

                    b.Property<bool?>("DosificarProductoAnterior")
                        .HasColumnType("bit");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("Medidor")
                        .HasColumnType("int");

                    b.Property<int?>("Modulo")
                        .HasColumnType("int");

                    b.Property<int?>("OperAccion")
                        .HasColumnType("int");

                    b.Property<int?>("OperMotor")
                        .HasColumnType("int");

                    b.Property<int?>("OperTiempo")
                        .HasColumnType("int");

                    b.Property<decimal?>("OperVariable")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<decimal?>("OperVariable2")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<int?>("Orden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PausaPosteriorDosificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<float?>("Porcentaje")
                        .HasColumnType("real");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("RefERPUnidades")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefFormula")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefProducto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefVersion")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("TextoVariable")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("TipoDosificacion")
                        .HasColumnType("int");

                    b.Property<decimal?>("ToleranciaInferior")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("ToleranciaSuperior")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<int?>("idVersion")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idVersion");

                    b.ToTable("BufferERPComponentes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPCompras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ContratoId")
                        .HasColumnType("int");

                    b.Property<string>("ContratoRef")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("DepartamentoRef")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("Entrega")
                        .HasColumnType("datetime");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<string>("ProveedorRef")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Refrescado")
                        .HasColumnType("bit");

                    b.Property<int?>("Serie")
                        .HasColumnType("int");

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("BufferERPCompras");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPComprasLineas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Bultos")
                        .HasColumnType("int");

                    b.Property<float?>("Cantidad")
                        .HasColumnType("real");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CompraId")
                        .HasColumnType("int");

                    b.Property<string>("CompraRef")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ContratoId")
                        .HasColumnType("int");

                    b.Property<string>("ContratoRef")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Departamento")
                        .HasColumnType("int");

                    b.Property<int?>("EnvaseId")
                        .HasColumnType("int");

                    b.Property<string>("EnvaseRef")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("FormatoId")
                        .HasColumnType("int");

                    b.Property<string>("FormatoRef")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Linea")
                        .HasColumnType("int");

                    b.Property<int?>("LoteId")
                        .HasColumnType("int");

                    b.Property<string>("LoteRef")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<float?>("PrecioCompra")
                        .HasColumnType("real");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.Property<string>("ProductoRef")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Serie")
                        .HasColumnType("int");

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<int?>("UnidadId")
                        .HasColumnType("int");

                    b.Property<string>("UnidadRef")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.ToTable("BufferERPComprasLineas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPConsumidos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FCadLoteProdConsumido")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FCaducidadLoteProdFinal")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FFabricacionLoteProdFinal")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaFinal")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("LoteProdConsumido")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LoteProdFinal")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombreMedidor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombreModulo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombreProdConsumido")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombreProdFinal")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Orden")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefProdConsumido")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefProdFinal")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<bool?>("Tratado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("idMedidor")
                        .HasColumnType("int");

                    b.Property<int?>("idModulo")
                        .HasColumnType("int");

                    b.Property<int?>("idOrden")
                        .HasColumnType("int");

                    b.Property<int?>("idResultados")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BufferERPConsumidos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPDocumentos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Automatico")
                        .HasColumnType("bit");

                    b.Property<bool?>("Entrada")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("RefERP")
                        .HasColumnType("int");

                    b.Property<bool?>("ViajeSalida")
                        .HasColumnType("bit");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("BufferERPDocumentos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPEntradas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaPrevista")
                        .HasColumnType("datetime");

                    b.Property<string>("MatriculaCamion")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("MatriculaRemolque")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("NombreConductor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool?>("PostDesinfeccion")
                        .HasColumnType("bit");

                    b.Property<bool?>("PreDesinfeccion")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Preparado2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RefConductor")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReferenciaCompra")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Serie")
                        .HasColumnType("int");

                    b.Property<string>("SerieNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<bool?>("exportado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("idChofer")
                        .HasColumnType("int");

                    b.Property<int?>("idEmpresaTransporte")
                        .HasColumnType("int");

                    b.Property<int?>("idMES")
                        .HasColumnType("int");

                    b.Property<int?>("idProveedor")
                        .HasColumnType("int");

                    b.Property<int?>("idTarjeta")
                        .HasColumnType("int");

                    b.Property<int?>("idVehiculo")
                        .HasColumnType("int");

                    b.Property<bool?>("isExport")
                        .HasColumnType("bit");

                    b.Property<string>("refEmpresaTransporte")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("refProveedor")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.ToTable("BufferERPEntradas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPEntradasLineas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Bultos")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Caducidad")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Cajon1")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon10")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon2")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon3")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon4")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon5")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon6")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon7")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon8")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon9")
                        .HasColumnType("bit");

                    b.Property<string>("CampoLIbre2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CampoLibre1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("CantidadPedida")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<int?>("Destino1")
                        .HasColumnType("int");

                    b.Property<string>("Destino1Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Destino2")
                        .HasColumnType("int");

                    b.Property<string>("Destino2Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Destino3")
                        .HasColumnType("int");

                    b.Property<string>("Destino3Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Destino4")
                        .HasColumnType("int");

                    b.Property<string>("Destino4Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Envase")
                        .HasColumnType("int");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Formato")
                        .HasColumnType("int");

                    b.Property<bool?>("FueraCajon")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LoteFecha")
                        .HasColumnType("datetime");

                    b.Property<string>("LoteNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LoteRef")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("NetoOrigen")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<string>("NombreSerie")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("NumLinea")
                        .HasColumnType("int");

                    b.Property<int?>("NumLineaCompra")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroEntrada")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool?>("PagarKgTeoricos")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PesoBruto")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PesoNeto")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("PesoTara")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("Ref2Producto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefCompra")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefERPEnvases")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefERPFormatos")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefERPUnidades")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefEntrada")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefProducto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefProveedor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<int?>("idBufferEntrada")
                        .HasColumnType("int");

                    b.Property<int?>("idEntradaMes")
                        .HasColumnType("int");

                    b.Property<int?>("idLiniaMes")
                        .HasColumnType("int");

                    b.Property<int?>("idLote")
                        .HasColumnType("int");

                    b.Property<int?>("idModulo")
                        .HasColumnType("int");

                    b.Property<int?>("idProducto")
                        .HasColumnType("int");

                    b.Property<int?>("idSerie")
                        .HasColumnType("int");

                    b.Property<bool?>("isExport")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("idBufferEntrada");

                    b.ToTable("BufferERPEntradasLineas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPEntradasLineasLote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdEntradaLineaMes")
                        .HasColumnType("int");

                    b.Property<int?>("IdEntradaMes")
                        .HasColumnType("int");

                    b.Property<int?>("IdLineaEntrada")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LoteFecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LoteFechaCaducidad")
                        .HasColumnType("datetime");

                    b.Property<int?>("LoteId")
                        .HasColumnType("int");

                    b.Property<string>("LoteNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LoteProveedor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LoteProveedorFCad")
                        .HasColumnType("datetime");

                    b.Property<string>("LoteRef")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("NumLineaEntrada")
                        .HasColumnType("int");

                    b.Property<int?>("NumLoteLineaEntrada")
                        .HasColumnType("int");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("ProductoNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProductoReferencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("SerieId")
                        .HasColumnType("int");

                    b.Property<string>("SerieNombre")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdLineaEntrada");

                    b.ToTable("BufferERPEntradasLineasLote");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPFormulaProductosFinales", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Principal")
                        .HasColumnType("bit");

                    b.Property<string>("RefFormula")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefProducto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<int?>("idFormula")
                        .HasColumnType("int");

                    b.Property<int?>("idProducto")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idFormula");

                    b.ToTable("BufferERPFormulaProductosFinales");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPFormulas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<bool?>("EsMedicamento")
                        .HasColumnType("bit");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdERPFormula")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("RefProducto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<bool?>("VersionNueva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("id");

                    b.ToTable("BufferERPFormulas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPImprimirDocumentos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdEntrada")
                        .HasColumnType("int");

                    b.Property<int?>("IdSalida")
                        .HasColumnType("int");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<int?>("RefERP")
                        .HasColumnType("int");

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("id", "Preparado", "Tratado", "FTratado", "Errores", "RefERP", "IdEntrada", "IdSalida", "FechaInsercion")
                        .HasName("IBufferERPImprimirDocumentos1");

                    b.HasIndex("id", "Preparado", "Tratado", "FTratado", "Errores", "RefERP", "IdSalida", "IdEntrada", "FechaInsercion")
                        .HasName("IBufferERPImprimirDocumentos2");

                    b.ToTable("BufferERPImprimirDocumentos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPLinOrdenes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CaducidadLoteProducto")
                        .HasColumnType("date");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("CantidadTotal")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("LoteProducto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombreOrden")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("NumLinea")
                        .HasColumnType("int");

                    b.Property<string>("RefProducto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<bool?>("Tratado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("idCaborden")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idCaborden");

                    b.ToTable("BufferERPLinOrdenes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPPedidoVenta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conductor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaPrevista")
                        .HasColumnType("datetime");

                    b.Property<string>("MatriculaRemolque")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MatriculaVehiculo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("RefChofer")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefCliente")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefDomicilio")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefERP")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefEmpTransporte")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefEnvase")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefFormato")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefFormula")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefPDescarga")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefProducto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefUnidades")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefVehiculo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefVersionFormula")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("BufferERPPedidoVenta");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPPedidoVentaExtra", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Modulo")
                        .HasColumnType("int");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("RefProducto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefUnidad")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<int?>("idPedidoVenta")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("BufferERPPedidoVentaExtra");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPProducidos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CantidadCicloOriginal")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("CantidadTotal")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaOrden")
                        .HasColumnType("datetime");

                    b.Property<string>("FormulaNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FormulaRefERP")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("FormulaReferencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("FormulaVersionNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FormulaVersionRefERP")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("FormulaVersionReferencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("IdOrdenLegitimo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LoteFCaducidad")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LoteFFabricacion")
                        .HasColumnType("date");

                    b.Property<string>("LoteNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MedicacionNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MedidorRef")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ModuloNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ModuloRef")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("ModuloTipo")
                        .HasColumnType("int");

                    b.Property<int?>("NCiclos")
                        .HasColumnType("int");

                    b.Property<string>("ProductoNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProductoReferencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Tratado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UbicacionNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("idDesglose")
                        .HasColumnType("int");

                    b.Property<int?>("idFormula")
                        .HasColumnType("int");

                    b.Property<int?>("idFormulaVersion")
                        .HasColumnType("int");

                    b.Property<int?>("idLote")
                        .HasColumnType("int");

                    b.Property<int?>("idMedicacion")
                        .HasColumnType("int");

                    b.Property<int?>("idModulo")
                        .HasColumnType("int");

                    b.Property<int?>("idOrden")
                        .HasColumnType("int");

                    b.Property<int?>("idProducto")
                        .HasColumnType("int");

                    b.Property<int?>("idUbicacion")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Tratado")
                        .HasName("_dta_index_BufferERPProducidos_1");

                    b.ToTable("BufferERPProducidos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPProductos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Caducidad")
                        .HasColumnType("int");

                    b.Property<float?>("Densidad")
                        .HasColumnType("real");

                    b.Property<decimal?>("DesviacionMaxima")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("EnvaseRefERP")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<string>("Familia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FormatoRefERP")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("IdERPProducto")
                        .HasColumnType("int");

                    b.Property<bool?>("Medicamento")
                        .HasColumnType("bit");

                    b.Property<int?>("Medidor")
                        .HasColumnType("int");

                    b.Property<int?>("Modulo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NumeroRegistro")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("PausaPosteriorDosificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Referencia2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("TiempoEspera")
                        .HasColumnType("int");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<decimal?>("ToleranciaInferior")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("ToleranciaSuperior")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<string>("UnidadRefERP")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.ToTable("BufferERPProductos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPProveedores", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abreviado")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("CIF")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Inhabilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Poblacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("BufferERPProveedores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPRegularizaciones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("LoteId")
                        .HasColumnType("int");

                    b.Property<string>("LoteNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("ProductoNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProductoRef")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProductoRef2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("TipoTxt")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<int?>("idMovimientoMes")
                        .HasColumnType("int");

                    b.Property<int?>("idUbicacion")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("BufferERPRegularizaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPSalidas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaExpedicion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaPrevista")
                        .HasColumnType("datetime");

                    b.Property<string>("MatriculaCamion")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("NombreChofer")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombreSerie")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("RefCliente")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefDomicilio")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Serie")
                        .HasColumnType("int");

                    b.Property<string>("SerieNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<bool?>("esExport")
                        .HasColumnType("bit");

                    b.Property<int?>("idMES")
                        .HasColumnType("int");

                    b.Property<int?>("idSerie")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("BufferERPSalidas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPSalidasLinMedicamentos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Bultos")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdUnidad")
                        .HasColumnType("int");

                    b.Property<string>("MedicamentoNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MedicamentoReferencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("PrecioUnidad")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("RefERPEnvases")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefERPFormatos")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefERPUnidades")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<int?>("idEnvase")
                        .HasColumnType("int");

                    b.Property<int?>("idFormato")
                        .HasColumnType("int");

                    b.Property<int?>("idMedicamento")
                        .HasColumnType("int");

                    b.Property<int?>("idSalidasLinia")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idSalidasLinia");

                    b.ToTable("BufferERPSalidasLinMedicamentos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPSalidasLinias", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Bruto")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("Bultos")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<bool?>("Cajon1")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon10")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon2")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon3")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon4")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon5")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon6")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon7")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon8")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon9")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("FueraCajon")
                        .HasColumnType("bit");

                    b.Property<string>("ModuloNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("Neto")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<string>("NombreDomicilio")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombreSerie")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("NumLineaVenta")
                        .HasColumnType("int");

                    b.Property<int?>("NumLineaViaje")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("Origen1")
                        .HasColumnType("int");

                    b.Property<string>("Origen1Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Origen2")
                        .HasColumnType("int");

                    b.Property<string>("Origen2Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Origen3")
                        .HasColumnType("int");

                    b.Property<string>("Origen3Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Origen4")
                        .HasColumnType("int");

                    b.Property<string>("Origen4Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("Precio")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<decimal?>("PrecioTransporte")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<decimal?>("PrecioUnidad")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("RefDomicilio")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefERPEnvases")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefERPFormatos")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefERPUnidades")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefEnvase")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefPedidoERP")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefProducto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefPuntoDescarga")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefVenta")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Tara")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<int?>("idDomicilio")
                        .HasColumnType("int");

                    b.Property<int?>("idFormato")
                        .HasColumnType("int");

                    b.Property<int?>("idLiniaMes")
                        .HasColumnType("int");

                    b.Property<int?>("idSalidaMes")
                        .HasColumnType("int");

                    b.Property<int?>("idSalidas")
                        .HasColumnType("int");

                    b.Property<int?>("idSerie")
                        .HasColumnType("int");

                    b.Property<int?>("idUnidad")
                        .HasColumnType("int");

                    b.Property<int?>("idViajeMES")
                        .HasColumnType("int");

                    b.Property<int?>("idmodulo")
                        .HasColumnType("int");

                    b.Property<int?>("idviajes")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idSalidas");

                    b.HasIndex("idviajes");

                    b.ToTable("BufferERPSalidasLinias");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPSalidasLiniasLote", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NombreSerie")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("NumLoteLineaViaje")
                        .HasColumnType("int");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("ProductoNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProductoReferencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<int?>("idLineaSalida")
                        .HasColumnType("int");

                    b.Property<int?>("idLineaSalidaMedicamento")
                        .HasColumnType("int");

                    b.Property<int?>("idLiniaMes")
                        .HasColumnType("int");

                    b.Property<int?>("idLoteSalida")
                        .HasColumnType("int");

                    b.Property<int?>("idProducto")
                        .HasColumnType("int");

                    b.Property<int?>("idSalidaMes")
                        .HasColumnType("int");

                    b.Property<int?>("idSerie")
                        .HasColumnType("int");

                    b.Property<int?>("idViajeMES")
                        .HasColumnType("int");

                    b.Property<string>("nombreLote")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("refLote")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.HasIndex("idLineaSalida");

                    b.HasIndex("idLineaSalidaMedicamento");

                    b.ToTable("BufferERPSalidasLiniasLote");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPSalidasViajes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmpresaTransporteNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("EstadoTransito")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaFinTransito")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MatriculaCamion")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("MatriculaRemolque")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("NombreConductor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("RefCliente")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefConductor")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefDomicilio")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefEmpresaTransporte")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Serie")
                        .HasColumnType("int");

                    b.Property<string>("SerieNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<int?>("idChofer")
                        .HasColumnType("int");

                    b.Property<int?>("idEmpresaTransporte")
                        .HasColumnType("int");

                    b.Property<int?>("idMES")
                        .HasColumnType("int");

                    b.Property<int?>("idSalidas")
                        .HasColumnType("int");

                    b.Property<int?>("idTarjeta")
                        .HasColumnType("int");

                    b.Property<int?>("idVehiculo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("BufferERPSalidasViajes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPSolicitudRegularizacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaEnvio")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaRespuesta")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaSolicitud")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdLote")
                        .HasColumnType("int");

                    b.Property<int?>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("Respuesta")
                        .HasColumnType("int");

                    b.Property<string>("TxtErrores")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.HasIndex("IdLote");

                    b.HasIndex("IdUbicacion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("BufferERPSolicitudRegularizacion");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPStocks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Acumulativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FCaducidad")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FFabricacion")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FProducido")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Lote")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Referencia2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<bool?>("Tratado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("idUbicacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BufferERPStocks");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPVehiculos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Chofer")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmpresaTransporte")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Matricula")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("PesoMaximo")
                        .HasColumnType("int");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remolque")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<float?>("Tara")
                        .HasColumnType("real");

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("BufferERPVehiculos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPVentas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("ClienteRef")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DomicilioId")
                        .HasColumnType("int");

                    b.Property<string>("DomicilioRef")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaEntrega")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PrecioTransporte")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("RefERP")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Serie")
                        .HasColumnType("int");

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<bool?>("isExport")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("BufferERPVentas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPVentasLineas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Bultos")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal?>("PrecioUnidad")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("RefDomicilio")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefEnvase")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefFormato")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefProducto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefPuntoDescarga")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefUnidad")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RevVenta")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Serie")
                        .HasColumnType("int");

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<int?>("linea")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("BufferERPVentasLineas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPVersiones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 5)");

                    b.Property<string>("Errores")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FImportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInsercion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdERPVersion")
                        .HasColumnType("int");

                    b.Property<decimal?>("LimitePesoCiclo")
                        .HasColumnType("numeric(18, 5)");

                    b.Property<bool?>("LimpiezaPosteriorObligada")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Preparado")
                        .HasColumnType("bit");

                    b.Property<string>("RefERPUnidades")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefFormula")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<int?>("idFormula")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idFormula");

                    b.ToTable("BufferERPVersiones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferProducidos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BitAux1")
                        .HasColumnType("bit");

                    b.Property<bool?>("BitAux2")
                        .HasColumnType("bit");

                    b.Property<int?>("Camino")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<bool?>("CantidadManual")
                        .HasColumnType("bit");

                    b.Property<int?>("Ciclo")
                        .HasColumnType("int");

                    b.Property<int?>("CodError")
                        .HasColumnType("int");

                    b.Property<int?>("Destino")
                        .HasColumnType("int");

                    b.Property<int?>("DuracionStamp")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaProducido")
                        .HasColumnName("FechaConsumido")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaRecibido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaTratado")
                        .HasColumnType("datetime");

                    b.Property<bool?>("FinalCiclo")
                        .HasColumnType("bit");

                    b.Property<bool?>("FinalMedidor")
                        .HasColumnType("bit");

                    b.Property<bool?>("FinalOrden")
                        .HasColumnType("bit");

                    b.Property<bool?>("FinalSecuencia")
                        .HasColumnType("bit");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<decimal?>("Humedad")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("IndicadorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("KWhEfectivo")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal?>("KWhTotal")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int?>("MedidorId")
                        .HasColumnType("int");

                    b.Property<int?>("ModuloId")
                        .HasColumnType("int");

                    b.Property<int?>("MultidosiId")
                        .HasColumnType("int");

                    b.Property<int?>("NumCorrecion")
                        .HasColumnType("int");

                    b.Property<int?>("OpcConfigId")
                        .HasColumnType("int");

                    b.Property<int?>("OperacionId")
                        .HasColumnType("int");

                    b.Property<int?>("Orden")
                        .HasColumnType("int");

                    b.Property<bool?>("OrdenCancelada")
                        .HasColumnType("bit");

                    b.Property<int?>("Origen")
                        .HasColumnType("int");

                    b.Property<decimal?>("Ph")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("PhId")
                        .HasColumnType("int");

                    b.Property<int?>("ProdCodigo")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProdDensidad")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("ProdIdLoteActual")
                        .HasColumnType("int");

                    b.Property<string>("ProdNombre")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ProdNombreLoteActual")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("Secuencia")
                        .HasColumnType("int");

                    b.Property<decimal?>("Temperatura")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("TemperaturaId")
                        .HasColumnType("int");

                    b.Property<int?>("TiempoEfectivo")
                        .HasColumnType("int");

                    b.Property<int?>("TiempoTotal")
                        .HasColumnType("int");

                    b.Property<int?>("TotalCiclos")
                        .HasColumnType("int");

                    b.Property<bool?>("Tratado")
                        .HasColumnType("bit");

                    b.Property<string>("TxtError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("ValidacionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Variable1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Variable2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("idDosificacionMes")
                        .HasColumnType("int");

                    b.Property<int?>("idopc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinalMedidor")
                        .HasName("_dta_index_BufferProducidos_1");

                    b.HasIndex("OpcConfigId");

                    b.ToTable("BufferProducidos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.CabOrdenes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 3)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Entrada")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaFinal")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("Formula")
                        .HasColumnType("int");

                    b.Property<int?>("LoteDestino")
                        .HasColumnType("int");

                    b.Property<int?>("Modulo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Prioridad")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoDestino")
                        .HasColumnType("int");

                    b.Property<int?>("SerieOld")
                        .HasColumnType("int");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("UbicacionDestino")
                        .HasColumnType("int");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.Property<int?>("ViajeSalida")
                        .HasColumnType("int");

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Entrada");

                    b.HasIndex("Formula");

                    b.HasIndex("LoteDestino");

                    b.HasIndex("Modulo");

                    b.HasIndex("ProductoDestino");

                    b.HasIndex("UbicacionDestino");

                    b.HasIndex("Version");

                    b.HasIndex("ViajeSalida");

                    b.HasIndex("id", "Nombre", "FechaCreacion", "FechaInicio", "FechaFinal", "Tipo", "ProductoDestino", "UbicacionDestino", "LoteDestino", "Prioridad", "Formula", "Cantidad", "Version", "idOld", "SerieOld", "Entrada", "ViajeSalida", "Modulo")
                        .HasName("IndexCabOrdenes_1");

                    b.ToTable("CabOrdenes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Camino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Defecto")
                        .HasColumnType("bit");

                    b.Property<int>("IdPlc")
                        .HasColumnType("int");

                    b.Property<int>("MedidorId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<byte>("Type")
                        .HasColumnName("Tipo")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("MedidorId");

                    b.ToTable("Caminos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Caudal", b =>
                {
                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("UbicacionId")
                        .HasColumnType("int");

                    b.Property<decimal>("CaudalEntrada")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal>("CaudalSalida")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<byte>("Mode")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("PorcentajeAjusteAutomaticoMaximo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValueSql("5");

                    b.Property<decimal>("PorcentajeAjusteMaximo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValueSql("10");

                    b.HasKey("ProductoId", "UbicacionId")
                        .HasName("PK__Caudales__E533DB7E003CA3A8");

                    b.HasIndex("UbicacionId");

                    b.ToTable("Caudales");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.CertificadoDesinfeccion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Conductor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DNIResponsable")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Desinfectante")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("FechaCertificado")
                        .HasColumnType("datetime");

                    b.Property<string>("Matricula")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("NRegistroCentro")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombreCentro")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Precinto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Remolque")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Responsable")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Serie")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("idCamion")
                        .HasColumnType("int");

                    b.Property<int?>("idOrden")
                        .HasColumnType("int");

                    b.Property<int?>("idTransportista")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Serie");

                    b.HasIndex("idCamion");

                    b.HasIndex("idOrden");

                    b.HasIndex("idTransportista");

                    b.ToTable("CertificadoDesinfeccion");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Choferes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("CIF")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Pais")
                        .HasColumnType("int");

                    b.Property<string>("Poblacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Provincia")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Refrescado")
                        .HasColumnType("bit");

                    b.Property<int?>("Tarjeta")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Pais");

                    b.HasIndex("Provincia");

                    b.HasIndex("Tarjeta");

                    b.ToTable("Choferes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CIF")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Inhabilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Pais")
                        .HasColumnType("int");

                    b.Property<string>("Poblacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("PorDefecto")
                        .HasColumnType("bit");

                    b.Property<int?>("Provincia")
                        .HasColumnType("int");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Refrescado")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Pais");

                    b.HasIndex("Provincia");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.CompActivosLista", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool?>("Medicamento")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Unidad");

                    b.ToTable("CompActivosLista");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Componentes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Automatico")
                        .HasColumnType("bit");

                    b.Property<float?>("Cantidad")
                        .HasColumnType("real");

                    b.Property<decimal?>("Consigna")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("ConsignaPausa")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("DosiVariable1")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal?>("DosiVariable2")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<bool?>("DosificarProductoAnterior")
                        .HasColumnType("bit");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<int?>("Formato")
                        .HasColumnType("int");

                    b.Property<int?>("Grupo")
                        .HasColumnType("int");

                    b.Property<decimal?>("Histeresys")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<int?>("IdTempControl")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaxAlarma")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<int?>("Medidor")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinAlarma")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<int?>("Modulo")
                        .HasColumnType("int");

                    b.Property<int?>("OperAccion")
                        .HasColumnType("int");

                    b.Property<int?>("OperMotor")
                        .HasColumnType("int");

                    b.Property<int?>("OperTiempo")
                        .HasColumnType("int");

                    b.Property<decimal?>("OperVariable")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<decimal?>("OperVariable2")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<int?>("Orden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PausaPosteriorDosificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<float?>("Porcentaje")
                        .HasColumnType("real");

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<int?>("TempModo")
                        .HasColumnType("int");

                    b.Property<string>("TextoVariable")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("TipoDosificacion")
                        .HasColumnType("int");

                    b.Property<decimal?>("ToleranciaInferior")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("ToleranciaSuperior")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<decimal?>("ZonaMuerta")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.Property<int?>("idPlantilla")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Formato");

                    b.HasIndex("IdTempControl");

                    b.HasIndex("Medidor");

                    b.HasIndex("Modulo");

                    b.HasIndex("OperAccion");

                    b.HasIndex("OperMotor");

                    b.HasIndex("Producto");

                    b.HasIndex("Unidad");

                    b.HasIndex("Version");

                    b.HasIndex("idPlantilla");

                    b.ToTable("Componentes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ComponentesActivos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Cantidad")
                        .HasColumnType("real");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdCompActivosLista")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int>("Producto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCompActivosLista");

                    b.HasIndex("Producto");

                    b.ToTable("ComponentesActivos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Compras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Departamento")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Entrega")
                        .HasColumnType("datetime");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fin")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Impresa")
                        .HasColumnType("bit");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<decimal?>("PrecioTransporte")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("Proveedor")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ReferenciaContrato")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Refrescado")
                        .HasColumnType("bit");

                    b.Property<int?>("Serie")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaFecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("idContrato")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Departamento");

                    b.HasIndex("Proveedor");

                    b.HasIndex("idContrato");

                    b.HasIndex("Serie", "Numero")
                        .IsUnique()
                        .HasName("IX_Compras")
                        .HasFilter("[Serie] IS NOT NULL AND [Numero] IS NOT NULL");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Comprobaciones", b =>
                {
                    b.Property<string>("Tabla")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Comprobacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Activo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ComprobacionNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TablaNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Tabla", "Comprobacion");

                    b.ToTable("Comprobaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ConfigWCF", b =>
                {
                    b.Property<string>("Campo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Campo");

                    b.ToTable("ConfigWCF");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Contadores", b =>
                {
                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Contador")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdSerie")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Nombre");

                    b.ToTable("Contadores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Contratos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool?>("Caduca")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CantidadAsignada")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("CantidadXPedido")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int?>("DiasEntrePedidos")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdDireccionCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<decimal?>("PrecioTransporte")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("Unidad");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ControlesNIR", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ActivarMaximo")
                        .HasColumnType("bit");

                    b.Property<bool?>("ActivarMaximoAlerta")
                        .HasColumnType("bit");

                    b.Property<bool?>("ActivarMinimo")
                        .HasColumnType("bit");

                    b.Property<bool?>("ActivarMinimoAlerta")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("ValorEsperado")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("ValorMaximo")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("ValorMaximoAlerta")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("ValorMinimo")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("ValorMinimoAlerta")
                        .HasColumnType("numeric(18, 3)");

                    b.HasKey("id");

                    b.ToTable("ControlesNIR");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ControlesNIRProductos", b =>
                {
                    b.Property<int>("idControlNir")
                        .HasColumnType("int");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Obligatorio")
                        .HasColumnType("bit");

                    b.Property<bool?>("Restrictivo")
                        .HasColumnType("bit");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("idControlNir", "idProducto");

                    b.HasIndex("idProducto");

                    b.ToTable("ControlesNIRProductos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.DashboardsLib", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("DatosDashboard")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("FechaUltima")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int?>("IdDashboardBase")
                        .HasColumnType("int");

                    b.Property<bool?>("ImpAutomatico")
                        .HasColumnType("bit");

                    b.Property<string>("ImpresoraDefecto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsBase")
                        .HasColumnType("bit");

                    b.Property<string>("NombreDashboard")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("NumCopias")
                        .HasColumnType("int");

                    b.Property<string>("UltimoEditor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.Property<bool?>("VisibleUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Vista")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("VistaXML")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdDashboardBase");

                    b.ToTable("DashboardsLib");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.DashboardsLibCategorias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("isModificable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("isVisible")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("DashboardsLibCategorias");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Departamentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Analisi")
                        .HasColumnType("int");

                    b.Property<bool?>("CaducidadAutomatica")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("DesinfeccionDNIResponsable")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DesinfeccionDesinfectante")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DesinfeccionNombreCentro")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DesinfeccionNumRegistro")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("DesinfeccionResponsable")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Empresa")
                        .HasColumnType("int");

                    b.Property<int?>("EtiquetaControl")
                        .HasColumnType("int");

                    b.Property<int?>("EtiquetaEntradas")
                        .HasColumnType("int");

                    b.Property<int?>("EtiquetaGranel")
                        .HasColumnType("int");

                    b.Property<int?>("EtiquetaMuestras")
                        .HasColumnType("int");

                    b.Property<int?>("EtiquetaSacos")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("FormatoLote")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int?>("MetodoLote")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("PeriodoCaducidad")
                        .HasColumnType("int");

                    b.Property<string>("Poblacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Provincia")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Telefono2")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Provincia");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Desgloses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BitAux1")
                        .HasColumnType("bit");

                    b.Property<bool?>("BitAux2")
                        .HasColumnType("bit");

                    b.Property<int?>("Camino")
                        .HasColumnType("int");

                    b.Property<float?>("Cantidad")
                        .HasColumnType("real");

                    b.Property<bool?>("CantidadManual")
                        .HasColumnType("bit");

                    b.Property<float?>("CantidadPrincipal")
                        .HasColumnType("real");

                    b.Property<int>("Ciclo")
                        .HasColumnType("int");

                    b.Property<int?>("DuracionStamp")
                        .HasColumnType("int");

                    b.Property<bool?>("Editado")
                        .HasColumnType("bit");

                    b.Property<int?>("Envase")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<bool?>("FinalCiclo")
                        .HasColumnType("bit");

                    b.Property<bool?>("FinalMedidor")
                        .HasColumnType("bit");

                    b.Property<bool?>("FinalOrden")
                        .HasColumnType("bit");

                    b.Property<bool?>("FinalSecuencia")
                        .HasColumnType("bit");

                    b.Property<bool?>("Finalizado")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Humedad")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("IdOld")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int?>("IndicadorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("KWhEfectivo")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal?>("KWhTotal")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int?>("Lote")
                        .HasColumnType("int");

                    b.Property<int?>("MedidorId")
                        .HasColumnType("int");

                    b.Property<int?>("MultidosiId")
                        .HasColumnType("int");

                    b.Property<int?>("NumCorrecion")
                        .HasColumnType("int");

                    b.Property<int?>("OperacionId")
                        .HasColumnType("int");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<bool?>("OrdenCancelada")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Ph")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("PhId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ProdDensidad")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<string>("ProdNombre")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ProdNombreLoteActual")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<int?>("Secuencia")
                        .HasColumnType("int");

                    b.Property<int?>("Serie")
                        .HasColumnType("int");

                    b.Property<float?>("Servida")
                        .HasColumnType("real");

                    b.Property<decimal?>("Temperatura")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<int?>("TemperaturaId")
                        .HasColumnType("int");

                    b.Property<int?>("TiempoEfectivo")
                        .HasColumnType("int");

                    b.Property<int?>("TiempoTotal")
                        .HasColumnType("int");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("TipoRegistro")
                        .HasColumnType("int");

                    b.Property<int?>("TotalCiclos")
                        .HasColumnType("int");

                    b.Property<int?>("Ubicacion")
                        .HasColumnType("int");

                    b.Property<decimal?>("UdsEnvase")
                        .HasColumnType("decimal(18, 5)")
                        .HasComputedColumnSql("([dbo].[EnvasesDeStock]([Envase],[Cantidad]))");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("ValidacionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Variable1")
                        .HasColumnType("decimal(12, 5)");

                    b.Property<decimal?>("Variable2")
                        .HasColumnType("decimal(12, 5)");

                    b.HasKey("Id");

                    b.HasIndex("Envase");

                    b.HasIndex("Fecha")
                        .HasName("IndDesgloses_Fecha");

                    b.HasIndex("FinalMedidor")
                        .HasName("_dta_index_Desgloses_1");

                    b.HasIndex("Orden");

                    b.HasIndex("Producto");

                    b.HasIndex("Ubicacion");

                    b.HasIndex("Unidad");

                    b.HasIndex("Lote", "Cantidad", "Orden")
                        .HasName("_dta_index_Desgloses_6_1357247890__K3_6_8");

                    b.HasIndex("MedidorId", "Orden", "Producto", "Ubicacion", "Lote")
                        .HasName("IndDesgloses_MedidorOrdenProductoUbicacionLote");

                    b.HasIndex("Id", "Producto", "Lote", "Ubicacion", "Cantidad", "Ciclo", "Fecha", "Temperatura", "Humedad", "TiempoEfectivo", "TiempoTotal", "KWhEfectivo", "KWhTotal", "MedidorId", "Orden")
                        .HasName("IndDesgloses_Orden");

                    b.ToTable("Desgloses");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Destinos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("ComprobarProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("DestinoTraspasoAutomatico")
                        .HasColumnType("int");

                    b.Property<bool?>("DestinoVolteo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int>("Modulo")
                        .HasColumnType("int");

                    b.Property<bool?>("TraspasoAutomatico")
                        .HasColumnType("bit");

                    b.Property<int?>("Ubicacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Modulo");

                    b.HasIndex("Ubicacion");

                    b.ToTable("Destinos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.DestinosMedidores", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Incompatible")
                        .HasColumnType("bit");

                    b.Property<bool?>("Requerido")
                        .HasColumnType("bit");

                    b.Property<int?>("idDestino")
                        .HasColumnType("int");

                    b.Property<int?>("idMedidor")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idDestino");

                    b.HasIndex("idMedidor");

                    b.ToTable("DestinosMedidores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Disposiciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Cantidad")
                        .HasColumnType("real");

                    b.Property<float?>("CantidadPrincipal")
                        .HasColumnType("real");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Finalizado")
                        .HasColumnType("bit");

                    b.Property<int?>("Formato")
                        .HasColumnType("int");

                    b.Property<int>("IdOld")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int?>("Lote")
                        .HasColumnType("int");

                    b.Property<int?>("Orden")
                        .HasColumnType("int");

                    b.Property<float?>("Porcentaje")
                        .HasColumnType("real");

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<int>("Serie")
                        .HasColumnType("int");

                    b.Property<int?>("SerieOld")
                        .HasColumnType("int");

                    b.Property<float?>("Servida")
                        .HasColumnType("real");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("TipoRegistro")
                        .HasColumnType("int");

                    b.Property<int?>("Ubicacion")
                        .HasColumnType("int");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<int?>("ordenacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex("Formato");

                    b.HasIndex("Lote");

                    b.HasIndex("Orden");

                    b.HasIndex("Producto");

                    b.HasIndex("Ubicacion");

                    b.HasIndex("Unidad");

                    b.HasIndex("Id", "Serie", "IdOld", "Producto", "Lote", "Ubicacion", "Cantidad", "Servida", "Unidad", "Tipo", "CantidadPrincipal", "TipoRegistro", "Finalizado", "Porcentaje", "Importado", "Exportado", "ordenacion", "SerieOld", "Orden")
                        .HasName("IDisposiciones1");

                    b.ToTable("Disposiciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Documentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("TipoMovimiento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Domicilios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cliente")
                        .HasColumnType("int");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Especie")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Inhabilitado")
                        .HasColumnType("bit");

                    b.Property<int?>("IntegraId")
                        .HasColumnType("int");

                    b.Property<string>("LoteAnimalActual")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("MarcaOficial")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("NumeroEspecies")
                        .HasColumnType("int");

                    b.Property<int?>("Pais")
                        .HasColumnType("int");

                    b.Property<string>("Poblacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Provincia")
                        .HasColumnType("int");

                    b.Property<string>("REGA")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Refrescado")
                        .HasColumnType("bit");

                    b.Property<string>("Responsable")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Simogan")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Cliente");

                    b.HasIndex("Especie");

                    b.HasIndex("Pais");

                    b.HasIndex("Provincia");

                    b.ToTable("Domicilios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Dominios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Departamento")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<int?>("Familia")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Departamento");

                    b.HasIndex("Familia");

                    b.ToTable("Dominios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Dosificaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Afino")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<float?>("CantidadActual")
                        .HasColumnType("real");

                    b.Property<decimal?>("CantidadPrincipal")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("CicloActual")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("ConVibrador")
                        .HasColumnType("int");

                    b.Property<decimal?>("Consigna")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("ConsignaPausa")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("DosiVariable1")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal?>("DosiVariable2")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal?>("DosiVariable3")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<int?>("DosificacionActual")
                        .HasColumnType("int");

                    b.Property<bool?>("DosificarProductoAnterior")
                        .HasColumnType("bit");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoActual")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fin")
                        .HasColumnType("datetime");

                    b.Property<int?>("Formato")
                        .HasColumnType("int");

                    b.Property<int?>("Grupo")
                        .HasColumnType("int");

                    b.Property<decimal?>("Histeresys")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<int?>("IdModulo")
                        .HasColumnType("int");

                    b.Property<int>("IdOld")
                        .HasColumnType("int");

                    b.Property<int?>("IdOperAccion")
                        .HasColumnType("int");

                    b.Property<int?>("IdOperMotor")
                        .HasColumnType("int");

                    b.Property<int?>("IdTempControl")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Inicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("Lote")
                        .HasColumnType("int");

                    b.Property<int?>("LoteActual")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaxAlarma")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<int?>("Medidor")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinAlarma")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<int?>("NumCorrecion")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroPesadas")
                        .HasColumnType("int");

                    b.Property<int?>("OperTiempo")
                        .HasColumnType("int");

                    b.Property<decimal?>("OperVariable")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<decimal?>("OperVariable2")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<bool?>("OrigenERP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PausaPosteriorDosificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Porcentaje")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("PosicionDosificacion")
                        .HasColumnType("int");

                    b.Property<int?>("PosicionDosificacionPLC")
                        .HasColumnType("int");

                    b.Property<int?>("PosicionMultidosiPLC")
                        .HasColumnType("int");

                    b.Property<int?>("PosicionOperacionPLC")
                        .HasColumnType("int");

                    b.Property<int?>("Prioridad")
                        .HasColumnType("int");

                    b.Property<int?>("Proceso")
                        .HasColumnType("int");

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoActual")
                        .HasColumnType("int");

                    b.Property<string>("RefERP1")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefERP2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefERP3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Serie")
                        .HasColumnType("int");

                    b.Property<float?>("Servida")
                        .HasColumnType("real");

                    b.Property<int?>("TempModo")
                        .HasColumnType("int");

                    b.Property<string>("TextoVariable")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("TipoAutoRespuesta")
                        .HasColumnType("int");

                    b.Property<int?>("TipoRegistro")
                        .HasColumnType("int");

                    b.Property<decimal?>("ToleranciaInferior")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("ToleranciaSuperior")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("Ubicacion")
                        .HasColumnType("int");

                    b.Property<int?>("UbicacionActual")
                        .HasColumnType("int");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<int?>("VelocidadLenta")
                        .HasColumnType("int");

                    b.Property<int?>("VelocidadRapida")
                        .HasColumnType("int");

                    b.Property<decimal?>("ZonaMuerta")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<int?>("idComponenteOriginal")
                        .HasColumnType("int");

                    b.Property<int?>("idFormulaOriginal")
                        .HasColumnType("int");

                    b.Property<int?>("idMedGenerador")
                        .HasColumnType("int");

                    b.Property<int?>("idPlantilla")
                        .HasColumnType("int");

                    b.Property<int?>("idVersionOriginal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Formato");

                    b.HasIndex("IdModulo");

                    b.HasIndex("IdOperAccion");

                    b.HasIndex("IdOperMotor");

                    b.HasIndex("IdTempControl");

                    b.HasIndex("Lote");

                    b.HasIndex("LoteActual");

                    b.HasIndex("Medidor");

                    b.HasIndex("Orden");

                    b.HasIndex("Producto");

                    b.HasIndex("ProductoActual");

                    b.HasIndex("Ubicacion");

                    b.HasIndex("Unidad");

                    b.HasIndex("idMedGenerador");

                    b.HasIndex("idPlantilla");

                    b.HasIndex("Id", "Cantidad", "Ubicacion", "Producto")
                        .HasName("PK_DosificacionesProducto");

                    b.HasIndex("Id", "Serie", "IdOld", "Producto", "Formato", "Proceso", "Porcentaje", "Cantidad", "Unidad", "Servida", "NumeroPesadas", "Inicio", "Fin", "Tipo", "Exportado", "Lote", "Ubicacion", "Grupo", "Estado", "Medidor", "CantidadPrincipal", "TipoRegistro", "Importado", "PosicionDosificacion", "CicloActual", "CantidadActual", "UbicacionActual", "ProductoActual", "LoteActual", "DosificacionActual", "IdModulo", "EstadoActual", "ToleranciaSuperior", "ToleranciaInferior", "PausaPosteriorDosificacion", "NumCorrecion", "Afino", "ConVibrador", "VelocidadLenta", "VelocidadRapida", "IdOperMotor", "IdOperAccion", "OperVariable", "TextoVariable", "OperTiempo", "DosificarProductoAnterior", "PosicionDosificacionPLC", "PosicionOperacionPLC", "PosicionMultidosiPLC", "idPlantilla", "idFormulaOriginal", "idComponenteOriginal", "idVersionOriginal", "OperVariable2", "Comentario", "OrigenERP", "IdTempControl", "TempModo", "MinAlarma", "MaxAlarma", "Consigna", "Histeresys", "ConsignaPausa", "ZonaMuerta", "DosiVariable1", "DosiVariable2", "Orden")
                        .HasName("IDosificaciones1");

                    b.ToTable("Dosificaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Electrovalvula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPlc")
                        .HasColumnType("int");

                    b.Property<int>("OpcConfigId")
                        .HasColumnType("int");

                    b.Property<bool>("PlcEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("OpcConfigId");

                    b.ToTable("Electrovalvulas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Empresas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autorizacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AutorizacionDestinoFinal")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CIF")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("Cabecera1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Cabecera2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Cabecera3")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Cabecera4")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Cabecera5")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Logotipo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Poblacion")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RIA")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RSanidad")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RegistroMercantil")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EmpresasTransporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("CIF")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Pais")
                        .HasColumnType("int");

                    b.Property<string>("Poblacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Provincia")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Refrescado")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Pais");

                    b.HasIndex("Provincia");

                    b.ToTable("EmpresasTransporte");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EnlaceERP", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Automatico")
                        .HasColumnType("bit");

                    b.Property<string>("Carpeta")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool?>("CualquierFichero")
                        .HasColumnType("bit");

                    b.Property<bool?>("DependenciaEstricta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("DependienteDe")
                        .HasColumnType("int");

                    b.Property<bool?>("EjecutarDependientePrimero")
                        .HasColumnType("bit");

                    b.Property<bool?>("EliminarFichero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("FicheroEmpiezaPor")
                        .HasColumnType("bit");

                    b.Property<int?>("FormatoFichero")
                        .HasColumnType("int");

                    b.Property<bool?>("IgnorarCabecera")
                        .HasColumnType("bit");

                    b.Property<bool?>("ImportarMP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Manual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombreFichero")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("NombreFicheroDepIgual")
                        .HasColumnType("bit");

                    b.Property<string>("NombreFicheroDepPost")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombreFicheroDepPre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombreTablaXML")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("NumDecimales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((3))");

                    b.Property<int?>("Separador")
                        .HasColumnType("int");

                    b.Property<int?>("SeparadorDecimal")
                        .HasColumnType("int");

                    b.Property<string>("SeparadorPersonalizado")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<bool?>("TamFijo")
                        .HasColumnType("bit");

                    b.Property<int?>("idEnlaceERPTipo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idEnlaceERPTipo");

                    b.ToTable("EnlaceERP");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EnlaceERPAsigUbi", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdUbicacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdUbicacion");

                    b.ToTable("EnlaceERPAsigUbi");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EnlaceERPConversiones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("VNuevo")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("VOriginal")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("campo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("EnlaceERPConversiones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EnlaceERPLinea", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activado")
                        .HasColumnType("bit");

                    b.Property<string>("CampoXML")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("NumCaracteres")
                        .HasColumnType("int");

                    b.Property<int?>("PosicionEnFichero")
                        .HasColumnType("int");

                    b.Property<int?>("PosicionInicial")
                        .HasColumnType("int");

                    b.Property<bool?>("TamFijo")
                        .HasColumnType("bit");

                    b.Property<string>("ValorDefecto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValorExcluido")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValorObligatorio")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("idEnlaceERP")
                        .HasColumnType("int");

                    b.Property<int?>("idEnlaceERPTipoLinea")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idEnlaceERP");

                    b.HasIndex("idEnlaceERPTipoLinea");

                    b.ToTable("EnlaceERPLinea");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EnlaceERPTipo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Exportacion")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importacion")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("EnlaceERPTipo");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EnlaceERPTipoLinea", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CampoBuffer")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("idEnlaceERPTipo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idEnlaceERPTipo");

                    b.ToTable("EnlaceERPTipoLinea");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Entradas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AceptacionDestinoFinal")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Albaran")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("CoeficienteRendimiento")
                        .HasColumnType("int");

                    b.Property<string>("DUA")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoTransito")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FInicio")
                        .HasColumnType("datetime");

                    b.Property<string>("Factura")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaPrevista")
                        .HasColumnType("datetime");

                    b.Property<int?>("LedControlDocumental")
                        .HasColumnType("int");

                    b.Property<string>("MatriculaCamion")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("MatriculaRemolque")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("NombreConductor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool?>("PostDesinfeccion")
                        .HasColumnType("bit");

                    b.Property<bool?>("PostDesinfeccionOK")
                        .HasColumnType("bit");

                    b.Property<bool?>("PreDesinfeccion")
                        .HasColumnType("bit");

                    b.Property<bool?>("PreDesinfeccionOK")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReferenciaCompra")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Serie")
                        .HasColumnType("int");

                    b.Property<bool?>("exportado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("idChofer")
                        .HasColumnType("int");

                    b.Property<int?>("idEmpresaTransporte")
                        .HasColumnType("int");

                    b.Property<int?>("idProveedor")
                        .HasColumnType("int");

                    b.Property<int?>("idTarjeta")
                        .HasColumnType("int");

                    b.Property<int?>("idVehiculo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Serie");

                    b.HasIndex("idChofer");

                    b.HasIndex("idEmpresaTransporte");

                    b.HasIndex("idProveedor");

                    b.HasIndex("idTarjeta");

                    b.HasIndex("idVehiculo");

                    b.HasIndex("id", "FechaCreacion", "FechaPrevista", "idVehiculo", "idChofer", "idProveedor", "idTarjeta", "EstadoTransito", "MatriculaCamion", "NombreConductor", "Observaciones", "idEmpresaTransporte", "LedControlDocumental", "MatriculaRemolque", "Precio", "FInicio", "Referencia", "ReferenciaCompra", "PreDesinfeccion", "PostDesinfeccion", "PreDesinfeccionOK", "PostDesinfeccionOK", "exportado", "Serie", "Numero", "FFin", "Estado")
                        .HasName("IEntradas1");

                    b.ToTable("Entradas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EntradasContratos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<int?>("idContrato")
                        .HasColumnType("int");

                    b.Property<int?>("idEntradasLineas")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idContrato");

                    b.HasIndex("idEntradasLineas");

                    b.ToTable("EntradasContratos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EntradasLineas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AnadirStockPesaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Autorizada")
                        .HasColumnType("bit");

                    b.Property<int?>("Bultos")
                        .HasColumnType("int");

                    b.Property<bool?>("Cajon1")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon10")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon2")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon3")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon4")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon5")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon6")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon7")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon8")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon9")
                        .HasColumnType("bit");

                    b.Property<bool?>("CamionBanera")
                        .HasColumnType("bit");

                    b.Property<string>("CampoLIbre2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CampoLibre1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("CantidadPedida")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<int?>("Destino1")
                        .HasColumnType("int");

                    b.Property<int?>("Destino2")
                        .HasColumnType("int");

                    b.Property<int?>("Destino3")
                        .HasColumnType("int");

                    b.Property<int?>("Destino4")
                        .HasColumnType("int");

                    b.Property<bool?>("EntradaManualPesos")
                        .HasColumnType("bit");

                    b.Property<int?>("Envase")
                        .HasColumnType("int");

                    b.Property<string>("ErrorExport")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoTarjeta")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaFinRecepcion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInicioRecepcion")
                        .HasColumnType("datetime");

                    b.Property<int?>("Formato")
                        .HasColumnType("int");

                    b.Property<bool?>("FueraCajon")
                        .HasColumnType("bit");

                    b.Property<int?>("IdMuestra")
                        .HasColumnType("int");

                    b.Property<int?>("LedAnalisisLaboratorio")
                        .HasColumnType("int");

                    b.Property<int?>("LedAutorizacion")
                        .HasColumnType("int");

                    b.Property<int?>("LedCargaProducto")
                        .HasColumnType("int");

                    b.Property<int?>("LedControlDocumental")
                        .HasColumnType("int");

                    b.Property<int?>("LedDevolucionTarjeta")
                        .HasColumnType("int");

                    b.Property<int?>("Lote")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetoOrigen")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<int?>("NumLineaCompra")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("Origen1")
                        .HasColumnType("int");

                    b.Property<int?>("Origen2")
                        .HasColumnType("int");

                    b.Property<int?>("Origen3")
                        .HasColumnType("int");

                    b.Property<int?>("Origen4")
                        .HasColumnType("int");

                    b.Property<bool?>("PagarKgTeoricos")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PesoBruto")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal?>("PesoNetoManual")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<bool?>("RecogerPesoEnBascula")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tara")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<bool?>("TaraAplicada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("TipoOrigen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("TransitoActivo")
                        .HasColumnType("bit");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<bool?>("exportado")
                        .HasColumnType("bit");

                    b.Property<int?>("idBasculaPesajeBruto")
                        .HasColumnType("int");

                    b.Property<int?>("idBasculaPesajeNeto")
                        .HasColumnType("int");

                    b.Property<int?>("idEntradas")
                        .HasColumnType("int");

                    b.Property<int?>("idModulo")
                        .HasColumnType("int");

                    b.Property<int?>("idOrigenProv")
                        .HasColumnType("int");

                    b.Property<int?>("idProducto")
                        .HasColumnType("int");

                    b.Property<int?>("idProveedor")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Destino1");

                    b.HasIndex("Destino2");

                    b.HasIndex("Destino3");

                    b.HasIndex("Destino4");

                    b.HasIndex("Envase");

                    b.HasIndex("Formato");

                    b.HasIndex("Lote");

                    b.HasIndex("Origen1");

                    b.HasIndex("Origen2");

                    b.HasIndex("Origen3");

                    b.HasIndex("Origen4");

                    b.HasIndex("Unidad");

                    b.HasIndex("idBasculaPesajeBruto");

                    b.HasIndex("idBasculaPesajeNeto");

                    b.HasIndex("idEntradas");

                    b.HasIndex("idModulo");

                    b.HasIndex("idOrigenProv");

                    b.HasIndex("idProducto");

                    b.HasIndex("idProveedor");

                    b.HasIndex("id", "idProducto", "CantidadPedida", "FechaInicioRecepcion", "FechaFinRecepcion", "PesoBruto", "Cajon1", "Cajon2", "Cajon3", "Cajon4", "Cajon5", "Cajon6", "Cajon7", "Cajon8", "Cajon9", "Cajon10", "TransitoActivo", "idBasculaPesajeBruto", "idBasculaPesajeNeto", "EntradaManualPesos", "Estado", "FueraCajon", "idProveedor", "LedControlDocumental", "LedAnalisisLaboratorio", "LedAutorizacion", "LedCargaProducto", "LedDevolucionTarjeta", "Lote", "Tara", "PesoNetoManual", "RecogerPesoEnBascula", "Unidad", "Destino1", "Destino2", "Destino3", "Destino4", "Formato", "Envase", "Bultos", "Observaciones", "Precio", "PagarKgTeoricos", "CampoLibre1", "CampoLIbre2", "Fecha", "idModulo", "Autorizada", "EstadoTarjeta", "exportado", "ErrorExport", "CamionBanera", "TipoOrigen", "Origen1", "Origen2", "Origen3", "Origen4", "NetoOrigen", "NumLineaCompra", "idEntradas")
                        .HasName("IEntradasLineas");

                    b.ToTable("EntradasLineas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EntradasLineasResultadosNIR", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ActivarMaximo")
                        .HasColumnType("bit");

                    b.Property<bool?>("ActivarMaximoAlerta")
                        .HasColumnType("bit");

                    b.Property<bool?>("ActivarMinimo")
                        .HasColumnType("bit");

                    b.Property<bool?>("ActivarMinimoAlerta")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaResultado")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("Resultado")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("ValorEsperado")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("ValorMaximo")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("ValorMaximoAlerta")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("ValorMinimo")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("ValorMinimoAlerta")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<int?>("idControlesNir")
                        .HasColumnType("int");

                    b.Property<int?>("idEntradasLineas")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idControlesNir");

                    b.HasIndex("idEntradasLineas");

                    b.ToTable("EntradasLineasResultadosNIR");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EntradasLotes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<bool>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FCaducidad")
                        .HasColumnType("date");

                    b.Property<int?>("IdEntradasLineas")
                        .HasColumnType("int");

                    b.Property<int?>("IdLote")
                        .HasColumnType("int");

                    b.Property<string>("LoteProveedor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.HasIndex("IdEntradasLineas");

                    b.HasIndex("IdLote");

                    b.ToTable("EntradasLotes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Envases", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Capacidad")
                        .HasColumnType("real");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<bool?>("ModoUdsFormato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<string>("RefERP")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Referencia2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Rerefencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Rerefencia2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Unidad");

                    b.ToTable("Envases");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Especies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Especies");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Etiquetas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Archivo")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Contenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Copias")
                        .HasColumnType("int");

                    b.Property<int?>("EtiquetaEstilo")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<string>("FuenteCodigoBarras")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int?>("Impresora")
                        .HasColumnType("int");

                    b.Property<string>("Inicializacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("MacroCodigoBarras")
                        .HasColumnType("int");

                    b.Property<string>("MarcaCampo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MarcaFin")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MarcaFormato")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MarcaInicio")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MarcaPedirArchivo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("MarcaSeparacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MarcaVariable")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Preliminar")
                        .HasColumnType("bit");

                    b.Property<int?>("Sesion")
                        .HasColumnType("int");

                    b.Property<int?>("TamanyoCodigoBarras")
                        .HasColumnType("int");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("TipoCodigoBarras")
                        .HasColumnType("int");

                    b.Property<int?>("Variable")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Etiquetas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Eventos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Campo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Elemento")
                        .HasColumnType("int");

                    b.Property<string>("Equipo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Formulario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(39)")
                        .HasMaxLength(39);

                    b.Property<string>("MAC")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Tabla")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Usuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Elemento")
                        .HasName("_dta_index_Eventos_1");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EventosDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Campo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Evento")
                        .HasColumnType("int");

                    b.Property<string>("ValorAntiguo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ValorNuevo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("Evento")
                        .HasName("_dta_index_EventosDetalle_1");

                    b.ToTable("EventosDetalle");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Existencias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Cantidad")
                        .HasColumnType("real");

                    b.Property<int?>("Envase")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("Formato")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int>("Inventario")
                        .HasColumnType("int");

                    b.Property<int?>("Lote")
                        .HasColumnType("int");

                    b.Property<string>("LoteNombre")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<int?>("Ubicacion")
                        .HasColumnType("int");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<int?>("idEntradaLinea")
                        .HasColumnType("int");

                    b.Property<int?>("idProveedor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Envase");

                    b.HasIndex("Formato");

                    b.HasIndex("Inventario");

                    b.HasIndex("Lote");

                    b.HasIndex("Producto");

                    b.HasIndex("Ubicacion");

                    b.HasIndex("Unidad");

                    b.HasIndex("idEntradaLinea");

                    b.HasIndex("idProveedor");

                    b.ToTable("Existencias");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Familias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Analisi")
                        .HasColumnType("int");

                    b.Property<int?>("Departamento")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Analisi");

                    b.HasIndex("Departamento");

                    b.ToTable("Familias");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.FamiliasMedidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("FamiliasMedidor");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.FileGmaoElement", b =>
                {
                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GmaoElementId")
                        .HasColumnType("int");

                    b.HasKey("FileId", "GmaoElementId")
                        .HasName("PK__FileGmao__99EA4154D1B29574");

                    b.HasIndex("GmaoElementId");

                    b.ToTable("FileGmaoElement");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Files", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Bytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Formatos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ControlStock")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefERP")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Formatos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.FormulaProdModulo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ForzarModulo")
                        .HasColumnType("bit");

                    b.Property<int?>("idFormulario")
                        .HasColumnType("int");

                    b.Property<int?>("idModulo")
                        .HasColumnType("int");

                    b.Property<int?>("idProducto")
                        .HasColumnType("int");

                    b.Property<int?>("idUbicacion")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idFormulario");

                    b.HasIndex("idModulo");

                    b.HasIndex("idProducto");

                    b.HasIndex("idUbicacion");

                    b.ToTable("FormulaProdModulo");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Formularios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<int>("Formula")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int?>("Medicacion")
                        .HasColumnType("int");

                    b.Property<bool?>("Principal")
                        .HasColumnType("bit");

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Formula");

                    b.HasIndex("Medicacion");

                    b.HasIndex("Producto");

                    b.ToTable("Formularios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Formulas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Departamento")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<int?>("Familia")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<int?>("Formato")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("Medicamento")
                        .HasColumnType("bit");

                    b.Property<int?>("Medida")
                        .HasColumnType("int");

                    b.Property<float?>("Mezclas")
                        .HasColumnType("real");

                    b.Property<int?>("Modulo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Original")
                        .HasColumnType("int");

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<bool?>("Recalculado")
                        .HasColumnType("bit");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<float?>("Total")
                        .HasColumnType("real");

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.Property<string>("idRefERP")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Departamento");

                    b.HasIndex("Familia");

                    b.HasIndex("Modulo");

                    b.HasIndex("Producto");

                    b.ToTable("Formulas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.FormulasDatosExtra", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<decimal?>("KWToneladaEfectivo")
                        .HasColumnType("decimal(18, 4)")
                        .HasComputedColumnSql("([dbo].[FormulaKWToneladaEfectivo]([id]))");

                    b.Property<decimal?>("KWToneladaTotal")
                        .HasColumnType("decimal(18, 4)")
                        .HasComputedColumnSql("([dbo].[FormulaKWToneladaTotal]([id]))");

                    b.HasKey("id");

                    b.ToTable("FormulasDatosExtra");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Archivos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("CMMSFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaSubida")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombreArchivoOriginal")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("GMAO_Archivos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Archivos_Elementos", b =>
                {
                    b.Property<int>("idElemento")
                        .HasColumnType("int");

                    b.Property<int>("idArchivo")
                        .HasColumnType("int");

                    b.HasKey("idElemento", "idArchivo");

                    b.HasIndex("idArchivo");

                    b.ToTable("GMAO_Archivos_Elementos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Archivos_Intervenciones", b =>
                {
                    b.Property<int>("idIntervencion")
                        .HasColumnType("int");

                    b.Property<int>("idArchivo")
                        .HasColumnType("int");

                    b.HasKey("idIntervencion", "idArchivo")
                        .HasName("PK_GMAO_Intervenciones");

                    b.HasIndex("idArchivo");

                    b.ToTable("GMAO_Archivos_Intervenciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Archivos_Modelos", b =>
                {
                    b.Property<int>("idModelo")
                        .HasColumnType("int");

                    b.Property<int>("idArchivo")
                        .HasColumnType("int");

                    b.HasKey("idModelo", "idArchivo")
                        .HasName("PK_GMAO_ArchivosModelos");

                    b.HasIndex("idArchivo");

                    b.ToTable("GMAO_Archivos_Modelos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Archivos_Tipos", b =>
                {
                    b.Property<int>("idTipoElemento")
                        .HasColumnType("int");

                    b.Property<int>("idArchivo")
                        .HasColumnType("int");

                    b.HasKey("idTipoElemento", "idArchivo");

                    b.HasIndex("idArchivo");

                    b.ToTable("GMAO_Archivos_Tipos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Caracteristicas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("id");

                    b.ToTable("GMAO_Caracteristicas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_CaracteristicasElementos", b =>
                {
                    b.Property<int>("idElemento")
                        .HasColumnType("int");

                    b.Property<int>("idCaracteristica")
                        .HasColumnType("int");

                    b.Property<string>("ValorString")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("idElemento", "idCaracteristica");

                    b.HasIndex("idCaracteristica");

                    b.ToTable("GMAO_CaracteristicasElementos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_CaracteristicasTipos", b =>
                {
                    b.Property<int>("idTipoElemento")
                        .HasColumnType("int");

                    b.Property<int>("idCaracteristica")
                        .HasColumnType("int");

                    b.Property<string>("ValorString")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("idTipoElemento", "idCaracteristica");

                    b.HasIndex("idCaracteristica");

                    b.ToTable("GMAO_CaracteristicasTipos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Compras", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRecepcion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaRecepcionPrevista")
                        .HasColumnType("datetime");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<string>("RefPedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("id");

                    b.HasIndex("IdProveedor");

                    b.ToTable("GMAO_Compras");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ComprasLineas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CantidadRecibida")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaRecepcion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idCompra")
                        .HasColumnType("int");

                    b.Property<int?>("idElemento")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idCompra");

                    b.HasIndex("idElemento");

                    b.ToTable("GMAO_ComprasLineas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Departamentos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool?>("Externo")
                        .HasColumnType("bit");

                    b.Property<int?>("IdResponsable")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.HasIndex("IdResponsable");

                    b.ToTable("GMAO_Departamentos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Deps_Operarios", b =>
                {
                    b.Property<int>("idDepartamento")
                        .HasColumnType("int");

                    b.Property<int>("idOperario")
                        .HasColumnType("int");

                    b.HasKey("idDepartamento", "idOperario");

                    b.HasIndex("idOperario");

                    b.ToTable("GMAO_Deps_Operarios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElemAlternativos", b =>
                {
                    b.Property<int>("IdPadre")
                        .HasColumnType("int");

                    b.Property<int>("IdHijo")
                        .HasColumnType("int");

                    b.HasKey("IdPadre", "IdHijo");

                    b.HasIndex("IdHijo");

                    b.ToTable("GMAO_ElemAlternativos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElemIntervenciones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Cerrada")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaFinal")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("IDDepartamento")
                        .HasColumnType("int");

                    b.Property<int?>("IdOperarioResponsable")
                        .HasColumnType("int");

                    b.Property<int?>("IdParadaConfiguracion")
                        .HasColumnType("int");

                    b.Property<bool?>("IsRevisionElemento")
                        .HasColumnType("bit");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idElemento")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("IDDepartamento");

                    b.HasIndex("IdOperarioResponsable");

                    b.HasIndex("IdParadaConfiguracion");

                    b.HasIndex("idElemento");

                    b.ToTable("GMAO_ElemIntervenciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElemIntervencionesPiezas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ElementId")
                        .HasColumnType("int");

                    b.Property<int?>("IdIntervencion")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("ElementId");

                    b.HasIndex("IdIntervencion");

                    b.HasIndex("WarehouseId");

                    b.ToTable("GMAO_ElemIntervencionesPiezas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElemIntervencionesTrabajos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CosteDietas")
                        .HasColumnType("decimal(12, 3)");

                    b.Property<decimal?>("CosteHora")
                        .HasColumnType("decimal(12, 3)");

                    b.Property<decimal?>("CosteTraslado")
                        .HasColumnType("decimal(12, 3)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EnMantenimiento")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaFinal")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdIntervencion")
                        .HasColumnType("int");

                    b.Property<int?>("IdMantenimiento")
                        .HasColumnType("int");

                    b.Property<int?>("IdOperario")
                        .HasColumnType("int");

                    b.Property<decimal?>("NHoras")
                        .HasColumnType("decimal(12, 3)");

                    b.Property<int?>("NumOperarios")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operarios")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("idProveedor")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("IdIntervencion");

                    b.HasIndex("IdOperario");

                    b.ToTable("GMAO_ElemIntervencionesTrabajos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElemPertenencia", b =>
                {
                    b.Property<int>("IdPadre")
                        .HasColumnType("int");

                    b.Property<int>("IdHijo")
                        .HasColumnType("int");

                    b.HasKey("IdPadre", "IdHijo");

                    b.HasIndex("IdHijo");

                    b.ToTable("GMAO_ElemPertenencia");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElemStocks", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaEntrada")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCompraLinea")
                        .HasColumnType("int");

                    b.Property<int?>("IdModelo")
                        .HasColumnType("int");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int?>("MesesGarantia")
                        .HasColumnType("int");

                    b.Property<string>("NumSerie")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("idElemento")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("IdCompraLinea");

                    b.HasIndex("IdModelo");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("idElemento");

                    b.ToTable("GMAO_ElemStocks");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElementReviewSettings", b =>
                {
                    b.Property<int>("ElementId")
                        .HasColumnType("int");

                    b.Property<int?>("HoursServiceInterval")
                        .HasColumnType("int");

                    b.Property<int?>("HoursUsageInterval")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastReview")
                        .HasColumnType("datetime2");

                    b.Property<bool>("RequiredReview")
                        .HasColumnType("bit");

                    b.Property<int?>("TotalAlarms")
                        .HasColumnType("int");

                    b.HasKey("ElementId")
                        .HasName("PK__GMAO_Ele__A429721ACB3DB9FF");

                    b.ToTable("GMAO_ElementReviewSettings");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Elementos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CapturarDatos")
                        .HasColumnType("bit");

                    b.Property<int>("ContadorAlarmas")
                        .HasColumnType("int");

                    b.Property<int>("ContadorAlarmasDesdeUltimaRevision")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<int?>("DiasRevision")
                        .HasColumnType("int");

                    b.Property<int?>("ElectrovalvulaId")
                        .HasColumnType("int");

                    b.Property<int?>("ElementoPadreId")
                        .HasColumnType("int");

                    b.Property<decimal?>("HorasUsoActuales")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool?>("IsMaquina")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPieza")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastReview")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("('1900-01-01 00:00:00')");

                    b.Property<byte>("LinkType")
                        .HasColumnType("tinyint");

                    b.Property<int?>("MaxDiasSiguienteRevision")
                        .HasColumnType("int");

                    b.Property<int?>("MaxHorasSiguienteRevision")
                        .HasColumnType("int");

                    b.Property<int?>("MesesRevision")
                        .HasColumnType("int");

                    b.Property<int?>("ModeloId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<int?>("OrdenArbol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<decimal?>("PrecioCosteNuevo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<bool?>("RequiereRevision")
                        .HasColumnType("bit");

                    b.Property<bool?>("RevisionEnSiguienteParada")
                        .HasColumnType("bit");

                    b.Property<decimal?>("RevisionHoras")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("TiempoServicio")
                        .HasColumnType("int");

                    b.Property<int>("TiempoServicioDesdeUltimaRevision")
                        .HasColumnType("int");

                    b.Property<int>("TiempoTrabajando")
                        .HasColumnType("int");

                    b.Property<int>("TiempoTrabajandoDesdeUltimaRevision")
                        .HasColumnType("int");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<int?>("idMotor")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ElectrovalvulaId");

                    b.HasIndex("ElementoPadreId");

                    b.HasIndex("ModeloId");

                    b.HasIndex("Tipo");

                    b.HasIndex("idMotor");

                    b.ToTable("GMAO_Elementos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElementosTipos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProveedorHabitual")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.HasIndex("ProveedorHabitual");

                    b.ToTable("GMAO_ElementosTipos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElementosTiposModelos", b =>
                {
                    b.Property<int>("idTipo")
                        .HasColumnType("int");

                    b.Property<int>("idModelo")
                        .HasColumnType("int");

                    b.Property<bool?>("Preferencia")
                        .HasColumnType("bit");

                    b.HasKey("idTipo", "idModelo");

                    b.HasIndex("idModelo");

                    b.ToTable("GMAO_ElementosTiposModelos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_HistStocksYElementos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaFinal")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("HorasUsoFinal")
                        .HasColumnType("int");

                    b.Property<int?>("HorasUsoInicio")
                        .HasColumnType("int");

                    b.Property<int?>("idElemento")
                        .HasColumnType("int");

                    b.Property<int?>("idStock")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idElemento");

                    b.HasIndex("idStock");

                    b.ToTable("GMAO_HistStocksYElementos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Marcas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.HasKey("id");

                    b.ToTable("GMAO_Marcas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_MarcasModelos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("EAN13")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<int>("idMarca")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idMarca");

                    b.ToTable("GMAO_MarcasModelos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Operarios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Autorizado")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CosteDietas")
                        .HasColumnType("decimal(12, 3)");

                    b.Property<decimal?>("CosteHora")
                        .HasColumnType("decimal(12, 3)");

                    b.Property<string>("DNI")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Externo")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Pass")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Telefono2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("GMAO_Operarios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ParadasConfiguracion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DayOfMonth")
                        .HasColumnType("bigint");

                    b.Property<byte?>("DayOfWeek")
                        .HasColumnType("tinyint");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<byte>("Scheduling")
                        .HasColumnType("tinyint");

                    b.Property<int?>("WeeklyRepeat")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("GMAO_ParadasConfiguracion");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ParadasConfiguracionModulos", b =>
                {
                    b.Property<int>("idParadaConfiguracion")
                        .HasColumnType("int");

                    b.Property<int>("idModulo")
                        .HasColumnType("int");

                    b.Property<bool>("RequiereParar")
                        .HasColumnType("bit");

                    b.HasKey("idParadaConfiguracion", "idModulo");

                    b.HasIndex("idModulo");

                    b.ToTable("GMAO_ParadasConfiguracionModulos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ParadasConfiguracionTareas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<TimeSpan?>("DuracionEstimada")
                        .HasColumnType("time");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<int?>("idElemento")
                        .HasColumnType("int");

                    b.Property<int?>("idOperario")
                        .HasColumnType("int");

                    b.Property<int>("idParadaConfiguracion")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idElemento");

                    b.HasIndex("idOperario");

                    b.HasIndex("idParadaConfiguracion");

                    b.ToTable("GMAO_ParadasConfiguracionTareas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Proveedores", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MesesGarantia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Ref")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("GMAO_Proveedores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_SolicitudOrdenTrabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Creada")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreadaPorId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<int>("ElementoId")
                        .HasColumnType("int");

                    b.Property<byte>("Estado")
                        .HasColumnType("tinyint");

                    b.Property<int?>("GestionadaPorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreadaPorId");

                    b.HasIndex("ElementoId");

                    b.HasIndex("GestionadaPorId");

                    b.ToTable("GMAO_SolicitudOrdenTrabajo");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_WarehouseStocks", b =>
                {
                    b.Property<int>("ElementId")
                        .HasColumnType("int");

                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((-1))");

                    b.Property<string>("Corridor")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("RackBody")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("RackColumn")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("RackRow")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("SafetyStock")
                        .HasColumnType("int");

                    b.HasKey("ElementId", "WarehouseId", "ModelId")
                        .HasName("PK__GMAO_War__0BA12F4480D20B06");

                    b.HasIndex("ModelId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("GMAO_WarehouseStocks");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Warehouses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("GMAO_Warehouses");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Gateway", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Gateways");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GruposIncompatibilidades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("GruposIncompatibilidades");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GruposIncompatibilidadesLineas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<decimal?>("PorcentajeMinimo")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdProducto");

                    b.ToTable("GruposIncompatibilidadesLineas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Incompatibilidades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<int>("Formula")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int?>("NumeroMezclas")
                        .HasColumnType("int");

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Formula");

                    b.HasIndex("Producto");

                    b.ToTable("Incompatibilidades");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Indicadores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdBascula")
                        .HasColumnType("int");

                    b.Property<int?>("IdMedidor")
                        .HasColumnType("int");

                    b.Property<int?>("IdOpc")
                        .HasColumnType("int");

                    b.Property<int?>("IdPlc")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("IdBascula");

                    b.HasIndex("IdMedidor");

                    b.ToTable("Indicadores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.InformesLib", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CopiaPara")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<byte[]>("DatosInforme")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("FechaUltima")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int?>("IdInformeBase")
                        .HasColumnType("int");

                    b.Property<bool?>("ImpAutomatico")
                        .HasColumnType("bit");

                    b.Property<string>("ImpresoraDefecto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsBase")
                        .HasColumnType("bit");

                    b.Property<string>("NombreInforme")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("NumCopias")
                        .HasColumnType("int");

                    b.Property<string>("UltimoEditor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.Property<bool?>("VisibleUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Vista")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("VistaXML")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdInformeBase");

                    b.ToTable("InformesLib");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.InformesLibCategorias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("isModificable")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("isVisible")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("InformesLibCategorias");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.InformesLibUsuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Habilitado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("IdInforme")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<bool>("ImpAutomatico")
                        .HasColumnType("bit");

                    b.Property<string>("ImpresoraDefecto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("NumCopias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("Visible")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.HasIndex("IdInforme");

                    b.HasIndex("IdUsuario");

                    b.ToTable("InformesLibUsuarios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Inventarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Lectores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Inhalambrico")
                        .HasColumnType("bit");

                    b.Property<bool?>("Multipuesto")
                        .HasColumnType("bit");

                    b.Property<int?>("Nodo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Plc")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Receptor")
                        .HasColumnType("int");

                    b.Property<bool?>("Terminal")
                        .HasColumnType("bit");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lectores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.LineaVentaLineaSalida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idLineaSalida")
                        .HasColumnType("int");

                    b.Property<int>("idLineaVenta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("idLineaSalida");

                    b.HasIndex("idLineaVenta");

                    b.ToTable("LineaVentaLineaSalida");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.LineasCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Bultos")
                        .HasColumnType("int");

                    b.Property<float?>("Cantidad")
                        .HasColumnType("real");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Compra")
                        .HasColumnType("int");

                    b.Property<string>("Contrato")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Departamento")
                        .HasColumnType("int");

                    b.Property<int?>("Envase")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("Formato")
                        .HasColumnType("int");

                    b.Property<int?>("IdContrato")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int>("Linea")
                        .HasColumnType("int");

                    b.Property<int?>("Lote")
                        .HasColumnType("int");

                    b.Property<bool?>("PagarTeorico")
                        .HasColumnType("bit");

                    b.Property<float?>("PrecioCompra")
                        .HasColumnType("real");

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<int?>("Serie")
                        .HasColumnType("int");

                    b.Property<float?>("Servida")
                        .HasColumnType("real");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<int?>("idLineaEntrada")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Compra");

                    b.HasIndex("Envase");

                    b.HasIndex("Formato");

                    b.HasIndex("IdContrato");

                    b.HasIndex("Producto");

                    b.HasIndex("Unidad");

                    b.HasIndex("idLineaEntrada");

                    b.ToTable("LineasCompra");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.LogMovimientosStocks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<int?>("Ciclo")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ErrorTxtExport")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdLote")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdStock")
                        .HasColumnType("int");

                    b.Property<int?>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<int?>("Medidor")
                        .HasColumnType("int");

                    b.Property<int?>("Modulo")
                        .HasColumnType("int");

                    b.Property<int?>("Operario")
                        .HasColumnType("int");

                    b.Property<int?>("TipoMovimiento")
                        .HasColumnType("int");

                    b.Property<int?>("idOrden")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdLote");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdStock")
                        .HasName("_dta_index_LogMovimientosStocks_1");

                    b.HasIndex("IdUbicacion");

                    b.HasIndex("Medidor");

                    b.HasIndex("Modulo");

                    b.HasIndex("Operario");

                    b.HasIndex("idOrden");

                    b.ToTable("LogMovimientosStocks");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Lotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Caducidad")
                        .HasColumnType("datetime");

                    b.Property<string>("CampoStrLibre1")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("CampoStrLibre2")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("CampoStrLibre3")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("CampoStrLibre4")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<float?>("Cantidad")
                        .HasColumnType("real");

                    b.Property<decimal?>("CantidadPedida")
                        .HasColumnType("decimal(15, 3)");

                    b.Property<int?>("Departamento")
                        .HasColumnType("int");

                    b.Property<int?>("Entrada")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fabricacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fin")
                        .HasColumnType("datetime");

                    b.Property<int?>("Formato")
                        .HasColumnType("int");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Inicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("Medicacion")
                        .HasColumnType("int");

                    b.Property<bool?>("Mezclado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Modificado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool?>("NombreEnCodBarras")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("OldId")
                        .HasColumnType("int");

                    b.Property<float?>("PrecioCoste")
                        .HasColumnType("real");

                    b.Property<bool>("Prioritario")
                        .HasColumnType("bit");

                    b.Property<int>("Producto")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Formato");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("Medicacion");

                    b.HasIndex("Producto", "Fecha")
                        .HasName("ILotesProdFecha");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.LotesMezclados", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 5)");

                    b.Property<decimal?>("CantidadActual")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("idLoteNuevo")
                        .HasColumnType("int");

                    b.Property<int?>("idLoteOrigen")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idLoteNuevo");

                    b.HasIndex("idLoteOrigen");

                    b.ToTable("LotesMezclados");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Maquinas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amperaje")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Cos")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaAccion")
                        .HasColumnType("datetime");

                    b.Property<int?>("HorasAlarma")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Kilos")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Potencia")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Proveedor")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReiniciarPlc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Rpm")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("Sesion")
                        .HasColumnType("int");

                    b.Property<int?>("SesionNotificacion")
                        .HasColumnType("int");

                    b.Property<string>("Situacion")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TiempoPlc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Voltaje")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("Sesion");

                    b.HasIndex("SesionNotificacion");

                    b.ToTable("Maquinas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Medicaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Afeccion")
                        .HasColumnType("int");

                    b.Property<int?>("Cliente")
                        .HasColumnType("int");

                    b.Property<int?>("Conservacion")
                        .HasColumnType("int");

                    b.Property<int?>("Duracion")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("Frecuencia")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Indicaciones")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("Literal")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NaturalezaTratamiento")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("StockIngredientes")
                        .HasColumnType("bit");

                    b.Property<int?>("TiempoEspera")
                        .HasColumnType("int");

                    b.Property<int?>("TiempoEsperaHuevos")
                        .HasColumnType("int");

                    b.Property<int?>("TiempoEsperaLeche")
                        .HasColumnType("int");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.Property<int?>("idProducto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Afeccion");

                    b.HasIndex("idProducto");

                    b.ToTable("Medicaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.MedicacionesIngredientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AplicacionDirecta")
                        .HasColumnType("bit");

                    b.Property<float?>("Cantidad")
                        .HasColumnType("real");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int?>("Medicacion")
                        .HasColumnType("int");

                    b.Property<float?>("Porcentaje")
                        .HasColumnType("real");

                    b.Property<bool?>("Produccion")
                        .HasColumnType("bit");

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Medicacion");

                    b.HasIndex("Producto");

                    b.HasIndex("Unidad");

                    b.ToTable("MedicacionesIngredientes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Medidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AsumidoPrincipal")
                        .HasColumnType("bit");

                    b.Property<bool?>("AutoAlarmaDestinoDeshabilitado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("AutoAlarmaFaltaProducto")
                        .HasColumnType("bit");

                    b.Property<bool?>("AutoAlarmaFaltaProductoCiclo")
                        .HasColumnType("bit");

                    b.Property<bool?>("AutoAlarmaMaxSilo")
                        .HasColumnType("bit");

                    b.Property<bool?>("AutoAlarmaMaxSiloCiclo")
                        .HasColumnType("bit");

                    b.Property<bool?>("AutoAlarmaOrigenDeshabilitado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("AutoValidacionLotes")
                        .HasColumnType("bit");

                    b.Property<bool?>("Automatico")
                        .HasColumnType("bit");

                    b.Property<bool?>("BorradoLotesInicioOrden")
                        .HasColumnType("bit");

                    b.Property<float?>("CantidadMinima")
                        .HasColumnType("real");

                    b.Property<int?>("CantidadesMaximo")
                        .HasColumnType("int");

                    b.Property<int?>("CantidadesParteMaximo")
                        .HasColumnType("int");

                    b.Property<int?>("Capacidad")
                        .HasColumnType("int");

                    b.Property<bool?>("Consecutivo")
                        .HasColumnType("bit");

                    b.Property<bool?>("ControlStock")
                        .HasColumnType("bit");

                    b.Property<int?>("Decimales")
                        .HasColumnType("int");

                    b.Property<bool?>("Dinamico")
                        .HasColumnType("bit");

                    b.Property<bool?>("DisponibleOEE")
                        .HasColumnType("bit");

                    b.Property<string>("Dosificaciones")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Equipo")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoForzado")
                        .HasColumnType("int");

                    b.Property<string>("EventoOrdenFinalizada")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EventoPesadaRegistrada")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<int?>("FamiliaMedidor")
                        .HasColumnType("int");

                    b.Property<bool?>("ForzarConsumidos")
                        .HasColumnType("bit");

                    b.Property<bool?>("ForzarDosificacionConjunta")
                        .HasColumnType("bit");

                    b.Property<int?>("IDAlarmaDestinoDeshabilitado")
                        .HasColumnType("int");

                    b.Property<int?>("IDAlarmaOrigenDeshabilitado")
                        .HasColumnType("int");

                    b.Property<int?>("IDAlarmaOrigenesFaltaProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IDAlarmaOrigenesFaltaProductoCiclico")
                        .HasColumnType("int");

                    b.Property<int?>("IDAlarmaOrigenesMaximoSilo")
                        .HasColumnType("int");

                    b.Property<int?>("IDAlarmaOrigenesMaximoSiloCiclico")
                        .HasColumnType("int");

                    b.Property<int?>("IdBascula")
                        .HasColumnType("int");

                    b.Property<int?>("IdCicloActual")
                        .HasColumnType("int");

                    b.Property<int?>("IdCicloAnterior")
                        .HasColumnType("int");

                    b.Property<int?>("IdOrdenActual")
                        .HasColumnType("int");

                    b.Property<int?>("IdOrdenAnterior")
                        .HasColumnType("int");

                    b.Property<int>("IdPlc")
                        .HasColumnName("IdPLC")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<bool?>("LecturaReal")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaxTolerancia")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<bool?>("MedirOEE")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MinTolerancia")
                        .HasColumnType("decimal(15, 5)");

                    b.Property<int?>("ModoAsumido")
                        .HasColumnType("int");

                    b.Property<bool>("ModoMultidosificacion")
                        .HasColumnType("bit");

                    b.Property<int>("ModuloId")
                        .HasColumnName("Modulo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Obligatorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("OpcConfigId")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenAFinalizar")
                        .HasColumnType("int");

                    b.Property<int?>("OrigenesMaximo")
                        .HasColumnType("int");

                    b.Property<int?>("OrigenesParteMaximo")
                        .HasColumnType("int");

                    b.Property<int?>("PLCCicloNumActual")
                        .HasColumnType("int");

                    b.Property<int?>("PLCEstadoActual")
                        .HasColumnType("int");

                    b.Property<int?>("PLCEstadoAlarma")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId0")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId1")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId10")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId11")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId12")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId13")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId14")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId15")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId16")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId17")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId18")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId19")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId2")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId3")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId4")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId5")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId6")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId7")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId8")
                        .HasColumnType("int");

                    b.Property<int?>("PLCIndicadoresId9")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrdenNumActual")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual0")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual1")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual10")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual11")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual12")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual13")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual14")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual15")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual16")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual17")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual18")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual19")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual2")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual3")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual4")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual5")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual6")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual7")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual8")
                        .HasColumnType("int");

                    b.Property<int?>("PLCOrigenIdActual9")
                        .HasColumnType("int");

                    b.Property<int?>("PLCSecuenciaNumActual")
                        .HasColumnType("int");

                    b.Property<bool?>("ParticionarDosificacion")
                        .HasColumnType("bit");

                    b.Property<bool?>("PermitirModoMantenimiento")
                        .HasColumnType("bit");

                    b.Property<bool>("PlcEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("Principal")
                        .HasColumnType("bit");

                    b.Property<int?>("PrioridadDosificacion")
                        .HasColumnType("int");

                    b.Property<int?>("ProductosMaximo")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("RegistroAutomatico")
                        .HasColumnType("bit");

                    b.Property<int?>("RegistroPeriodo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RegistroTiempo")
                        .HasColumnType("datetime");

                    b.Property<bool?>("RequiereOperaciones")
                        .HasColumnType("bit");

                    b.Property<string>("Resultados")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("RevisarDosiVariable1Ascendente")
                        .HasColumnType("bit");

                    b.Property<int?>("SeleccionProducto")
                        .HasColumnType("int");

                    b.Property<int?>("Sesion")
                        .HasColumnType("int");

                    b.Property<bool?>("Terminal")
                        .HasColumnType("bit");

                    b.Property<string>("TextoDosiVariables")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("TipoDosificacion")
                        .HasColumnType("int");

                    b.Property<int?>("TipoOrigen")
                        .HasColumnType("int");

                    b.Property<int?>("TipoRegularizacion")
                        .HasColumnType("int");

                    b.Property<int?>("UbicacionesMaximo")
                        .HasColumnType("int");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadEnvio")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadParte")
                        .HasColumnType("int");

                    b.Property<bool?>("VerDosiVariables")
                        .HasColumnType("bit");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.Property<int?>("idPlantillaOculta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoForzado");

                    b.HasIndex("FamiliaMedidor");

                    b.HasIndex("IdBascula");

                    b.HasIndex("ModuloId");

                    b.HasIndex("idPlantillaOculta");

                    b.ToTable("Medidores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.MedidoresDosificaciones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("GenerarConProductos")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("idMedidor")
                        .HasColumnType("int");

                    b.Property<int>("idOrigen")
                        .HasColumnType("int");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idMedidor");

                    b.HasIndex("idOrigen");

                    b.HasIndex("idProducto");

                    b.ToTable("MedidoresDosificaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ModuloEstadoComunicaciones", b =>
                {
                    b.Property<int>("ModuloId")
                        .HasColumnType("int");

                    b.Property<bool>("CerrarModulo")
                        .HasColumnType("bit");

                    b.Property<bool>("CerrarOpc")
                        .HasColumnType("bit");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.Property<bool>("Resituar")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UltimaActualizacionIntegraModulo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UltimaActualizacionIntegraServer")
                        .HasColumnType("datetime2");

                    b.HasKey("ModuloId");

                    b.ToTable("ModulosEstadoComunicaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Modulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AjusteStockFinalOrden")
                        .HasColumnType("bit");

                    b.Property<bool?>("AjusteTiempoEfectivo")
                        .HasColumnType("bit");

                    b.Property<bool?>("Alternativas")
                        .HasColumnType("bit");

                    b.Property<bool>("AsignarProductoDestino")
                        .HasColumnType("bit");

                    b.Property<int?>("AvisoCambioSilo")
                        .HasColumnType("int");

                    b.Property<int?>("Bascula")
                        .HasColumnType("int");

                    b.Property<bool?>("CaducidadAutomatica")
                        .HasColumnType("bit");

                    b.Property<bool?>("CambioDestino")
                        .HasColumnType("bit");

                    b.Property<int?>("CaminoDefecto")
                        .HasColumnType("int");

                    b.Property<bool?>("CaminosActivar")
                        .HasColumnType("bit");

                    b.Property<string>("CaminosDescripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CaminosMax")
                        .HasColumnType("int");

                    b.Property<int?>("CaminosMin")
                        .HasColumnType("int");

                    b.Property<float?>("CantidadCiclo")
                        .HasColumnType("real");

                    b.Property<bool?>("CantidadRealObligatoria")
                        .HasColumnType("bit");

                    b.Property<bool?>("CantidadTeoricaObligatoria")
                        .HasColumnType("bit");

                    b.Property<int?>("CiclosDefecto")
                        .HasColumnType("int");

                    b.Property<bool?>("CodBarrasLoteConfirmacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("CodBarrasLoteConfirmacionParcial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("CommunicationStatus")
                        .HasColumnName("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("ComponentesAsignados")
                        .HasColumnType("bit");

                    b.Property<bool?>("ComprobarPlantilla")
                        .HasColumnType("bit");

                    b.Property<bool?>("ConDestinos")
                        .HasColumnType("bit");

                    b.Property<bool?>("ConOrigenes")
                        .HasColumnType("bit");

                    b.Property<bool?>("Confirmar")
                        .HasColumnType("bit");

                    b.Property<bool?>("ControlCapacidadSilos")
                        .HasColumnType("bit");

                    b.Property<bool?>("ControlEntradas")
                        .HasColumnType("bit");

                    b.Property<bool?>("ControlSalidas")
                        .HasColumnType("bit");

                    b.Property<bool?>("ControlTransito")
                        .HasColumnType("bit");

                    b.Property<bool?>("ControlUbicacion")
                        .HasColumnType("bit");

                    b.Property<bool?>("Controlado")
                        .HasColumnType("bit");

                    b.Property<bool?>("CrearOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("CrearOrdenesRelacionadas")
                        .HasColumnType("bit");

                    b.Property<int?>("Departamento")
                        .HasColumnType("int");

                    b.Property<int?>("DestinoDefecto")
                        .HasColumnType("int");

                    b.Property<bool?>("DetenerAutomatico")
                        .HasColumnType("bit");

                    b.Property<bool?>("DisponibleOEE")
                        .HasColumnType("bit");

                    b.Property<bool?>("Duplicidad")
                        .HasColumnType("bit");

                    b.Property<decimal?>("DuracionOrden")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("Envase")
                        .HasColumnType("int");

                    b.Property<int?>("EnvaseOrigen")
                        .HasColumnType("int");

                    b.Property<bool?>("EnviarIdCabOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("EnviarOrdenesAPLC")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnviarReset")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("EsperarServida")
                        .HasColumnType("bit");

                    b.Property<bool?>("EstadoAlarma")
                        .HasColumnType("bit");

                    b.Property<int?>("EstadoForzado")
                        .HasColumnType("int");

                    b.Property<int?>("Etiqueta")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<int?>("FiltroDestinos")
                        .HasColumnType("int");

                    b.Property<int?>("FiltroOrigenes")
                        .HasColumnType("int");

                    b.Property<bool?>("FinAutomatico")
                        .HasColumnType("bit");

                    b.Property<bool?>("FinalizarNopAlarmas")
                        .HasColumnType("bit");

                    b.Property<int?>("Formato")
                        .HasColumnType("int");

                    b.Property<string>("FormatoLote")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<float?>("Ganancia")
                        .HasColumnType("real");

                    b.Property<int?>("GananciaUnidad")
                        .HasColumnType("int");

                    b.Property<bool?>("GenerarAutoInicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("GenerarComprovacionOrigenVacio")
                        .HasColumnType("bit");

                    b.Property<bool?>("GenerarLote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("IdPlc")
                        .HasColumnName("idPLC")
                        .HasColumnType("int");

                    b.Property<bool>("IgnorarConsumidos")
                        .HasColumnType("bit");

                    b.Property<bool>("IgnorarProducidos")
                        .HasColumnType("bit");

                    b.Property<bool?>("ImpEtiquetaMuestraFinal")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<bool?>("ImprimirEtiqueta")
                        .HasColumnType("bit");

                    b.Property<bool?>("ImprimirOrden")
                        .HasColumnType("bit");

                    b.Property<bool?>("ImprimirParte")
                        .HasColumnType("bit");

                    b.Property<bool?>("IncompatComprobar")
                        .HasColumnType("bit");

                    b.Property<bool?>("IniciarEnServidor")
                        .HasColumnType("bit");

                    b.Property<bool?>("InicioAutomatico")
                        .HasColumnType("bit");

                    b.Property<bool?>("LimpiezaProdFinalDiferente")
                        .HasColumnType("bit");

                    b.Property<bool?>("LoteObligatorio")
                        .HasColumnType("bit");

                    b.Property<string>("LotePlc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Manual")
                        .HasColumnType("bit");

                    b.Property<bool?>("Maquinaria")
                        .HasColumnType("bit");

                    b.Property<int?>("MedidorAscendientes")
                        .HasColumnType("int");

                    b.Property<bool?>("MedirOEE")
                        .HasColumnType("bit");

                    b.Property<int?>("MetodoLote")
                        .HasColumnType("int");

                    b.Property<bool?>("MinimoSiloResetUbi")
                        .HasColumnType("bit");

                    b.Property<bool?>("ModoDebugServidor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ModuloAscendiente")
                        .HasColumnType("int");

                    b.Property<int?>("ModuloAsociadoOrdenes1")
                        .HasColumnType("int");

                    b.Property<int?>("ModuloAsociadoOrdenes2")
                        .HasColumnType("int");

                    b.Property<bool?>("ModuloContinuo")
                        .HasColumnType("bit");

                    b.Property<bool?>("MostrarConsumos")
                        .HasColumnType("bit");

                    b.Property<bool?>("MostrarEnCalendario")
                        .HasColumnType("bit");

                    b.Property<bool?>("MostrarEnGantt")
                        .HasColumnType("bit");

                    b.Property<bool?>("MostrarFormula")
                        .HasColumnType("bit");

                    b.Property<bool?>("MostrarMateriaPrima")
                        .HasColumnType("bit");

                    b.Property<bool?>("MostrarProductoTerminado")
                        .HasColumnType("bit");

                    b.Property<bool?>("MostrarSemielaborado")
                        .HasColumnType("bit");

                    b.Property<bool?>("NecesitaMotores")
                        .HasColumnType("bit");

                    b.Property<bool?>("NoEnviarOrdenes")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("NumValidaciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("20");

                    b.Property<decimal?>("OEEKgHora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(15, 3)")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("OPCEnvioEan13Var2Var3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("OPCEnvioFCaducidadVar1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("OpcConfigId")
                        .HasColumnType("int");

                    b.Property<bool?>("OptimizarPesada")
                        .HasColumnType("bit");

                    b.Property<int>("OrdenProduccion")
                        .HasColumnType("int");

                    b.Property<int?>("OrigenDefecto")
                        .HasColumnType("int");

                    b.Property<int?>("PLCCaminoActual")
                        .HasColumnType("int");

                    b.Property<int?>("PLCDestinoIdActual")
                        .HasColumnType("int");

                    b.Property<int>("PLCEstadoActual")
                        .HasColumnType("int");

                    b.Property<int?>("PLCMedidoresIdSocios0")
                        .HasColumnType("int");

                    b.Property<int?>("PLCMedidoresIdSocios1")
                        .HasColumnType("int");

                    b.Property<int?>("PLCMedidoresIdSocios2")
                        .HasColumnType("int");

                    b.Property<int?>("PLCMedidoresIdSocios3")
                        .HasColumnType("int");

                    b.Property<int?>("PLCMedidoresIdSocios4")
                        .HasColumnType("int");

                    b.Property<int?>("PLCMedidoresIdSocios5")
                        .HasColumnType("int");

                    b.Property<int?>("PLCMedidoresIdSocios6")
                        .HasColumnType("int");

                    b.Property<int?>("PLCMedidoresIdSocios7")
                        .HasColumnType("int");

                    b.Property<int?>("PLCMedidoresIdSocios8")
                        .HasColumnType("int");

                    b.Property<int?>("PLCMedidoresIdSocios9")
                        .HasColumnType("int");

                    b.Property<bool?>("PLCOMarcha")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCOParo")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCOPausa")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCOReanudar")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCOResetear")
                        .HasColumnType("bit");

                    b.Property<int?>("PLCOrdenNumActual")
                        .HasColumnType("int");

                    b.Property<bool?>("PLCPermisoSiguienteOrden")
                        .HasColumnType("bit");

                    b.Property<int?>("PLCTCiclosNumActual")
                        .HasColumnType("int");

                    b.Property<decimal?>("PLCVariablesActual0")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal?>("PLCVariablesActual1")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal?>("PLCVariablesActual2")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal?>("PLCVariablesActual3")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal?>("PLCVariablesActual4")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<int?>("PeriodoCaducidad")
                        .HasColumnType("int");

                    b.Property<bool?>("PermitirAlertas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("PermitirAutoRespuesta")
                        .HasColumnType("bit");

                    b.Property<bool?>("PermitirCambiarLote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PermitirCambiarProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PermitirCambioNumCiclos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PermitirCancelar")
                        .HasColumnType("bit");

                    b.Property<bool?>("PermitirDosificacionParcial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("PermitirMismoOrigenDestino")
                        .HasColumnType("bit");

                    b.Property<bool?>("PermitirModoMantenimiento")
                        .HasColumnType("bit");

                    b.Property<bool?>("PermitirModoVolteo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PermitirMuestras")
                        .HasColumnType("bit");

                    b.Property<bool>("PermitirOrdenArranque")
                        .HasColumnType("bit");

                    b.Property<bool?>("PermitirOrdenesLimpieza")
                        .HasColumnType("bit");

                    b.Property<bool?>("PermitirResetear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("PermitirVariosDestinos")
                        .HasColumnType("bit");

                    b.Property<bool?>("PermitirVariosOrigenes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("PlcEnabled")
                        .HasColumnType("bit");

                    b.Property<bool?>("Premezclas")
                        .HasColumnType("bit");

                    b.Property<int?>("Proceso")
                        .HasColumnType("int");

                    b.Property<bool?>("ProcesoVisible")
                        .HasColumnType("bit");

                    b.Property<int?>("ProdFinalDefecto")
                        .HasColumnType("int");

                    b.Property<bool?>("ProducidosDeConsumidos")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProductoDestino")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProponerSiloDestino")
                        .HasColumnType("bit");

                    b.Property<bool?>("RecibirAutoInicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool?>("RequiereEnvase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("RequiereValidacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("ResetearIntegraModulo")
                        .HasColumnType("bit");

                    b.Property<bool?>("ResituarEnServidor")
                        .HasColumnType("bit");

                    b.Property<bool?>("RevisarDestinos")
                        .HasColumnType("bit");

                    b.Property<bool?>("RevisarOrigenes")
                        .HasColumnType("bit");

                    b.Property<int?>("RolBase")
                        .HasColumnType("int");

                    b.Property<bool?>("ScadaDatos")
                        .HasColumnType("bit");

                    b.Property<bool?>("SeleccionarCajones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Sesion")
                        .HasColumnType("int");

                    b.Property<int?>("Simultaneos")
                        .HasColumnType("int");

                    b.Property<float?>("StockMinimo")
                        .HasColumnType("real");

                    b.Property<int?>("TipoEtiqueta")
                        .HasColumnType("int");

                    b.Property<int?>("TipoMensaje")
                        .HasColumnType("int");

                    b.Property<int>("TipoModulo")
                        .HasColumnType("int");

                    b.Property<int?>("TipoProducto")
                        .HasColumnType("int");

                    b.Property<bool?>("TransporteInicial")
                        .HasColumnType("bit");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadDosificacion")
                        .HasColumnType("int");

                    b.Property<bool?>("VaciarSilosMinimosFinOrden")
                        .HasColumnType("bit");

                    b.Property<float?>("Velocidad")
                        .HasColumnType("real");

                    b.Property<bool?>("VerBotonBrutoACero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("VerBotonCambioLote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("VerBotonConfirmar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("VerBotonParcial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("VerBotonSaltar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("VerBotonTaraACero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("VerBotonTeorico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("VerificarEnvio")
                        .HasColumnType("bit");

                    b.Property<bool>("VolteoHabilitarLlenarDestino")
                        .HasColumnType("bit");

                    b.Property<bool>("VolteoHabilitarModoTiempo")
                        .HasColumnType("bit");

                    b.Property<bool>("VolteoHabilitarVaciarOrigen")
                        .HasColumnType("bit");

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.Property<int?>("idPlantillaBase")
                        .HasColumnType("int");

                    b.Property<int?>("idPlantillaLimpieza")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Departamento");

                    b.HasIndex("EstadoForzado");

                    b.HasIndex("ModuloAsociadoOrdenes1");

                    b.HasIndex("ModuloAsociadoOrdenes2");

                    b.HasIndex("OpcConfigId");

                    b.HasIndex("PLCOrdenNumActual");

                    b.HasIndex("ProdFinalDefecto");

                    b.HasIndex("RolBase");

                    b.HasIndex("idPlantillaBase");

                    b.HasIndex("idPlantillaLimpieza");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ModulosAscendentes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ArrastrarLote")
                        .HasColumnType("bit");

                    b.Property<int?>("Ascendente")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int>("Medidor")
                        .HasColumnType("int");

                    b.Property<int?>("Origen")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Ascendente");

                    b.HasIndex("Medidor");

                    b.ToTable("ModulosAscendentes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ModulosIncompatibilidades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ModuloBase")
                        .HasColumnType("int");

                    b.Property<int?>("ModuloRelacionado")
                        .HasColumnType("int");

                    b.Property<bool?>("SiempreFlexible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ModuloBase");

                    b.HasIndex("ModuloRelacionado");

                    b.ToTable("ModulosIncompatibilidades");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ModulosMotores", b =>
                {
                    b.Property<int>("ModuloId")
                        .HasColumnType("int");

                    b.Property<int>("MotorId")
                        .HasColumnType("int");

                    b.HasKey("ModuloId", "MotorId");

                    b.HasIndex("MotorId");

                    b.ToTable("ModulosMotores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ModulosTagsScada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("Modulo")
                        .HasColumnType("int");

                    b.Property<string>("NombreMes")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("TagIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Modulo");

                    b.ToTable("ModulosTagsScada");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Motor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AlertaConsumoAlto")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal?>("AlertaConsumoExcesivo")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal?>("EnergiaEfectivaAnterior")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<decimal?>("EnergiaEnCargaAnterior")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<decimal?>("EnergiaEnVacioAnterior")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<decimal?>("EnergiaTotalAnterior")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<bool?>("GrabarEnPLC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<float?>("IOCfgParInConsignaAlarmaI")
                        .HasColumnType("real");

                    b.Property<float?>("IOCfgParInConsignaAlarmaTempRod1")
                        .HasColumnType("real");

                    b.Property<float?>("IOCfgParInConsignaAlarmaTempRod2")
                        .HasColumnType("real");

                    b.Property<float?>("IOCfgParInConsignaAvisoIAlta")
                        .HasColumnType("real");

                    b.Property<float?>("IOCfgParInConsignaAvisoTempRod1")
                        .HasColumnType("real");

                    b.Property<float?>("IOCfgParInConsignaAvisoTempRod2")
                        .HasColumnType("real");

                    b.Property<bool?>("IOCfgParInControlActivoVF")
                        .HasColumnType("bit");

                    b.Property<float?>("IOCfgParInCosFi")
                        .HasColumnType("real");

                    b.Property<float?>("IOCfgParInHysteresisCarga")
                        .HasColumnType("real");

                    b.Property<float?>("IOCfgParInHysteresisMotorEnVacio")
                        .HasColumnType("real");

                    b.Property<float?>("IOCfgParInIntensidadEnVacio")
                        .HasColumnType("real");

                    b.Property<float?>("IOCfgParInIntensidadNominal")
                        .HasColumnType("real");

                    b.Property<bool?>("IOCfgParInMonofasico")
                        .HasColumnType("bit");

                    b.Property<float?>("IOCfgParInParametroAux2")
                        .HasColumnType("real");

                    b.Property<float?>("IOCfgParInParametroAux3")
                        .HasColumnType("real");

                    b.Property<int?>("IOCfgParInPorcentajeCargaMaxima")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgParInPorcentajeSobrecarga")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgParInSeccion0")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgParInSeccion1")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgParInSeccion2")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgParInSeccion3")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgParInSeccion4")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgParInSeccion5")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgParInSeccion6")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgParInSeccion7")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgParInSeccion8")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgParInSeccion9")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgParInTension")
                        .HasColumnType("int");

                    b.Property<float?>("IOCfgParInVelocidadErrorMax")
                        .HasColumnType("real");

                    b.Property<float?>("IOCfgParInVelocidadEscalado")
                        .HasColumnType("real");

                    b.Property<bool?>("IOCfgSeguridadesInAccionFalloSuministro")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInActivarAlVelocidadFBack")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInActivarEncadenadoAuto")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInActivarEncadenadoMan")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInActivarPreavisoArranque")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInDesactivarAlDB1")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInDesactivarAlDB2")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInDesactivarAlDB3")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInDesactivarAlDB4")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInDesactivarAtasco")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInDesactivarCM")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInDesactivarDG")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInDesactivarFalloAE")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInDesactivarFalloAux")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInDesactivarFalloVF")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInDesactivarOtrasSeguridades")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInDesactivarPTC")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInPermisoRearranqManTrasFallo")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInTempRod1Habilitada")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOCfgSeguridadesInTempRod2Habilitada")
                        .HasColumnType("bit");

                    b.Property<int?>("IOCfgSeguridadesInTipoDG")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimDelayActivarCargaMax")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimDelayAlDB1")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimDelayAlDB2")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimDelayAlDB3")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimDelayAlDB4")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimDelayAtasco")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimDelayDesactivarCargaMax")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimDelayFalloAE")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimDelayFalloAux")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimDelayFalloVF")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimDelayIntensidadElevada")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimDelayIntensidadMaxima")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimDelayOtrasSeguridades")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimDelayTermistorPTC")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimEsperaCM")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimInhibirCargaArranque")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimMaximoOffDG")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimMaximoOnDG")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimOMSiguienteMotor")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimPreavisoArranque")
                        .HasColumnType("int");

                    b.Property<int?>("IOCfgTiemposInTimRetardoStopAuto")
                        .HasColumnType("int");

                    b.Property<bool?>("IOMantenInResetContadorAlarmas")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOMantenInResetContadorEnergiaParciales")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOMantenInResetContadorEnergiaTotales")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOMantenInResetContadorManiobras")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOMantenInResetContadores")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOMantenInResetEnergias")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOMantenInResetHorasEnCarga")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOMantenInResetHorasParcial")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOMantenInResetHorasTotal")
                        .HasColumnType("bit");

                    b.Property<bool?>("IOMantenInResetMaxPotenciasIntensidad")
                        .HasColumnType("bit");

                    b.Property<int?>("IOMantenOutContAlAE")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlAtasco")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlAux")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlComunica")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlDB1")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlDB2")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlDB3")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlDB4")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlDG")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlDeshabil")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlDiferencial")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlFalloCM")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlIElevada")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlIMax")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlInversor")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlLockOut")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlOtrasSeguridades")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlParoEmerg")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlPuertaAbierta")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlTempElevRod1")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlTempElevRod2")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlTempMaxRod1")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlTempMaxRod2")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlTermico")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlTermistorPTC")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlVF")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContAlVelocidad")
                        .HasColumnType("int");

                    b.Property<int?>("IOMantenOutContadorTotAlarmas")
                        .HasColumnType("int");

                    b.Property<float?>("IOMantenOutEnergiaEfectiva")
                        .HasColumnType("real");

                    b.Property<decimal?>("IOMantenOutEnergiaEnCargaParciales")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<decimal?>("IOMantenOutEnergiaEnCargaTotales")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<decimal?>("IOMantenOutEnergiaEnVacioParciales")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<decimal?>("IOMantenOutEnergiaEnVacioTotales")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<float?>("IOMantenOutEnergiaTotal")
                        .HasColumnType("real");

                    b.Property<float?>("IOMantenOutHorasMarchaEnCarga")
                        .HasColumnType("real");

                    b.Property<float?>("IOMantenOutHorasMarchaParcial")
                        .HasColumnType("real");

                    b.Property<float?>("IOMantenOutHorasMarchaTotal")
                        .HasColumnType("real");

                    b.Property<decimal?>("IOMantenOutMemoriaMaxIntensidad")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<decimal?>("IOMantenOutMemoriaMaxPotenciaActiva")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<decimal?>("IOMantenOutMemoriaMaxPotenciaAparente")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<decimal?>("IOMantenOutMemoriaMaxPotenciaReactiva")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<int?>("IOMantenOutNumeroManiobras")
                        .HasColumnType("int");

                    b.Property<decimal?>("IOMantenOutPotenciaActiva")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<decimal?>("IOMantenOutPotenciaActivaEfectiva")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<decimal?>("IOMantenOutPotenciaAparente")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<decimal?>("IOMantenOutPotenciaAparenteEfectiva")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<decimal?>("IOMantenOutPotenciaReactiva")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<decimal?>("IOMantenOutPotenciaReactivaEfectiva")
                        .HasColumnType("decimal(18, 7)");

                    b.Property<int?>("IdOpc")
                        .HasColumnType("int");

                    b.Property<int>("IdPlc")
                        .HasColumnName("idPLC")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InicioVentana")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsMaximetro")
                        .HasColumnType("bit");

                    b.Property<bool?>("LeerEnPLC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("MaximetroGeneral")
                        .HasColumnType("bit");

                    b.Property<bool?>("MedirKW")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("MinsMaxVentana")
                        .HasColumnType("int");

                    b.Property<string>("NombreMes")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OpcConfigId")
                        .HasColumnType("int");

                    b.Property<bool>("PlcEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnName("TAG")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<decimal?>("ValorVentanaMaximetro")
                        .HasColumnType("decimal(12, 3)");

                    b.HasKey("Id");

                    b.HasIndex("LeerEnPLC")
                        .HasName("_dta_index_Motores_1");

                    b.HasIndex("OpcConfigId");

                    b.ToTable("Motores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.MotoresGrupos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MotoresGrupos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.MotoresGruposRelacion", b =>
                {
                    b.Property<int>("idGrupo")
                        .HasColumnType("int");

                    b.Property<int>("idMotor")
                        .HasColumnType("int");

                    b.HasKey("idGrupo", "idMotor");

                    b.HasIndex("idMotor");

                    b.ToTable("MotoresGruposRelacion");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.MotoresHistorico", b =>
                {
                    b.Property<int>("MotorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<long>("ActiveWatts")
                        .HasColumnType("bigint");

                    b.Property<long>("EfectiveJouls")
                        .HasColumnType("bigint");

                    b.Property<long>("ReactiveWatts")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalJouls")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalWatts")
                        .HasColumnType("bigint");

                    b.HasKey("MotorId", "Timestamp");

                    b.ToTable("MotoresHistorico");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.MultiDosificaciones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("idDosificacion")
                        .HasColumnType("int");

                    b.Property<int?>("idUbicacion")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idDosificacion");

                    b.HasIndex("idUbicacion");

                    b.ToTable("MultiDosificaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.NetAlarmas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AlertaGestionada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ArgumentoPropuesto")
                        .HasColumnType("int");

                    b.Property<int?>("Ciclo_Num")
                        .HasColumnType("int");

                    b.Property<int?>("Ciclo_NumPropuesto")
                        .HasColumnType("int");

                    b.Property<bool?>("ConsultarScada")
                        .HasColumnType("bit");

                    b.Property<bool?>("Deshabilitada")
                        .HasColumnType("bit");

                    b.Property<bool?>("Enviada")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaError")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaErrorMES")
                        .HasColumnType("datetime");

                    b.Property<int?>("FechaErrorMilisegundos")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaRecibido")
                        .HasColumnType("datetime");

                    b.Property<bool>("Finalizada")
                        .HasColumnType("bit");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int?>("IdDestino")
                        .HasColumnType("int");

                    b.Property<int?>("IdDestinoPropuesto")
                        .HasColumnType("int");

                    b.Property<int?>("IdError")
                        .HasColumnType("int");

                    b.Property<int?>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<int?>("IdModulo")
                        .HasColumnType("int");

                    b.Property<int?>("IdOrigen")
                        .HasColumnType("int");

                    b.Property<int?>("IdOrigenPropuesto")
                        .HasColumnType("int");

                    b.Property<int?>("IdPlc")
                        .HasColumnType("int");

                    b.Property<int?>("IdSeccion")
                        .HasColumnType("int");

                    b.Property<int?>("InfoAdicScada")
                        .HasColumnType("int");

                    b.Property<decimal?>("InfoAdicional1")
                        .HasColumnType("numeric(18, 8)");

                    b.Property<decimal?>("InfoAdicional2")
                        .HasColumnType("numeric(18, 8)");

                    b.Property<decimal?>("InfoAdicional3")
                        .HasColumnType("numeric(18, 8)");

                    b.Property<decimal?>("InfoAdicional4")
                        .HasColumnType("numeric(18, 8)");

                    b.Property<decimal?>("InfoAdicional5")
                        .HasColumnType("numeric(18, 8)");

                    b.Property<bool?>("Interno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("MostrarAUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("OpcConfigId")
                        .HasColumnType("int");

                    b.Property<string>("Opcion1")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Opcion2")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Opcion3")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Opcion4")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("PesadaNum")
                        .HasColumnType("int");

                    b.Property<bool?>("RequiereRespuesta")
                        .HasColumnType("bit");

                    b.Property<decimal?>("RespArgumentos0")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(15, 5)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("RespArgumentos1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(15, 5)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("RespArgumentos2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(15, 5)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("RespArgumentos3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(15, 5)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("RespFecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("RespIdDestino")
                        .HasColumnType("int");

                    b.Property<int?>("RespIdLote")
                        .HasColumnType("int");

                    b.Property<int?>("RespIdOrden")
                        .HasColumnType("int");

                    b.Property<int?>("RespIdOrigen")
                        .HasColumnType("int");

                    b.Property<int?>("RespIdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("RespNumCiclos")
                        .HasColumnType("int");

                    b.Property<string>("RespPC")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("RespTxt")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("RespUsuario")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal?>("RespVariables0")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(15, 5)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("RespVariables1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(15, 5)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("RespVariables2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(15, 5)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("RespVariables3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(15, 5)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("RespVariables4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(15, 5)")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Respondido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Respuesta")
                        .HasColumnType("int");

                    b.Property<bool?>("RevisadoAlertas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("TextoAdicional")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("TextoOpcional")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("TipoInterno")
                        .HasColumnType("int");

                    b.Property<bool>("Tratada")
                        .HasColumnType("bit");

                    b.Property<bool>("Visualizada")
                        .HasColumnType("bit");

                    b.Property<int?>("idDosificacion")
                        .HasColumnType("int");

                    b.Property<int?>("idMedidor")
                        .HasColumnType("int");

                    b.Property<int?>("idMotor")
                        .HasColumnType("int");

                    b.Property<int?>("idOpc")
                        .HasColumnType("int");

                    b.Property<int?>("idOrden")
                        .HasColumnType("int");

                    b.Property<int?>("idUbicacion")
                        .HasColumnType("int");

                    b.Property<string>("txtError")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("IdDestino");

                    b.HasIndex("IdDestinoPropuesto");

                    b.HasIndex("IdError");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdModulo");

                    b.HasIndex("IdOrigen");

                    b.HasIndex("IdOrigenPropuesto");

                    b.HasIndex("IdSeccion");

                    b.HasIndex("OpcConfigId");

                    b.HasIndex("RespIdLote");

                    b.HasIndex("RespIdProducto");

                    b.HasIndex("Respondido")
                        .HasName("_dta_index_NetAlarmas_2");

                    b.HasIndex("Respuesta");

                    b.HasIndex("idDosificacion");

                    b.HasIndex("idMedidor");

                    b.HasIndex("idOrden");

                    b.HasIndex("idUbicacion");

                    b.HasIndex("Id", "IdPlc", "idOrden", "idDosificacion", "idMedidor", "IdModulo", "TextoOpcional", "IdError", "FechaRecibido", "Respuesta", "RespPC", "RespUsuario", "RespFecha", "RespTxt", "txtError", "Opcion1", "Opcion2", "Opcion4", "Opcion3", "Tratada", "Visualizada", "idUbicacion", "Finalizada", "IdSeccion", "IdGrupo", "Ciclo_Num", "IdOrigen", "IdDestino", "IdOrigenPropuesto", "IdDestinoPropuesto", "Ciclo_NumPropuesto", "ConsultarScada", "InfoAdicScada", "ArgumentoPropuesto", "Enviada", "TextoAdicional", "FechaErrorMilisegundos", "RespIdOrigen", "RespIdDestino", "RespNumCiclos", "RespIdOrden", "RespArgumentos0", "RespArgumentos1", "RespArgumentos2", "RespArgumentos3", "RespVariables0", "RespVariables1", "RespVariables2", "RespVariables3", "RespVariables4", "RespIdProducto", "RespIdLote", "Interno", "TipoInterno", "PesadaNum", "Deshabilitada", "InfoAdicional1", "InfoAdicional2", "InfoAdicional3", "InfoAdicional4", "InfoAdicional5", "Respondido", "MostrarAUsuario", "RequiereRespuesta", "FechaError")
                        .HasName("_dta_index_NetAlarmas_1");

                    b.HasIndex("IdPlc", "idDosificacion", "idMedidor", "IdModulo", "TextoOpcional", "IdError", "FechaError", "FechaRecibido", "Respuesta", "RespPC", "RespUsuario", "RespFecha", "RespTxt", "txtError", "Opcion1", "Opcion2", "Opcion4", "Opcion3", "Tratada", "Visualizada", "idUbicacion", "Finalizada", "IdSeccion", "IdGrupo", "Ciclo_Num", "IdOrigen", "IdDestino", "IdOrigenPropuesto", "IdDestinoPropuesto", "Ciclo_NumPropuesto", "RequiereRespuesta", "ConsultarScada", "InfoAdicScada", "ArgumentoPropuesto", "Enviada", "TextoAdicional", "FechaErrorMilisegundos", "Respondido", "RespIdOrigen", "RespIdDestino", "RespNumCiclos", "RespIdOrden", "RespArgumentos0", "RespArgumentos1", "RespArgumentos2", "RespArgumentos3", "RespVariables0", "RespVariables1", "RespVariables2", "RespVariables3", "RespVariables4", "RespIdProducto", "RespIdLote", "Interno", "TipoInterno", "PesadaNum", "MostrarAUsuario", "Deshabilitada", "InfoAdicional1", "InfoAdicional2", "InfoAdicional3", "InfoAdicional4", "InfoAdicional5", "FechaErrorMES", "idOrden", "Id")
                        .HasName("IndexNetAlarmas_1");

                    b.HasIndex("IdPlc", "idOrden", "idDosificacion", "idMedidor", "IdModulo", "TextoOpcional", "IdError", "FechaRecibido", "Respuesta", "RespPC", "RespUsuario", "RespFecha", "RespTxt", "txtError", "Opcion1", "Opcion2", "Opcion4", "Opcion3", "Tratada", "Visualizada", "idUbicacion", "Finalizada", "IdSeccion", "IdGrupo", "Ciclo_Num", "IdOrigen", "IdDestino", "IdOrigenPropuesto", "IdDestinoPropuesto", "Ciclo_NumPropuesto", "ConsultarScada", "InfoAdicScada", "ArgumentoPropuesto", "Enviada", "TextoAdicional", "FechaErrorMilisegundos", "RespIdOrigen", "RespIdDestino", "RespNumCiclos", "RespIdOrden", "RespArgumentos0", "RespArgumentos1", "RespArgumentos2", "RespArgumentos3", "RespVariables0", "RespVariables1", "RespVariables2", "RespVariables3", "RespVariables4", "RespIdProducto", "RespIdLote", "Interno", "TipoInterno", "PesadaNum", "Deshabilitada", "InfoAdicional1", "InfoAdicional2", "InfoAdicional3", "InfoAdicional4", "InfoAdicional5", "FechaErrorMES", "idMotor", "MostrarAUsuario", "RequiereRespuesta", "Respondido", "FechaError", "Id")
                        .HasName("INetAlarmas1");

                    b.ToTable("NetAlarmas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.NetAlarmasAutomaticas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("ForzarFinalizacion")
                        .HasColumnType("bit");

                    b.Property<int?>("IdAlarmasTipo")
                        .HasColumnType("int");

                    b.Property<int?>("IdMedidor")
                        .HasColumnType("int");

                    b.Property<int?>("IdModulo")
                        .HasColumnType("int");

                    b.Property<int?>("IdNetAlarmasRespuesta")
                        .HasColumnType("int");

                    b.Property<int?>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<int?>("Reintentos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("SegundosControl")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("IdAlarmasTipo");

                    b.HasIndex("IdMedidor");

                    b.HasIndex("IdModulo");

                    b.HasIndex("IdNetAlarmasRespuesta");

                    b.HasIndex("IdUbicacion");

                    b.ToTable("NetAlarmasAutomaticas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.NetAlarmasAutomaticasOrdenUbicaciones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaProcesada")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdDosificacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdNetAlarmaAutomatica")
                        .HasColumnType("int");

                    b.Property<int?>("IdOrden")
                        .HasColumnType("int");

                    b.Property<int?>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<int?>("Ordenacion")
                        .HasColumnType("int");

                    b.Property<bool?>("Procesada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("id");

                    b.HasIndex("IdDosificacion");

                    b.HasIndex("IdNetAlarmaAutomatica");

                    b.HasIndex("IdOrden");

                    b.HasIndex("IdUbicacion");

                    b.ToTable("NetAlarmasAutomaticasOrdenUbicaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.NetAlarmasRespuestas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("CopiarAdicional5AVar0")
                        .HasColumnType("bit");

                    b.Property<bool?>("CopiarAdicional5AVar1")
                        .HasColumnType("bit");

                    b.Property<bool?>("CopiarAdicional5AVar2")
                        .HasColumnType("bit");

                    b.Property<bool?>("CopiarAdicional5AVar3")
                        .HasColumnType("bit");

                    b.Property<bool?>("CopiarAdicional5AVar4")
                        .HasColumnType("bit");

                    b.Property<int?>("DecimalesArgumentos")
                        .HasColumnType("int");

                    b.Property<int?>("IdPlc")
                        .HasColumnType("int");

                    b.Property<bool?>("SeleccArgumento0")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("SeleccArgumento1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("SeleccArgumento2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("SeleccArgumento3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("SeleccTextoAdicional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("SeleccUbicacionDestino")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("SeleccVariables0")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("SeleccVariables1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("SeleccVariables2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("SeleccVariables3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("SeleccVariables4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("SeleccionLote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("SeleccionProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("SeleccionUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Texto")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("txtArgumento0")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(250)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(250);

                    b.Property<string>("txtArgumento1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(250)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(250);

                    b.Property<string>("txtArgumento2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(250)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(250);

                    b.Property<string>("txtArgumento3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(250)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(250);

                    b.Property<string>("txtTextoAdicional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(250)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(250);

                    b.Property<string>("txtVariables0")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(250)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(250);

                    b.Property<string>("txtVariables1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(250)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(250);

                    b.Property<string>("txtVariables2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(250)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(250);

                    b.Property<string>("txtVariables3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(250)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(250);

                    b.Property<string>("txtVariables4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(250)")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(250);

                    b.HasKey("id");

                    b.ToTable("NetAlarmasRespuestas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.NetAlarmasTipoRespuestaOrigen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Accion")
                        .HasColumnType("tinyint");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("NetAlarmasRespuestaId")
                        .HasColumnType("int");

                    b.Property<int>("NetAlarmasTipoId")
                        .HasColumnType("int");

                    b.Property<int>("OrigenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NetAlarmasRespuestaId");

                    b.HasIndex("NetAlarmasTipoId");

                    b.HasIndex("OrigenId");

                    b.ToTable("NetAlarmasTiposRespuestasOrigenes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.NetAlarmasTipos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AutoFinalizar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("IdAlarmaPLC")
                        .HasColumnType("int");

                    b.Property<bool?>("MostrarUsuario")
                        .HasColumnType("bit");

                    b.Property<int?>("Nivel")
                        .HasColumnType("int");

                    b.Property<int?>("OEETipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("RolShow")
                        .HasColumnType("int");

                    b.Property<string>("TextoError")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("UserShow")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolShow");

                    b.HasIndex("UserShow");

                    b.ToTable("NetAlarmasTipos");

                    b.HasData(
                        new
                        {
                            Id = 2050,
                            AutoFinalizar = false,
                            IdAlarmaPLC = 2050,
                            MostrarUsuario = true,
                            TextoError = "Comprobacion Origen Vacio"
                        });
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.NetAlarmasTiposRespuestas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activado")
                        .HasColumnType("bit");

                    b.Property<int>("idRespuesta")
                        .HasColumnType("int");

                    b.Property<int>("idTipo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idRespuesta");

                    b.HasIndex("idTipo");

                    b.ToTable("NetAlarmasTiposRespuestas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OEEEstados", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FFinal")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FInicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdAlarmaActual")
                        .HasColumnType("int");

                    b.Property<int?>("IdMedidor")
                        .HasColumnType("int");

                    b.Property<int?>("IdModulo")
                        .HasColumnType("int");

                    b.Property<int?>("IdOrdenActual")
                        .HasColumnType("int");

                    b.Property<int?>("IdTurno")
                        .HasColumnType("int");

                    b.Property<int?>("OperarioId")
                        .HasColumnType("int");

                    b.Property<int?>("VentanaSegs")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Estado");

                    b.HasIndex("IdAlarmaActual");

                    b.HasIndex("IdMedidor");

                    b.HasIndex("IdModulo");

                    b.HasIndex("IdOrdenActual");

                    b.HasIndex("IdTurno");

                    b.HasIndex("OperarioId");

                    b.HasIndex("id", "IdMedidor", "Estado", "FInicio", "FFinal", "VentanaSegs", "OperarioId", "IdTurno", "IdAlarmaActual", "IdOrdenActual", "IdModulo")
                        .HasName("_dta_index_OEEEstados_6_140579589__K2_1_3_4_5_6_7_8_9_10_11");

                    b.ToTable("OEEEstados");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OEEEstadosMedidores", b =>
                {
                    b.Property<int>("idEstadoTipo")
                        .HasColumnType("int");

                    b.Property<int>("idMedidor")
                        .HasColumnType("int");

                    b.HasKey("idEstadoTipo", "idMedidor");

                    b.HasIndex("idMedidor");

                    b.ToTable("OEEEstadosMedidores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OEEEstadosModulos", b =>
                {
                    b.Property<int>("idEstadoTipo")
                        .HasColumnType("int");

                    b.Property<int>("idModulo")
                        .HasColumnType("int");

                    b.HasKey("idEstadoTipo", "idModulo");

                    b.HasIndex("idModulo");

                    b.ToTable("OEEEstadosModulos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OEEEstadosTipo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool?>("EstadoAveria")
                        .HasColumnType("bit");

                    b.Property<bool?>("EstadoAveriaGrave")
                        .HasColumnType("bit");

                    b.Property<bool?>("EstadoEnHorario")
                        .HasColumnType("bit");

                    b.Property<bool?>("EstadoMantenimiento")
                        .HasColumnType("bit");

                    b.Property<bool?>("EstadoProduciendo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("OEEEstadosTipo");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OEEEstadosTipoLista", b =>
                {
                    b.Property<int>("IdEstadoTipo")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoEnum")
                        .HasColumnType("int");

                    b.HasKey("IdEstadoTipo", "IdEstadoEnum");

                    b.ToTable("OEEEstadosTipoLista");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OEEHorarios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Domingo")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<bool>("Jueves")
                        .HasColumnType("bit");

                    b.Property<bool>("Lunes")
                        .HasColumnType("bit");

                    b.Property<bool>("Martes")
                        .HasColumnType("bit");

                    b.Property<bool>("Miercoles")
                        .HasColumnType("bit");

                    b.Property<bool>("Sabado")
                        .HasColumnType("bit");

                    b.Property<bool>("Viernes")
                        .HasColumnType("bit");

                    b.Property<int?>("idMedidor")
                        .HasColumnType("int");

                    b.Property<int?>("idModulo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idMedidor");

                    b.HasIndex("idModulo");

                    b.ToTable("OEEHorarios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OpcConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BitVida")
                        .HasColumnType("datetime");

                    b.Property<int?>("Calidad")
                        .HasColumnType("int");

                    b.Property<string>("DeviceAlias")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("DiscoveryUrl")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("Enabled")
                        .HasColumnName("Activado")
                        .HasColumnType("bit");

                    b.Property<string>("EndpointUrl")
                        .HasColumnName("Endpoint")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<Guid>("GatewayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsGeneral")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrincipal")
                        .HasColumnType("bit");

                    b.Property<bool>("Maestro")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnName("Nombre")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("OPCIP")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("OPCNombre")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("OPCRate")
                        .HasColumnType("int");

                    b.Property<bool>("SincUbicaciones")
                        .HasColumnType("bit");

                    b.Property<bool>("SincUsuarios")
                        .HasColumnType("bit");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("Type")
                        .HasColumnName("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GatewayId");

                    b.ToTable("OpcConfig");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Opciones", b =>
                {
                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Clave");

                    b.ToTable("Opciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OpcionesRoles", b =>
                {
                    b.Property<string>("idClave")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("idRol")
                        .HasColumnType("int");

                    b.Property<string>("valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("idClave", "idRol");

                    b.HasIndex("idRol");

                    b.ToTable("OpcionesRoles");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OpcionesUsuarios", b =>
                {
                    b.Property<string>("idClave")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.Property<string>("valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("idClave", "idUsuario");

                    b.HasIndex("idUsuario");

                    b.ToTable("OpcionesUsuarios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OperAcciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdPlc")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool?>("RequiereTiempo")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("OperAcciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OperCabPlantillas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdModulo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("IdModulo");

                    b.ToTable("OperCabPlantillas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OperMotores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Cajon1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Cajon10")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Cajon2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Cajon3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Cajon4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Cajon5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Cajon6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Cajon7")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Cajon8")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Cajon9")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("DescargaCaminoFiltro")
                        .HasColumnType("int");

                    b.Property<bool?>("DescargaMezclador")
                        .HasColumnType("bit");

                    b.Property<bool?>("DescargaSoloSiCamino")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsTiempoMezclaERP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("ForzarMedidor")
                        .HasColumnType("bit");

                    b.Property<int?>("IdMedidor")
                        .HasColumnType("int");

                    b.Property<int?>("IdPlc")
                        .HasColumnType("int");

                    b.Property<bool?>("NoRepetido")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("OpcConfigId")
                        .HasColumnType("int");

                    b.Property<bool?>("RaseraTunelCarga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("idAccionMotor")
                        .HasColumnType("int");

                    b.Property<int?>("idMedidorForzado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMedidor");

                    b.HasIndex("OpcConfigId");

                    b.HasIndex("idAccionMotor");

                    b.HasIndex("idMedidorForzado");

                    b.ToTable("OperMotores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OperMotoresModulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ControlOrdenacion")
                        .HasColumnType("bit");

                    b.Property<int?>("IdMedidor")
                        .HasColumnType("int");

                    b.Property<int?>("IdModulo")
                        .HasColumnType("int");

                    b.Property<int?>("IdOperMotor")
                        .HasColumnType("int");

                    b.Property<int?>("NumOrdenacion")
                        .HasColumnType("int");

                    b.Property<bool?>("ObligatorioConProductos")
                        .HasColumnType("bit");

                    b.Property<string>("TextoVariable")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TextoVariable2")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("ValorMaximo")
                        .HasColumnType("int");

                    b.Property<int?>("ValorMaximo2")
                        .HasColumnType("int");

                    b.Property<int?>("ValorMinimo")
                        .HasColumnType("int");

                    b.Property<int?>("ValorMinimo2")
                        .HasColumnType("int");

                    b.Property<bool?>("VerVariable")
                        .HasColumnType("bit");

                    b.Property<bool?>("VerVariable2")
                        .HasColumnType("bit");

                    b.Property<bool?>("obligatorio")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdMedidor");

                    b.HasIndex("IdModulo");

                    b.HasIndex("IdOperMotor");

                    b.ToTable("OperMotoresModulos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OperPlantillas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal?>("Consigna")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("ConsignaPausa")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("DosiVariable1")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal?>("DosiVariable2")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<bool?>("DosificarProductoAnterior")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Histeresys")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<int?>("IdOperAccion")
                        .HasColumnType("int");

                    b.Property<int?>("IdOperCabPlantillas")
                        .HasColumnType("int");

                    b.Property<int?>("IdOperMotor")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdTempControl")
                        .HasColumnType("int");

                    b.Property<int?>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<int?>("KGxSeg")
                        .HasColumnType("int");

                    b.Property<bool?>("KGxSegPesoAcumulado")
                        .HasColumnType("bit");

                    b.Property<bool?>("KGxSegPesoAntDosificacion")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaxAlarma")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<int?>("Medidor")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinAlarma")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<int?>("OperTiempo")
                        .HasColumnType("int");

                    b.Property<decimal?>("OperVariable")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<decimal?>("OperVariable2")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<int?>("Ordenacion")
                        .HasColumnType("int");

                    b.Property<decimal?>("Porcentaje")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("Prioridad")
                        .HasColumnType("int");

                    b.Property<int?>("TempModo")
                        .HasColumnType("int");

                    b.Property<string>("TextoVariable")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("TipoDosificacion")
                        .HasColumnType("int");

                    b.Property<decimal?>("ZonaMuerta")
                        .HasColumnType("decimal(9, 4)");

                    b.HasKey("Id");

                    b.HasIndex("IdOperAccion");

                    b.HasIndex("IdOperCabPlantillas");

                    b.HasIndex("IdOperMotor");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdTempControl");

                    b.HasIndex("IdUbicacion");

                    b.HasIndex("Medidor");

                    b.ToTable("OperPlantillas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Ordenes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Bloqueada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("BultosOrigen")
                        .HasColumnType("int");

                    b.Property<int?>("Caminos")
                        .HasColumnType("int");

                    b.Property<float?>("Cantidad")
                        .HasColumnType("real");

                    b.Property<bool?>("Confirmada")
                        .HasColumnType("bit");

                    b.Property<int?>("ContadorCiclos")
                        .HasColumnType("int");

                    b.Property<bool?>("DatosOptimizados")
                        .HasColumnType("bit");

                    b.Property<int?>("Departamento")
                        .HasColumnType("int");

                    b.Property<bool?>("Editada")
                        .HasColumnType("bit");

                    b.Property<decimal>("EfectiveJouls")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("Entrada")
                        .HasColumnType("int");

                    b.Property<int?>("EnvaseOrigen")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("ExportError")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaEnvioAPlc")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInicioPrevista")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fexportado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fin")
                        .HasColumnType("datetime");

                    b.Property<int?>("Formula")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FormulaFecha")
                        .HasColumnType("datetime");

                    b.Property<float?>("Ganancia")
                        .HasColumnType("real");

                    b.Property<int?>("GananciaUnidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdCab")
                        .HasColumnType("int");

                    b.Property<int?>("IdVehiculo")
                        .HasColumnType("int");

                    b.Property<bool>("IgnorarConsumidos")
                        .HasColumnType("bit");

                    b.Property<bool>("IgnorarProducidos")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<bool?>("IncompatComprobada")
                        .HasColumnType("bit");

                    b.Property<bool?>("IncompatEstricta")
                        .HasColumnType("bit");

                    b.Property<bool?>("IncompatFlexible")
                        .HasColumnType("bit");

                    b.Property<string>("IncompatInfo")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool?>("IniciarOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("Inicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("LineaEntrada")
                        .HasColumnType("int");

                    b.Property<int?>("LineaSalida")
                        .HasColumnType("int");

                    b.Property<int?>("LineaVenta")
                        .HasColumnType("int");

                    b.Property<int?>("LoteDestino")
                        .HasColumnType("int");

                    b.Property<string>("LoteNombre")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Matricula")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("Medicacion")
                        .HasColumnType("int");

                    b.Property<bool?>("Medicada")
                        .HasColumnType("bit");

                    b.Property<bool?>("Modificada")
                        .HasColumnType("bit");

                    b.Property<int?>("Modulo")
                        .HasColumnType("int");

                    b.Property<float>("ModuloVariables0")
                        .HasColumnType("real");

                    b.Property<float>("ModuloVariables1")
                        .HasColumnType("real");

                    b.Property<float>("ModuloVariables2")
                        .HasColumnType("real");

                    b.Property<float>("ModuloVariables3")
                        .HasColumnType("real");

                    b.Property<float>("ModuloVariables4")
                        .HasColumnType("real");

                    b.Property<float>("ModuloVariables5")
                        .HasColumnType("real");

                    b.Property<float>("ModuloVariables6")
                        .HasColumnType("real");

                    b.Property<float>("ModuloVariables7")
                        .HasColumnType("real");

                    b.Property<float>("ModuloVariables8")
                        .HasColumnType("real");

                    b.Property<float>("ModuloVariables9")
                        .HasColumnType("real");

                    b.Property<bool?>("NecesitaOrigen")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("NombreChofer")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("NumeroCiclos")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenAscendiente")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenEnvioPLC")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenRelacionada")
                        .HasColumnType("int");

                    b.Property<int?>("Planificacion")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoDestino")
                        .HasColumnType("int");

                    b.Property<int?>("Receta")
                        .HasColumnType("int");

                    b.Property<string>("RefERP")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RefERP1")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefERP2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RefERP3")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Remolque")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("Salida")
                        .HasColumnType("int");

                    b.Property<string>("SegundosCicloTeorico")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("Serie")
                        .HasColumnType("int");

                    b.Property<int?>("SerieEntrada")
                        .HasColumnType("int");

                    b.Property<int?>("SerieOld")
                        .HasColumnType("int");

                    b.Property<int?>("SerieOrdenAscendiente")
                        .HasColumnType("int");

                    b.Property<int?>("SerieOrdenRelacionada")
                        .HasColumnType("int");

                    b.Property<int?>("SeriePlanificacion")
                        .HasColumnType("int");

                    b.Property<int?>("SerieSalida")
                        .HasColumnType("int");

                    b.Property<int?>("SerieViajeSalida")
                        .HasColumnType("int");

                    b.Property<float?>("Servida")
                        .HasColumnType("real");

                    b.Property<int?>("Tiempo")
                        .HasColumnType("int");

                    b.Property<int?>("TiempoPrevistoCicloSegs")
                        .HasColumnType("int");

                    b.Property<int>("TipoAutoRespuestaDestino")
                        .HasColumnType("int");

                    b.Property<int?>("TipoFinalizacion")
                        .HasColumnType("int");

                    b.Property<int?>("TotalCiclosReal")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalJouls")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool?>("Validada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<float?>("Velocidad")
                        .HasColumnType("real");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.Property<int?>("ViajeSalida")
                        .HasColumnType("int");

                    b.Property<int?>("idChofer")
                        .HasColumnType("int");

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.Property<int?>("idTarjeta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Departamento");

                    b.HasIndex("Entrada");

                    b.HasIndex("EnvaseOrigen");

                    b.HasIndex("Formula");

                    b.HasIndex("IdVehiculo");

                    b.HasIndex("LineaEntrada");

                    b.HasIndex("LineaSalida");

                    b.HasIndex("LoteDestino");

                    b.HasIndex("Medicacion");

                    b.HasIndex("Medicada")
                        .HasName("_dta_index_Ordenes_3");

                    b.HasIndex("Modulo");

                    b.HasIndex("ProductoDestino");

                    b.HasIndex("Version");

                    b.HasIndex("ViajeSalida");

                    b.HasIndex("idChofer");

                    b.HasIndex("idTarjeta");

                    b.HasIndex("Estado", "Fin")
                        .HasName("iOrdenes_estado_ffin");

                    b.HasIndex("IdCab", "Serie", "Id", "Nombre", "Departamento", "Modulo", "Cantidad", "Fecha", "Servida", "Inicio", "Fin", "Formula", "NumeroCiclos", "ContadorCiclos", "Exportado", "LoteNombre", "FormulaFecha", "ProductoDestino", "LoteDestino", "TipoFinalizacion", "Tiempo", "Velocidad", "Ganancia", "GananciaUnidad", "EnvaseOrigen", "BultosOrigen", "Modificada", "Receta", "Medicacion", "Version", "Confirmada", "SerieSalida", "Salida", "LineaSalida", "SerieEntrada", "Entrada", "LineaEntrada", "SeriePlanificacion", "Planificacion", "Importado", "LineaVenta", "OrdenAscendiente", "SerieOrdenAscendiente", "SerieOrdenRelacionada", "OrdenRelacionada", "Medicada", "idChofer", "idTarjeta", "Editada", "idOld", "SerieOld", "IniciarOrden", "Caminos", "FechaEnvioAPlc", "Bloqueada", "ViajeSalida", "SerieViajeSalida", "OrdenEnvioPLC", "Estado")
                        .HasName("_dta_index_Ordenes_1");

                    b.HasIndex("Serie", "Id", "Nombre", "Departamento", "Modulo", "Cantidad", "Fecha", "Estado", "Servida", "Inicio", "Fin", "Formula", "NumeroCiclos", "ContadorCiclos", "Exportado", "LoteNombre", "FormulaFecha", "ProductoDestino", "LoteDestino", "TipoFinalizacion", "Tiempo", "Velocidad", "Ganancia", "GananciaUnidad", "EnvaseOrigen", "BultosOrigen", "Modificada", "Receta", "Medicacion", "Version", "Confirmada", "SerieSalida", "Salida", "LineaSalida", "SerieEntrada", "Entrada", "LineaEntrada", "SeriePlanificacion", "Planificacion", "Importado", "LineaVenta", "OrdenAscendiente", "SerieOrdenAscendiente", "SerieOrdenRelacionada", "OrdenRelacionada", "Medicada", "idChofer", "idTarjeta", "Editada", "idOld", "SerieOld", "IniciarOrden", "OrdenEnvioPLC", "Caminos", "FechaEnvioAPlc", "Bloqueada", "ViajeSalida", "SerieViajeSalida", "IdCab")
                        .HasName("_dta_index_Ordenes_2");

                    b.HasIndex("Serie", "Nombre", "Departamento", "Modulo", "Cantidad", "Fecha", "Estado", "Servida", "Inicio", "Fin", "Formula", "NumeroCiclos", "ContadorCiclos", "Exportado", "LoteNombre", "FormulaFecha", "ProductoDestino", "LoteDestino", "TipoFinalizacion", "Tiempo", "Velocidad", "Ganancia", "GananciaUnidad", "EnvaseOrigen", "BultosOrigen", "Modificada", "Receta", "Medicacion", "Version", "Confirmada", "SerieSalida", "Salida", "LineaSalida", "SerieEntrada", "Entrada", "LineaEntrada", "SeriePlanificacion", "Planificacion", "Importado", "LineaVenta", "OrdenAscendiente", "SerieOrdenAscendiente", "SerieOrdenRelacionada", "OrdenRelacionada", "Medicada", "idChofer", "idTarjeta", "Editada", "idOld", "SerieOld", "IniciarOrden", "OrdenEnvioPLC", "Caminos", "FechaEnvioAPlc", "Bloqueada", "ViajeSalida", "SerieViajeSalida", "NombreChofer", "Matricula", "Remolque", "IdVehiculo", "RefERP", "SegundosCicloTeorico", "DatosOptimizados", "IncompatComprobada", "IncompatFlexible", "IncompatEstricta", "IncompatInfo", "TiempoPrevistoCicloSegs", "IdCab", "Id")
                        .HasName("IndexOrdenes_1");

                    b.HasIndex("IdCab", "Serie", "Id", "Nombre", "Departamento", "Cantidad", "Fecha", "Servida", "Inicio", "Fin", "Formula", "NumeroCiclos", "ContadorCiclos", "Exportado", "LoteNombre", "FormulaFecha", "ProductoDestino", "LoteDestino", "TipoFinalizacion", "Tiempo", "Velocidad", "Ganancia", "GananciaUnidad", "EnvaseOrigen", "BultosOrigen", "Modificada", "Receta", "Medicacion", "Version", "Confirmada", "SerieSalida", "Salida", "LineaSalida", "SerieEntrada", "Entrada", "LineaEntrada", "SeriePlanificacion", "Planificacion", "Importado", "LineaVenta", "OrdenAscendiente", "SerieOrdenAscendiente", "SerieOrdenRelacionada", "OrdenRelacionada", "Medicada", "idChofer", "idTarjeta", "Editada", "idOld", "SerieOld", "IniciarOrden", "OrdenEnvioPLC", "Caminos", "FechaEnvioAPlc", "ViajeSalida", "SerieViajeSalida", "NombreChofer", "Matricula", "Remolque", "IdVehiculo", "RefERP", "SegundosCicloTeorico", "DatosOptimizados", "IncompatComprobada", "IncompatFlexible", "IncompatEstricta", "IncompatInfo", "TiempoPrevistoCicloSegs", "FechaInicioPrevista", "NecesitaOrigen", "Fexportado", "ExportError", "TotalCiclosReal", "RefERP1", "RefERP2", "RefERP3", "Modulo", "Estado", "Bloqueada")
                        .HasName("IndOrdenes_ModuloEstadoBloqueada");

                    b.ToTable("Ordenes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OrdenesAutoInicio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("idOrden")
                        .HasColumnType("int");

                    b.Property<int>("idOrdenObjetivo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idOrden");

                    b.HasIndex("idOrdenObjetivo");

                    b.ToTable("OrdenesAutoInicio");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OrdenesDatosExtra", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<decimal?>("CantidadProducida")
                        .HasColumnType("decimal(18, 4)")
                        .HasComputedColumnSql("([dbo].[OrdenCantidadProducida]([id]))");

                    b.Property<decimal?>("KWConsumidosEfectivo")
                        .HasColumnType("decimal(18, 4)")
                        .HasComputedColumnSql("([dbo].[OrdenKWConsumidosEfectivo]([id]))");

                    b.Property<decimal?>("KWConsumidosTotal")
                        .HasColumnType("decimal(18, 4)")
                        .HasComputedColumnSql("([dbo].[OrdenKWConsumidosTotal]([id]))");

                    b.Property<decimal?>("KWEfectivo")
                        .HasColumnType("decimal(19, 4)")
                        .HasComputedColumnSql("([dbo].[OrdenKWProducidosEfectivo]([id])+[dbo].[OrdenKWConsumidosEfectivo]([id]))");

                    b.Property<decimal?>("KWEfectivoTonelada")
                        .HasColumnType("decimal(18, 6)")
                        .HasComputedColumnSql("([dbo].[OrdenKWEfectivoCantidad]([id]))");

                    b.Property<decimal?>("KWProducidosEfectivo")
                        .HasColumnType("decimal(18, 4)")
                        .HasComputedColumnSql("([dbo].[OrdenKWProducidosEfectivo]([id]))");

                    b.Property<decimal?>("KWProducidosTotal")
                        .HasColumnType("decimal(18, 4)")
                        .HasComputedColumnSql("([dbo].[OrdenKWProducidosTotal]([id]))");

                    b.Property<decimal?>("KWTotal")
                        .HasColumnType("decimal(19, 4)")
                        .HasComputedColumnSql("([dbo].[OrdenKWProducidosTotal]([id])+[dbo].[OrdenKWConsumidosTotal]([id]))");

                    b.Property<decimal?>("KWTotalTonelada")
                        .HasColumnType("decimal(18, 6)")
                        .HasComputedColumnSql("([dbo].[OrdenKWTotalCantidad]([id]))");

                    b.HasKey("id");

                    b.ToTable("OrdenesDatosExtra");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OrdenesRelacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Porcentaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(8, 2)")
                        .HasDefaultValueSql("((100))");

                    b.Property<int?>("idOrdenHijo")
                        .HasColumnType("int");

                    b.Property<int?>("idOrdenPadre")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idOrdenHijo");

                    b.HasIndex("idOrdenPadre");

                    b.ToTable("OrdenesRelacion");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Origenes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ActivarMaximoDosificacion")
                        .HasColumnType("bit");

                    b.Property<bool?>("ActivarMinimoDosificacion")
                        .HasColumnType("bit");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal?>("Capacidad")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaximoDosificacion")
                        .HasColumnType("decimal(15, 3)");

                    b.Property<int>("Medidor")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinimoDosificacion")
                        .HasColumnType("decimal(15, 3)");

                    b.Property<bool?>("MultiDosificacion")
                        .HasColumnType("bit");

                    b.Property<bool?>("PorcentajeAPLC")
                        .HasColumnType("bit");

                    b.Property<bool?>("PorcentajeObligatorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Prioridad")
                        .HasColumnType("int");

                    b.Property<int?>("PrioridadDosificacion")
                        .HasColumnType("int");

                    b.Property<bool>("ProductoStockObligatorio")
                        .HasColumnType("bit");

                    b.Property<bool?>("Proponer")
                        .HasColumnType("bit");

                    b.Property<bool>("SeleccionCargaAutomatica")
                        .HasColumnType("bit");

                    b.Property<string>("TextoVariable")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TextoVariable2")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("Ubicacion")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorDefecto")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<decimal?>("ValorDefecto2")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<decimal?>("ValorMaximo")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<decimal?>("ValorMaximo2")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<decimal?>("ValorMinimo")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<decimal?>("ValorMinimo2")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<bool?>("VerVariable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("VerVariable2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("ID");

                    b.HasIndex("Medidor");

                    b.HasIndex("Ubicacion");

                    b.ToTable("Origenes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.PLCAddons", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("PLCAddons");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.PLCAddonsVars", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("idAddon")
                        .HasColumnType("int");

                    b.Property<bool>("subscribir")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("idAddon");

                    b.ToTable("PLCAddonsVars");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.PLCRead", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UltimaLectura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("posicion")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Nombre")
                        .HasName("IX_PLCRead");

                    b.ToTable("PLCRead");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.PLCWrite", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEnviado")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaWrite")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("PLCWrite");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Paises", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CodigoUE")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Prefijo")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Pistolas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BitsDatos")
                        .HasColumnType("int");

                    b.Property<decimal?>("BitsParada")
                        .HasColumnType("numeric(2, 1)");

                    b.Property<bool?>("DTR")
                        .HasColumnType("bit");

                    b.Property<int?>("HandShake")
                        .HasColumnType("int");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("IdMedidor")
                        .HasColumnType("int");

                    b.Property<bool?>("ModoEntradasAlmacen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("ModoPicking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("ModoSalidasAlmacen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombrePuerto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Paridad")
                        .HasColumnType("int");

                    b.Property<int?>("Puerto")
                        .HasColumnType("int");

                    b.Property<bool?>("RTS")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Velocidad")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMedidor");

                    b.ToTable("Pistolas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Pivots", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("DatosInforme")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("IdPivot")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Pivots");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Productos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Afeccion")
                        .HasColumnType("int");

                    b.Property<int?>("Analisi")
                        .HasColumnType("int");

                    b.Property<bool?>("AplicacionDirecta")
                        .HasColumnType("bit");

                    b.Property<bool?>("Automatico")
                        .HasColumnType("bit");

                    b.Property<bool?>("Bloqueado")
                        .HasColumnType("bit");

                    b.Property<int?>("Caducidad")
                        .HasColumnType("int");

                    b.Property<bool?>("ControlStock")
                        .HasColumnType("bit");

                    b.Property<float?>("Densidad")
                        .HasColumnType("real");

                    b.Property<int?>("DestinoDefecto")
                        .HasColumnType("int");

                    b.Property<decimal?>("DesviacionMaxima")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<bool?>("Dosificable")
                        .HasColumnType("bit");

                    b.Property<string>("EAN13")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("Entradas")
                        .HasColumnType("int");

                    b.Property<int?>("Envase")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<int?>("EtiquetaControl")
                        .HasColumnType("int");

                    b.Property<int?>("EtiquetaEntradas")
                        .HasColumnType("int");

                    b.Property<int?>("EtiquetaGranel")
                        .HasColumnType("int");

                    b.Property<int?>("EtiquetaMuestras")
                        .HasColumnType("int");

                    b.Property<int?>("EtiquetaSacos")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<int?>("Familia")
                        .HasColumnType("int");

                    b.Property<int?>("FamiliaMedidor")
                        .HasColumnType("int");

                    b.Property<int?>("Formato")
                        .HasColumnType("int");

                    b.Property<int?>("Formula")
                        .HasColumnType("int");

                    b.Property<float?>("Humedad")
                        .HasColumnType("real");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Inhabilitado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Medicamento")
                        .HasColumnType("bit");

                    b.Property<int?>("Medidor")
                        .HasColumnType("int");

                    b.Property<int?>("Modulo")
                        .HasColumnType("int");

                    b.Property<bool?>("MostrarEnEtiqueta")
                        .HasColumnType("bit");

                    b.Property<bool?>("Muestras")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombreAMostrarEnEtiqueta")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("NumeroRegistro")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PartidaArancelariaCompras")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PartidaArancelariaFabricacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("PausaPosteriorDosificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<float?>("PesoEspecifico")
                        .HasColumnType("real");

                    b.Property<int?>("PlantillaCabCargaPiquera")
                        .HasColumnType("int");

                    b.Property<int?>("PlantillaCabCargaPiquera2")
                        .HasColumnType("int");

                    b.Property<int?>("PlantillaCabMolturacion")
                        .HasColumnType("int");

                    b.Property<int?>("PlantillaCabProduccion")
                        .HasColumnType("int");

                    b.Property<int?>("PlantillaCabProduccion2")
                        .HasColumnType("int");

                    b.Property<int?>("PlantillaCabProduccion3")
                        .HasColumnType("int");

                    b.Property<int?>("PlantillaCabSecadero")
                        .HasColumnType("int");

                    b.Property<float?>("PrecioCompra")
                        .HasColumnType("real");

                    b.Property<float?>("PrecioCompraMedio")
                        .HasColumnType("real");

                    b.Property<float?>("PrecioCompraUltimo")
                        .HasColumnType("real");

                    b.Property<float?>("PrecioMedioCompra")
                        .HasColumnType("real");

                    b.Property<float?>("PrecioVenta")
                        .HasColumnType("real");

                    b.Property<bool?>("Receptable")
                        .HasColumnType("bit");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Referencia2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Refrescado")
                        .HasColumnType("bit");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.Property<float?>("StockMinimo")
                        .HasColumnType("real");

                    b.Property<int?>("TiempoEspera")
                        .HasColumnType("int");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("TipoDosificacion")
                        .HasColumnType("int");

                    b.Property<int?>("TipoIva")
                        .HasColumnType("int");

                    b.Property<bool?>("TipoPR")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ToleranciaInferior")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("ToleranciaSuperior")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<string>("ViaAdministracion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Afeccion");

                    b.HasIndex("DestinoDefecto");

                    b.HasIndex("Envase");

                    b.HasIndex("EtiquetaControl");

                    b.HasIndex("EtiquetaEntradas");

                    b.HasIndex("EtiquetaGranel");

                    b.HasIndex("EtiquetaMuestras");

                    b.HasIndex("EtiquetaSacos");

                    b.HasIndex("Familia");

                    b.HasIndex("FamiliaMedidor");

                    b.HasIndex("Formato");

                    b.HasIndex("Medidor");

                    b.HasIndex("Modulo");

                    b.HasIndex("PlantillaCabCargaPiquera");

                    b.HasIndex("PlantillaCabCargaPiquera2");

                    b.HasIndex("PlantillaCabMolturacion");

                    b.HasIndex("PlantillaCabProduccion");

                    b.HasIndex("PlantillaCabProduccion2");

                    b.HasIndex("PlantillaCabProduccion3");

                    b.HasIndex("PlantillaCabSecadero");

                    b.HasIndex("TipoIva");

                    b.HasIndex("Unidad");

                    b.HasIndex("Id", "Nombre", "Familia", "Densidad", "Unidad", "Tipo", "Stock", "ControlStock", "Dosificable", "Automatico", "TipoDosificacion", "Formato", "Envase", "Referencia", "Referencia2", "Importado", "Humedad", "PesoEspecifico", "Entradas", "Muestras", "EtiquetaGranel", "EtiquetaSacos", "EtiquetaMuestras", "EtiquetaControl", "Formula", "Analisi", "NumeroRegistro", "Inhabilitado", "Caducidad", "Refrescado", "Receptable", "Exportado", "Medicamento", "AplicacionDirecta", "Modulo", "FamiliaMedidor", "Afeccion", "PrecioCompra", "PrecioVenta", "PrecioMedioCompra", "StockMinimo", "Bloqueado", "TiempoEspera", "TipoIva", "PrecioCompraMedio", "PrecioCompraUltimo", "Estado", "EtiquetaEntradas", "ViaAdministracion", "MostrarEnEtiqueta", "NombreAMostrarEnEtiqueta", "idOld", "ToleranciaSuperior", "ToleranciaInferior", "PausaPosteriorDosificacion", "DesviacionMaxima", "PlantillaCabCargaPiquera", "TipoPR", "PlantillaCabProduccion", "PlantillaCabCargaPiquera2", "PlantillaCabSecadero", "EAN13", "Medidor")
                        .HasName("IProductos1");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ProductosGruposIncompatibilidades", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdGrupoIncompatibilidad")
                        .HasColumnType("int");

                    b.HasKey("IdProducto", "IdGrupoIncompatibilidad");

                    b.HasIndex("IdGrupoIncompatibilidad");

                    b.ToTable("ProductosGruposIncompatibilidades");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ProductosOperCabPlantillas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdOperCabPlantilla")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOperCabPlantilla");

                    b.HasIndex("IdProducto");

                    b.ToTable("ProductosOperCabPlantillas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Proveedores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abreviado")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("AutorizacionDestinoFinal")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CIF")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Inhabilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombreContacto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Pais")
                        .HasColumnType("int");

                    b.Property<string>("Poblacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("PorDefecto")
                        .HasColumnType("bit");

                    b.Property<int?>("Provincia")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Refrescado")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("TelefonoContacto")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Pais");

                    b.HasIndex("Provincia");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ProveedoresOrigenes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Inhabilitado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Pais")
                        .HasColumnType("int");

                    b.Property<string>("Poblacion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Proveedor")
                        .HasColumnType("int");

                    b.Property<int?>("Provincia")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Responsable")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("id");

                    b.HasIndex("Pais");

                    b.HasIndex("Proveedor");

                    b.HasIndex("Provincia");

                    b.ToTable("ProveedoresOrigenes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Provincias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Pais")
                        .HasColumnType("int");

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Pais");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Puntos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ColorDigitos")
                        .HasColumnType("int");

                    b.Property<int?>("ColorFinal")
                        .HasColumnType("int");

                    b.Property<int?>("ColorFondo")
                        .HasColumnType("int");

                    b.Property<int?>("ColorInicial")
                        .HasColumnType("int");

                    b.Property<int?>("ColorSombra")
                        .HasColumnType("int");

                    b.Property<int?>("ColorTitulo")
                        .HasColumnType("int");

                    b.Property<int?>("Decimales")
                        .HasColumnType("int");

                    b.Property<int?>("Digitos")
                        .HasColumnType("int");

                    b.Property<string>("DireccionPlc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Puntos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.PuntosDescarga", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool>("Importado")
                        .HasColumnType("bit");

                    b.Property<int?>("IntegraDomicilioId")
                        .HasColumnType("int");

                    b.Property<int?>("IntegraId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("idDomicilio")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idDomicilio");

                    b.ToTable("PuntosDescarga");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Recetas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AutoGenerada")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CantidadPienso")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<int?>("Conservacion")
                        .HasColumnType("int");

                    b.Property<int?>("Duracion")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("Frecuencia")
                        .HasColumnType("int");

                    b.Property<string>("Indicaciones")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("NaturalezaTratamiento")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<int?>("NumReceta")
                        .HasColumnType("int");

                    b.Property<string>("NumRegistro")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(254)")
                        .HasMaxLength(254);

                    b.Property<int?>("TiempoEspera")
                        .HasColumnType("int");

                    b.Property<int?>("TiempoEsperaHuevos")
                        .HasColumnType("int");

                    b.Property<int?>("TiempoEsperaLeche")
                        .HasColumnType("int");

                    b.Property<int?>("idAfeccion")
                        .HasColumnType("int");

                    b.Property<int?>("idCliente")
                        .HasColumnType("int");

                    b.Property<int?>("idDomicilio")
                        .HasColumnType("int");

                    b.Property<int?>("idProducto")
                        .HasColumnType("int");

                    b.Property<int?>("idSalidaLinea")
                        .HasColumnType("int");

                    b.Property<int?>("idSerie")
                        .HasColumnType("int");

                    b.Property<int?>("idVeterinario")
                        .HasColumnType("int");

                    b.Property<decimal?>("proporcionDiaria")
                        .HasColumnType("decimal(8, 3)");

                    b.HasKey("id");

                    b.HasIndex("idAfeccion");

                    b.HasIndex("idCliente");

                    b.HasIndex("idDomicilio");

                    b.HasIndex("idProducto");

                    b.HasIndex("idSalidaLinea");

                    b.HasIndex("idSerie");

                    b.HasIndex("idVeterinario");

                    b.ToTable("Recetas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.RecetasLineas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal?>("Porcentaje")
                        .HasColumnType("decimal(8, 5)");

                    b.Property<int?>("idMedicamento")
                        .HasColumnType("int");

                    b.Property<int?>("idReceta")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idMedicamento");

                    b.HasIndex("idReceta");

                    b.ToTable("RecetasLineas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Regularizaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Cantidad")
                        .HasColumnType("real");

                    b.Property<int?>("Envase")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("Formato")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int?>("Lote")
                        .HasColumnType("int");

                    b.Property<string>("LoteNombre")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<int?>("Serie")
                        .HasColumnType("int");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("Ubicacion")
                        .HasColumnType("int");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<int?>("Usuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Envase");

                    b.HasIndex("Formato");

                    b.HasIndex("Lote");

                    b.HasIndex("Producto");

                    b.HasIndex("Serie");

                    b.HasIndex("Ubicacion");

                    b.HasIndex("Unidad");

                    b.HasIndex("Usuario");

                    b.ToTable("Regularizaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Resultados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("BitAux1")
                        .HasColumnType("bit");

                    b.Property<bool?>("BitAux2")
                        .HasColumnType("bit");

                    b.Property<int?>("Camino")
                        .HasColumnType("int");

                    b.Property<float?>("Cantidad")
                        .HasColumnType("real");

                    b.Property<bool?>("CantidadManual")
                        .HasColumnType("bit");

                    b.Property<float?>("CantidadPrincipal")
                        .HasColumnType("real");

                    b.Property<int?>("Ciclo")
                        .HasColumnType("int");

                    b.Property<int?>("Destino")
                        .HasColumnType("int");

                    b.Property<int?>("DuracionStamp")
                        .HasColumnType("int");

                    b.Property<bool?>("Editado")
                        .HasColumnType("bit");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fin")
                        .HasColumnType("datetime");

                    b.Property<bool?>("FinalCiclo")
                        .HasColumnType("bit");

                    b.Property<bool?>("FinalMedidor")
                        .HasColumnType("bit");

                    b.Property<bool?>("FinalOrden")
                        .HasColumnType("bit");

                    b.Property<bool?>("FinalSecuencia")
                        .HasColumnType("bit");

                    b.Property<int?>("Formato")
                        .HasColumnType("int");

                    b.Property<decimal?>("Humedad")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<int?>("IdDosificacion")
                        .HasColumnType("int");

                    b.Property<int>("IdOld")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int?>("IndicadorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Inicio")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("KWhTotal")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<decimal?>("KwhEfectivo")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<int?>("Lote")
                        .HasColumnType("int");

                    b.Property<string>("LoteNombre")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("Medidor")
                        .HasColumnType("int");

                    b.Property<int?>("MultiDosiId")
                        .HasColumnType("int");

                    b.Property<int?>("NumCorreccion")
                        .HasColumnType("int");

                    b.Property<int?>("OperacionId")
                        .HasColumnType("int");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<bool?>("OrdenCancelada")
                        .HasColumnType("bit");

                    b.Property<float?>("Parcial")
                        .HasColumnType("real");

                    b.Property<int?>("Pesada")
                        .HasColumnType("int");

                    b.Property<decimal?>("PesoAcumuladoBascula")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<decimal?>("Ph")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<int?>("PhId")
                        .HasColumnType("int");

                    b.Property<int?>("PosicionDosificacion")
                        .HasColumnType("int");

                    b.Property<int?>("Proceso")
                        .HasColumnType("int");

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<bool?>("Regularizado")
                        .HasColumnType("bit");

                    b.Property<int>("Serie")
                        .HasColumnType("int");

                    b.Property<decimal?>("Temperatura")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<int?>("TemperaturaId")
                        .HasColumnType("int");

                    b.Property<int?>("TiempoEfectivo")
                        .HasColumnType("int");

                    b.Property<int?>("TiempoTotal")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime");

                    b.Property<int?>("TipoPesada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("TotalCiclos")
                        .HasColumnType("int");

                    b.Property<int?>("Ubicacion")
                        .HasColumnType("int");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<int?>("ValidacionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Variable1")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<decimal?>("Variable2")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<int?>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinalMedidor")
                        .HasName("_dta_index_Resultados_1");

                    b.HasIndex("Formato");

                    b.HasIndex("Lote");

                    b.HasIndex("Medidor");

                    b.HasIndex("Producto");

                    b.HasIndex("Ubicacion");

                    b.HasIndex("Unidad");

                    b.HasIndex("Orden", "Producto")
                        .HasName("PK_ResultadosOrdenProducto");

                    b.HasIndex("Cantidad", "Orden", "Id", "Producto", "Lote")
                        .HasName("_dta_index_Resultados_6_1531152500__K3_K1_K16_K15_7");

                    b.ToTable("Resultados");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Salidas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorExportacion")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FInicio")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaPrevista")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdDepartamento")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ReferenciaVenta")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("idCliente")
                        .HasColumnType("int");

                    b.Property<int>("idSerie")
                        .HasColumnType("int");

                    b.Property<int?>("idViaje")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("IdDepartamento");

                    b.HasIndex("idCliente");

                    b.HasIndex("idSerie");

                    b.HasIndex("idViaje");

                    b.ToTable("Salidas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SalidasAlbaranes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Auto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<int?>("Serie")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Serie");

                    b.HasIndex("Numero", "Serie")
                        .HasName("ISalAlbNumSerie");

                    b.ToTable("SalidasAlbaranes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SalidasLinias", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Autorizada")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Bruto")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("Bultos")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<bool?>("Cajon1")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon10")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon2")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon3")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon4")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon5")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon6")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon7")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon8")
                        .HasColumnType("bit");

                    b.Property<bool?>("Cajon9")
                        .HasColumnType("bit");

                    b.Property<bool?>("CamionBanera")
                        .HasColumnType("bit");

                    b.Property<string>("CampoLibre1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CampoLibre2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<string>("ErrorExportacion")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoTarjeta")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaFinCarga")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInicioCarga")
                        .HasColumnType("datetime");

                    b.Property<bool?>("FueraCajon")
                        .HasColumnType("bit");

                    b.Property<int?>("LedAnalisisLaboratorio")
                        .HasColumnType("int");

                    b.Property<int?>("LedAutorizacion")
                        .HasColumnType("int");

                    b.Property<int?>("LedCargaProducto")
                        .HasColumnType("int");

                    b.Property<int?>("LedControlDocumental")
                        .HasColumnType("int");

                    b.Property<int?>("LedDevolucionTarjeta")
                        .HasColumnType("int");

                    b.Property<int?>("LedViajeAsignado")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("Origen1")
                        .HasColumnType("int");

                    b.Property<int?>("Origen2")
                        .HasColumnType("int");

                    b.Property<int?>("Origen3")
                        .HasColumnType("int");

                    b.Property<int?>("Origen4")
                        .HasColumnType("int");

                    b.Property<decimal?>("PesoNetoManual")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<decimal?>("PrecioTransporte")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<decimal?>("PrecioUnidad")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<string>("RefPedidoERP")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<decimal?>("Tara")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<int?>("TipoOrigen")
                        .HasColumnType("int");

                    b.Property<bool?>("TransitoActivo")
                        .HasColumnType("bit");

                    b.Property<bool?>("VaciarSilos")
                        .HasColumnType("bit");

                    b.Property<int?>("idAlbaran")
                        .HasColumnType("int");

                    b.Property<int?>("idBasculaPesajeBruto")
                        .HasColumnType("int");

                    b.Property<int?>("idBasculaPesajeNeto")
                        .HasColumnType("int");

                    b.Property<int?>("idDomicilio")
                        .HasColumnType("int");

                    b.Property<int?>("idEnvase")
                        .HasColumnType("int");

                    b.Property<int?>("idFormato")
                        .HasColumnType("int");

                    b.Property<int?>("idProducto")
                        .HasColumnType("int");

                    b.Property<int?>("idPuntoDescarga")
                        .HasColumnType("int");

                    b.Property<int?>("idSalidas")
                        .HasColumnType("int");

                    b.Property<int?>("idUnidad")
                        .HasColumnType("int");

                    b.Property<int?>("idmodulo")
                        .HasColumnType("int");

                    b.Property<int?>("idorden")
                        .HasColumnType("int");

                    b.Property<int?>("idviajes")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Origen1");

                    b.HasIndex("Origen2");

                    b.HasIndex("Origen3");

                    b.HasIndex("Origen4");

                    b.HasIndex("idAlbaran");

                    b.HasIndex("idBasculaPesajeBruto");

                    b.HasIndex("idBasculaPesajeNeto");

                    b.HasIndex("idDomicilio");

                    b.HasIndex("idEnvase");

                    b.HasIndex("idFormato");

                    b.HasIndex("idProducto");

                    b.HasIndex("idPuntoDescarga");

                    b.HasIndex("idSalidas");

                    b.HasIndex("idUnidad");

                    b.HasIndex("idmodulo");

                    b.HasIndex("idviajes");

                    b.HasIndex("id", "idSalidas", "idProducto", "idFormato", "idEnvase", "idUnidad", "idDomicilio", "Origen1", "Origen2", "Origen3", "Origen4", "FueraCajon", "Cajon1", "Cajon2", "Cajon3", "Cajon4", "Cajon5", "Cajon6", "Cajon7", "Cajon8", "Cajon9", "Cajon10", "FechaFinCarga", "FechaInicioCarga", "Bultos", "Bruto", "Tara", "Estado", "PrecioUnidad", "Cantidad", "LedControlDocumental", "LedAnalisisLaboratorio", "LedAutorizacion", "LedCargaProducto", "LedDevolucionTarjeta", "idorden", "TransitoActivo", "idmodulo", "Fecha", "Precio", "PrecioTransporte", "EstadoTarjeta", "Observaciones", "Autorizada", "idBasculaPesajeNeto", "idBasculaPesajeBruto", "PesoNetoManual", "CampoLibre1", "CampoLibre2", "LedViajeAsignado", "idPuntoDescarga", "Exportado", "ErrorExportacion", "idAlbaran", "TipoOrigen", "CamionBanera", "VaciarSilos", "RefPedidoERP", "idviajes")
                        .HasName("ISalidasLinias1");

                    b.ToTable("SalidasLinias");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SalidasLiniasLote", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<bool>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("idLineaSalida")
                        .HasColumnType("int");

                    b.Property<int?>("idLineaSalidaMedicamento")
                        .HasColumnType("int");

                    b.Property<int?>("idLote")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idLineaSalida");

                    b.HasIndex("idLineaSalidaMedicamento");

                    b.HasIndex("idLote");

                    b.ToTable("SalidasLiniasLote");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SalidasLiniasMedicaciones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Bultos")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdUnidad")
                        .HasColumnType("int");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<decimal?>("PrecioUnidad")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<int?>("idEnvase")
                        .HasColumnType("int");

                    b.Property<int?>("idFormato")
                        .HasColumnType("int");

                    b.Property<int?>("idMedicamento")
                        .HasColumnType("int");

                    b.Property<int?>("idOrigen")
                        .HasColumnType("int");

                    b.Property<int?>("idSalidaLinia")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("IdUnidad");

                    b.HasIndex("idEnvase");

                    b.HasIndex("idFormato");

                    b.HasIndex("idMedicamento");

                    b.HasIndex("idOrigen");

                    b.HasIndex("idSalidaLinia");

                    b.ToTable("SalidasLiniasMedicaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SalidasLiniasMuestras", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ActivarMaximo")
                        .HasColumnType("bit");

                    b.Property<bool?>("ActivarMaximoAlerta")
                        .HasColumnType("bit");

                    b.Property<bool?>("ActivarMinimo")
                        .HasColumnType("bit");

                    b.Property<bool?>("ActivarMinimoAlerta")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaResultado")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("Resultado")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("ValorEsperado")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("ValorMaximo")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("ValorMaximoAlerta")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("ValorMinimo")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("ValorMinimoAlerta")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<int?>("idControlesNir")
                        .HasColumnType("int");

                    b.Property<int?>("idSalidasLineas")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idControlesNir");

                    b.HasIndex("idSalidasLineas");

                    b.ToTable("SalidasLiniasMuestras");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SalidasLiniasPuntosDescarga", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idLineaSalida")
                        .HasColumnType("int");

                    b.Property<int>("idPuntoDescarga")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idLineaSalida");

                    b.HasIndex("idPuntoDescarga");

                    b.ToTable("SalidasLiniasPuntosDescarga");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SalidasViajes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ErrorExportacion")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<int?>("EstadoTransito")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FFinViaje")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FFinalTransito")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FInicioTransito")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FInicioViaje")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaPrevista")
                        .HasColumnType("datetime");

                    b.Property<string>("MatriculaCamion")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("MatriculaRemolque")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("NombreConductor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool?>("PostDesinfeccion")
                        .HasColumnType("bit");

                    b.Property<bool?>("PreDesinfeccion")
                        .HasColumnType("bit");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("idChofer")
                        .HasColumnType("int");

                    b.Property<int?>("idEmpresaTransporte")
                        .HasColumnType("int");

                    b.Property<int>("idSerie")
                        .HasColumnType("int");

                    b.Property<int?>("idTarjeta")
                        .HasColumnType("int");

                    b.Property<int?>("idVehiculo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idChofer");

                    b.HasIndex("idEmpresaTransporte");

                    b.HasIndex("idSerie");

                    b.HasIndex("idTarjeta");

                    b.HasIndex("idVehiculo");

                    b.HasIndex("id", "MatriculaRemolque", "idVehiculo", "idChofer", "idTarjeta", "EstadoTransito", "MatriculaCamion", "NombreConductor", "Observaciones", "idEmpresaTransporte", "FInicioTransito", "FInicioViaje", "FFinViaje", "Referencia", "FechaPrevista", "idSerie", "Numero", "PreDesinfeccion", "PostDesinfeccion", "FechaCreacion", "Estado", "FFinalTransito")
                        .HasName("ISalidasViajes");

                    b.ToTable("SalidasViajes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Secciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Entradas")
                        .HasColumnType("bit");

                    b.Property<int?>("Equipo")
                        .HasColumnType("int");

                    b.Property<int?>("EquipoRemoto")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdPlc")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Mantener")
                        .HasColumnType("bit");

                    b.Property<int?>("Medidor")
                        .HasColumnType("int");

                    b.Property<int?>("Modulo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OpcConfigId")
                        .HasColumnType("int");

                    b.Property<bool?>("Registrar")
                        .HasColumnType("bit");

                    b.Property<bool?>("Salidas")
                        .HasColumnType("bit");

                    b.Property<int?>("Sesion")
                        .HasColumnType("int");

                    b.Property<int?>("SesionRemoto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OpcConfigId");

                    b.ToTable("Secciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SeccionesGrupos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OpcConfigId")
                        .HasColumnType("int");

                    b.Property<int?>("idPLC")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("OpcConfigId");

                    b.ToTable("SeccionesGrupos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Series", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContadorAlbaranes")
                        .HasColumnType("int");

                    b.Property<int?>("ContadorCertificadoDesinfeccion")
                        .HasColumnType("int");

                    b.Property<int?>("ContadorCompras")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ContadorEntradas")
                        .HasColumnType("int");

                    b.Property<int?>("ContadorOrdenes")
                        .HasColumnType("int");

                    b.Property<int?>("ContadorRecetas")
                        .HasColumnType("int");

                    b.Property<int?>("ContadorSalidas")
                        .HasColumnType("int");

                    b.Property<int?>("ContadorVentas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ContadorViajes")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ServerConfigs", b =>
                {
                    b.Property<string>("Campo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Campo");

                    b.ToTable("ServerConfigs");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Sesiones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Automatica")
                        .HasColumnType("bit");

                    b.Property<string>("Cuenta")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Equipo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<int?>("Grupo")
                        .HasColumnType("int");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int?>("Licencias")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Opc")
                        .HasColumnType("bit");

                    b.Property<bool?>("Servidor")
                        .HasColumnType("bit");

                    b.Property<bool?>("TransitoManual")
                        .HasColumnType("bit");

                    b.Property<string>("UsuarioDefecto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("VersionApp")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Sesiones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SesionesModulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Controlable")
                        .HasColumnType("bit");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int>("Modulo")
                        .HasColumnType("int");

                    b.Property<int?>("Sesion")
                        .HasColumnType("int");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Modulo");

                    b.HasIndex("Sesion");

                    b.ToTable("SesionesModulo");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SesionesSeccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Controlable")
                        .HasColumnType("bit");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int>("Seccion")
                        .HasColumnType("int");

                    b.Property<int?>("Sesion")
                        .HasColumnType("int");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Seccion");

                    b.HasIndex("Sesion");

                    b.ToTable("SesionesSeccion");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SolicitudAjusteCaudal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modificacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NuevoCaudalEntrada")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal>("NuevoCaudalSalida")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<int?>("OrdenId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<int>("UbicacionId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdenId");

                    b.HasIndex("UbicacionId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("ProductoId", "UbicacionId");

                    b.ToTable("SolicitudesAjusteCaudal");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.StatusDisks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CPU")
                        .HasColumnType("numeric(8, 3)");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("RamLibre")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("pc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .HasName("_dta_index_StatusDisks_1");

                    b.ToTable("StatusDisks");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Stocks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Cantidad")
                        .HasColumnType("real");

                    b.Property<int?>("Envase")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaERP")
                        .HasColumnType("datetime");

                    b.Property<int?>("Formato")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int?>("Lote")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int?>("Palet")
                        .HasColumnType("int");

                    b.Property<bool?>("Procesando")
                        .HasColumnType("bit");

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<int?>("Ubicacion")
                        .HasColumnType("int");

                    b.Property<decimal?>("UdsEnvase")
                        .HasColumnType("decimal(18, 5)")
                        .HasComputedColumnSql("([dbo].[EnvasesDeStock]([envase],[Cantidad]))");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<int?>("idEntradasLineas")
                        .HasColumnType("int");

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.Property<int?>("idSalidasLineas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Envase");

                    b.HasIndex("Formato");

                    b.HasIndex("Lote");

                    b.HasIndex("Ubicacion");

                    b.HasIndex("Unidad");

                    b.HasIndex("idEntradasLineas");

                    b.HasIndex("idSalidasLineas");

                    b.HasIndex("Ubicacion", "Cantidad", "Estado")
                        .HasName("I_StocksUbis");

                    b.HasIndex("Lote", "Fecha", "Ubicacion", "Estado")
                        .HasName("IX_Stocks_Ubicacion_Estado");

                    b.HasIndex("Producto", "Formato", "Lote", "Envase", "Cantidad", "Unidad", "Fecha", "Estado", "Importado", "Exportado", "Palet", "Procesando", "Observaciones", "idOld", "idEntradasLineas", "idSalidasLineas", "Ubicacion", "Id")
                        .HasName("IStocks1");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.StocksReserva", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("CantidadReservada")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaServido")
                        .HasColumnType("datetime");

                    b.Property<int?>("idEntradasLineas")
                        .HasColumnType("int");

                    b.Property<int?>("idLote")
                        .HasColumnType("int");

                    b.Property<int?>("idOrden")
                        .HasColumnType("int");

                    b.Property<int?>("idProducto")
                        .HasColumnType("int");

                    b.Property<int?>("idSalidasLineas")
                        .HasColumnType("int");

                    b.Property<int?>("idSalidasLineasMedic")
                        .HasColumnType("int");

                    b.Property<int?>("idStock")
                        .HasColumnType("int");

                    b.Property<int?>("idUbicacion")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idEntradasLineas");

                    b.HasIndex("idLote");

                    b.HasIndex("idOrden");

                    b.HasIndex("idProducto");

                    b.HasIndex("idSalidasLineas");

                    b.HasIndex("idSalidasLineasMedic");

                    b.HasIndex("idStock");

                    b.HasIndex("idUbicacion");

                    b.ToTable("StocksReserva");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Tags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AutoSeleccion")
                        .HasColumnType("bit");

                    b.Property<int?>("EstadoHMI")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FFinIntermitente")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FinalMensaje")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdLinEntradaMenu")
                        .HasColumnType("int");

                    b.Property<int?>("IdLinSalidaMenu")
                        .HasColumnType("int");

                    b.Property<int?>("IdOpc")
                        .HasColumnType("int");

                    b.Property<int>("IdPlc")
                        .HasColumnName("IdPLC")
                        .HasColumnType("int");

                    b.Property<decimal?>("LecturaPesoActualBascula")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<bool?>("MESHMIBotonAceptar")
                        .HasColumnType("bit");

                    b.Property<bool?>("MESHMIBotonAtras")
                        .HasColumnType("bit");

                    b.Property<bool?>("MESHMIBotonCancelar")
                        .HasColumnType("bit");

                    b.Property<bool?>("MESHMIBotonIntro")
                        .HasColumnType("bit");

                    b.Property<bool?>("MESHMIBotonOpcion1")
                        .HasColumnType("bit");

                    b.Property<bool?>("MESHMIBotonOpcion2")
                        .HasColumnType("bit");

                    b.Property<bool?>("MESHMIBotonSiguiente")
                        .HasColumnType("bit");

                    b.Property<string>("MESHMIDato")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("MESTAGRFID")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("OpcConfigId")
                        .HasColumnType("int");

                    b.Property<bool?>("OpcEntradaAlmacen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("OptFinalizarOrden")
                        .HasColumnType("bit");

                    b.Property<bool?>("OptHMIActivo")
                        .HasColumnType("bit");

                    b.Property<bool?>("OptIniciarOrden")
                        .HasColumnType("bit");

                    b.Property<bool?>("OptPeso1")
                        .HasColumnType("bit");

                    b.Property<bool?>("OptPeso2")
                        .HasColumnType("bit");

                    b.Property<bool?>("OptSeleccionOrden")
                        .HasColumnType("bit");

                    b.Property<bool?>("OrigenPesoBascula")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCAbrirBarrera")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCAccionAuxiliar1")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCAccionAuxiliar2")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCAccionAuxiliar3")
                        .HasColumnType("bit");

                    b.Property<string>("PLCAccionPLCMensaje1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PLCAccionPLCMensaje2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PLCAccionPLCMensaje3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool?>("PLCActivarZumbador")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCHMIActivaBotonAceptar")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCHMIActivaBotonAtras")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCHMIActivaBotonCancelar")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCHMIActivaBotonIntro")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCHMIActivaBotonOpcion1")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCHMIActivaBotonOpcion2")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCHMIActivaBotonSiguiente")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCHMIActivaEntradaDato")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCHMIBotonAceptarLeido")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCHMIBotonAtrasLeido")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCHMIBotonCancelarLeido")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCHMIBotonIntroLeido")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCHMIBotonOpcion1Leido")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCHMIBotonOpcion2Leido")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCHMIBotonSiguienteLeido")
                        .HasColumnType("bit");

                    b.Property<string>("PLCHMIMensaje1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PLCHMIMensaje2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PLCHMIMensaje3")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool?>("PLCLedRojoIterm")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCLedRojoOn")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCLedVerdeIterm")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCLedVerdeOn")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCSemaforoAmbarOn")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCSemaforoRojoOn")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCSemaforoVerdeOn")
                        .HasColumnType("bit");

                    b.Property<bool?>("PLCTAGRFIDLeido")
                        .HasColumnType("bit");

                    b.Property<decimal?>("PesoActualBascula")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<bool>("PlcEnabled")
                        .HasColumnType("bit");

                    b.Property<int?>("PosicionMenu")
                        .HasColumnType("int");

                    b.Property<bool?>("PreguntarBascula")
                        .HasColumnType("bit");

                    b.Property<bool?>("Resetear")
                        .HasColumnType("bit");

                    b.Property<int?>("Ubicacion")
                        .HasColumnType("int");

                    b.Property<int?>("idLecturaTag")
                        .HasColumnType("int");

                    b.Property<int?>("idModulo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OpcConfigId");

                    b.HasIndex("Ubicacion");

                    b.HasIndex("idLecturaTag");

                    b.HasIndex("idModulo");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.TagsBasculas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Predeterminada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("idBascula")
                        .HasColumnType("int");

                    b.Property<int?>("idTag")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idBascula");

                    b.HasIndex("idTag");

                    b.ToTable("TagsBasculas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.TagsLecturas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FRecibido")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FTratado")
                        .HasColumnType("datetime");

                    b.Property<string>("Lectura")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Solucion")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("TextoError")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool?>("Tratado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("idTag")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idTag");

                    b.HasIndex("Tratado", "idTag", "FTratado")
                        .HasName("BusquedaTagsLecturas");

                    b.ToTable("TagsLecturas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Tarifas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cliente")
                        .HasColumnType("int");

                    b.Property<int?>("Envase")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int?>("Medicacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<float?>("Precio")
                        .HasColumnType("real");

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cliente");

                    b.HasIndex("Envase");

                    b.HasIndex("Medicacion");

                    b.HasIndex("Producto");

                    b.HasIndex("Unidad");

                    b.ToTable("Tarifas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Tarjetas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdLinEntrada")
                        .HasColumnType("int");

                    b.Property<int?>("IdLinSalida")
                        .HasColumnType("int");

                    b.Property<int?>("IdOrdenActual")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Ordenacion")
                        .HasColumnType("int");

                    b.Property<bool?>("PermisoArcosDesinfeccion")
                        .HasColumnType("bit");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdLinEntrada");

                    b.HasIndex("IdLinSalida");

                    b.HasIndex("IdOrdenActual");

                    b.ToTable("Tarjetas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.TempControles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ConsignaPausa_Max")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("ConsignaPausa_Min")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("Consigna_Max")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("Consigna_Min")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("Histeresys_Max")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("Histeresys_Min")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("MaxAlarma_Max")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("MaxAlarma_Min")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("MinAlarma_Max")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("MinAlarma_Min")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<bool?>("ModoCalentar")
                        .HasColumnType("bit");

                    b.Property<bool?>("ModoCalentarYEnfriar")
                        .HasColumnType("bit");

                    b.Property<int?>("ModoDefecto")
                        .HasColumnType("int");

                    b.Property<bool?>("ModoEnfriar")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("ZonaMuerta_Max")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("ZonaMuerta_Min")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<int?>("idPLC")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("TempControles");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.TempControlesMedidores", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Obligatorio")
                        .HasColumnType("bit");

                    b.Property<bool?>("Unico")
                        .HasColumnType("bit");

                    b.Property<int?>("idMedidor")
                        .HasColumnType("int");

                    b.Property<int?>("idTempControl")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idMedidor");

                    b.HasIndex("idTempControl");

                    b.ToTable("TempControlesMedidores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.TextosParametros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentarios")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("IdTexto")
                        .HasColumnType("int");

                    b.Property<int?>("Idioma")
                        .HasColumnType("int");

                    b.Property<string>("NombreEnum")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Parametro")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TextoEnum")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Grupo", "Parametro", "IdTexto")
                        .IsUnique()
                        .HasName("NonClusteredIndex-20180409-131855");

                    b.ToTable("TextosParametros");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.TiempoLimpieza", b =>
                {
                    b.Property<int>("ModuloId")
                        .HasColumnType("int");

                    b.Property<int>("UbicacionId")
                        .HasColumnType("int");

                    b.Property<int>("Tiempo")
                        .HasColumnType("int");

                    b.HasKey("ModuloId", "UbicacionId");

                    b.HasIndex("UbicacionId");

                    b.ToTable("TiempoLimpieza");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.TiposIva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<float?>("Porcentaje")
                        .HasColumnType("real");

                    b.Property<bool?>("Principal")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TiposIva");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Turnos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan?>("HoraFinal")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("id");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Ubicaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Afino")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<decimal?>("AfinoMaxMultiDosi")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("AfinoMaximo")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("AfinoMinimo")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("AfinoMultiDosi")
                        .HasColumnType("numeric(15, 3)");

                    b.Property<int?>("Asociacion")
                        .HasColumnType("int");

                    b.Property<bool?>("AsociacionObligatoria")
                        .HasColumnType("bit");

                    b.Property<bool?>("AvisosActivo")
                        .HasColumnType("bit");

                    b.Property<int?>("AvisosEquipo")
                        .HasColumnType("int");

                    b.Property<int?>("AvisosSesion")
                        .HasColumnType("int");

                    b.Property<bool?>("Bloqueable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("Bloqueado")
                        .HasColumnType("bit");

                    b.Property<float?>("Capacidad")
                        .HasColumnType("real");

                    b.Property<bool?>("CargaManual")
                        .HasColumnType("bit");

                    b.Property<decimal?>("ColaPropuesta")
                        .HasColumnType("decimal(8, 6)");

                    b.Property<int?>("Color")
                        .HasColumnType("int");

                    b.Property<byte?>("ColorFondoAlfa")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ColorFondoAzul")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ColorFondoRojo")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("ColorFondoVerde")
                        .HasColumnType("tinyint");

                    b.Property<int?>("ConVibrador")
                        .HasColumnType("int");

                    b.Property<bool?>("Configurable")
                        .HasColumnType("bit");

                    b.Property<bool?>("ControlStock")
                        .HasColumnType("bit");

                    b.Property<int?>("Departamento")
                        .HasColumnType("int");

                    b.Property<bool?>("Desasignable")
                        .HasColumnType("bit");

                    b.Property<bool?>("DescargaManual")
                        .HasColumnType("bit");

                    b.Property<bool?>("DiferenciaTraspasable")
                        .HasColumnType("bit");

                    b.Property<decimal?>("DosificacionMaxima")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<bool?>("Duplicado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Entradas")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnviarEnPorcentaje")
                        .HasColumnType("bit");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<int?>("Formato")
                        .HasColumnType("int");

                    b.Property<int?>("IdOpc1")
                        .HasColumnType("int");

                    b.Property<int?>("IdOpc2")
                        .HasColumnType("int");

                    b.Property<int?>("IdOpc3")
                        .HasColumnType("int");

                    b.Property<int?>("IdOpc4")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Individual")
                        .HasColumnType("bit");

                    b.Property<int?>("Lote")
                        .HasColumnType("int");

                    b.Property<string>("LoteActual")
                        .HasColumnType("nvarchar(50)")
                        .HasComputedColumnSql("([dbo].[LoteEnUbicacion]([id]))")
                        .HasMaxLength(50);

                    b.Property<decimal?>("MaPCaudalMaxEstLlenando")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 3)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("MaPCaudalMaxEstVaciando")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 3)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("MaPGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("MaPNivelMaximoActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("MaPNivelMedioActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("MaPNivelMinimoActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("MaPNivelPorcentajeActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("MaPTiempoLimpiezaLlenado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("MaPTiempoRegistros")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("MaPTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("MaPVariable0")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("MaPVariable1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("MaPVariable2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("MaPVariable3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("MaPVolumenSilo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 3)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Maxima")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("MezcladoDiasMinimoFCaducidad")
                        .HasColumnType("int");

                    b.Property<bool?>("MezcladoLotes")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MezcladoMinimoDisolucion")
                        .HasColumnType("decimal(15, 3)");

                    b.Property<string>("Minima")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("MinimoSiloResetUbi")
                        .HasColumnType("bit");

                    b.Property<bool?>("ModoBigBag")
                        .HasColumnType("bit");

                    b.Property<string>("Nivel")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<float?>("NivelMaximo")
                        .HasColumnType("real");

                    b.Property<float?>("NivelMinimo")
                        .HasColumnType("real");

                    b.Property<bool?>("NoAsignable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("NoNegativos")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OpcConfigId")
                        .HasColumnType("int");

                    b.Property<int?>("Ordenacion")
                        .HasColumnType("int");

                    b.Property<int?>("PLCPosicion")
                        .HasColumnType("int");

                    b.Property<decimal?>("PaMCola")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 12)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("PaMColaMulti")
                        .HasColumnType("numeric(18, 12)");

                    b.Property<bool?>("PaMForzarLleno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PaMForzarVacio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PaMHabilitadoLlenado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PaMHabilitadoVaciado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PaMNivelMaximo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PaMNivelMedio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PaMNivelMinimo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("PaMNivelPorcentaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 3)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("PaMPresion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 3)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("PaMTemperatura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18, 3)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("PaMVariable0")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("PaMVariable1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("PaMVariable2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("PaMVariable3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PermitirAsociar")
                        .HasColumnType("bit");

                    b.Property<int?>("PosicionPLC1")
                        .HasColumnType("int");

                    b.Property<int?>("PosicionPLC2")
                        .HasColumnType("int");

                    b.Property<int?>("PosicionPLC3")
                        .HasColumnType("int");

                    b.Property<int?>("PosicionPLC4")
                        .HasColumnType("int");

                    b.Property<int?>("PosicionX")
                        .HasColumnType("int");

                    b.Property<int?>("PosicionY")
                        .HasColumnType("int");

                    b.Property<bool?>("Premezclas")
                        .HasColumnType("bit");

                    b.Property<int?>("Prioridad")
                        .HasColumnType("int");

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Referencia2")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Salidas")
                        .HasColumnType("bit");

                    b.Property<bool?>("SincronizarERP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<float?>("Stock")
                        .HasColumnType("real");

                    b.Property<decimal?>("StockActual")
                        .HasColumnType("decimal(18, 5)")
                        .HasComputedColumnSql("([dbo].[StockEnUbicacion]([id],[NoNegativos]))");

                    b.Property<float?>("StockMinimo")
                        .HasColumnType("real");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<bool?>("TipoPR")
                        .HasColumnType("bit");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<int?>("VelocidadLenta")
                        .HasColumnType("int");

                    b.Property<int?>("VelocidadRapida")
                        .HasColumnType("int");

                    b.Property<bool?>("Visible")
                        .HasColumnType("bit");

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Asociacion");

                    b.HasIndex("AvisosSesion");

                    b.HasIndex("Departamento");

                    b.HasIndex("Formato");

                    b.HasIndex("Lote");

                    b.HasIndex("ModoBigBag")
                        .HasName("_dta_index_Ubicaciones_2");

                    b.HasIndex("OpcConfigId");

                    b.HasIndex("Ordenacion");

                    b.HasIndex("Producto");

                    b.HasIndex("Unidad");

                    b.HasIndex("Id", "Nombre", "Departamento", "Referencia", "Tipo", "CargaManual", "DescargaManual", "Capacidad", "Unidad", "Individual", "Producto", "Formato", "Prioridad", "Stock", "ControlStock", "AvisosActivo", "AvisosEquipo", "Configurable", "PosicionX", "PosicionY", "Minima", "Maxima", "Nivel", "Lote", "Entradas", "Salidas", "Duplicado", "Desasignable", "Asociacion", "Premezclas", "Importado", "Exportado", "Bloqueado", "StockMinimo", "NivelMinimo", "NivelMaximo", "AvisosSesion", "Color", "AsociacionObligatoria", "idOld", "MaPGrupo", "MaPTiempoLimpiezaLlenado", "MaPTipo", "MaPNivelMaximoActivo", "MaPNivelMinimoActivo", "MaPNivelMedioActivo", "MaPNivelPorcentajeActivo", "MaPVolumenSilo", "MaPCaudalMaxEstLlenando", "MaPCaudalMaxEstVaciando", "PaMHabilitadoLlenado", "PaMHabilitadoVaciado", "PaMNivelMaximo", "PaMNivelMinimo", "PaMNivelMedio", "PaMForzarLleno", "PaMForzarVacio", "PaMNivelPorcentaje", "PaMTemperatura", "PaMPresion", "PaMVariable1", "PaMVariable2", "PaMVariable3", "PaMVariable0", "MaPVariable0", "MaPVariable1", "MaPVariable2", "MaPVariable3", "Afino", "ConVibrador", "VelocidadLenta", "VelocidadRapida", "PaMCola", "PLCPosicion", "ModoBigBag", "DosificacionMaxima", "AfinoMaximo", "EnviarEnPorcentaje", "AfinoMultiDosi", "AfinoMaxMultiDosi", "PermitirAsociar", "AfinoMinimo", "MaPTiempoRegistros", "MinimoSiloResetUbi", "NoNegativos", "MezcladoLotes", "MezcladoMinimoDisolucion", "MezcladoDiasMinimoFCaducidad", "Visible", "Ordenacion")
                        .HasName("_dta_index_Ubicaciones_1");

                    b.HasIndex("Id", "Nombre", "Departamento", "Referencia", "Tipo", "CargaManual", "DescargaManual", "Capacidad", "Unidad", "Individual", "Producto", "Formato", "Prioridad", "Stock", "ControlStock", "AvisosActivo", "AvisosEquipo", "Configurable", "PosicionX", "PosicionY", "Minima", "Maxima", "Nivel", "Lote", "Entradas", "Salidas", "Duplicado", "Desasignable", "Asociacion", "Premezclas", "Importado", "Exportado", "Bloqueado", "StockMinimo", "NivelMinimo", "NivelMaximo", "AvisosSesion", "Color", "AsociacionObligatoria", "idOld", "MaPGrupo", "MaPTiempoLimpiezaLlenado", "MaPTipo", "MaPNivelMaximoActivo", "MaPNivelMinimoActivo", "MaPNivelMedioActivo", "MaPNivelPorcentajeActivo", "MaPVolumenSilo", "MaPCaudalMaxEstLlenando", "MaPCaudalMaxEstVaciando", "PaMHabilitadoLlenado", "PaMHabilitadoVaciado", "PaMNivelMaximo", "PaMNivelMinimo", "PaMNivelMedio", "PaMForzarLleno", "PaMForzarVacio", "PaMNivelPorcentaje", "PaMTemperatura", "PaMPresion", "PaMVariable1", "PaMVariable2", "PaMVariable3", "PaMVariable0", "MaPVariable0", "MaPVariable1", "MaPVariable2", "MaPVariable3", "Afino", "ConVibrador", "VelocidadLenta", "VelocidadRapida", "PaMCola", "PLCPosicion", "ModoBigBag", "DosificacionMaxima", "AfinoMaximo", "EnviarEnPorcentaje", "AfinoMultiDosi", "AfinoMaxMultiDosi", "PermitirAsociar", "AfinoMinimo", "MaPTiempoRegistros", "MinimoSiloResetUbi", "NoNegativos", "MezcladoLotes", "MezcladoMinimoDisolucion", "MezcladoDiasMinimoFCaducidad", "TipoPR", "ColaPropuesta", "Visible", "Ordenacion")
                        .HasName("IndexUbicaciones_1");

                    b.HasIndex("Id", "Nombre", "Departamento", "Referencia", "Tipo", "CargaManual", "DescargaManual", "Capacidad", "Unidad", "Individual", "Producto", "Formato", "Prioridad", "Stock", "ControlStock", "AvisosActivo", "AvisosEquipo", "Configurable", "PosicionX", "PosicionY", "Minima", "Maxima", "Nivel", "Lote", "Entradas", "Salidas", "Duplicado", "Desasignable", "Asociacion", "Premezclas", "Importado", "Exportado", "Bloqueado", "StockMinimo", "NivelMinimo", "NivelMaximo", "AvisosSesion", "Color", "AsociacionObligatoria", "idOld", "MaPGrupo", "MaPTiempoLimpiezaLlenado", "MaPTipo", "MaPNivelMaximoActivo", "MaPNivelMinimoActivo", "MaPNivelMedioActivo", "MaPNivelPorcentajeActivo", "MaPVolumenSilo", "MaPCaudalMaxEstLlenando", "MaPCaudalMaxEstVaciando", "PaMHabilitadoLlenado", "PaMHabilitadoVaciado", "PaMNivelMaximo", "PaMNivelMinimo", "PaMNivelMedio", "PaMForzarLleno", "PaMForzarVacio", "PaMNivelPorcentaje", "PaMTemperatura", "PaMPresion", "PaMVariable1", "PaMVariable2", "PaMVariable3", "PaMVariable0", "MaPVariable0", "MaPVariable1", "MaPVariable2", "MaPVariable3", "Afino", "ConVibrador", "VelocidadLenta", "VelocidadRapida", "PaMCola", "PLCPosicion", "ModoBigBag", "DosificacionMaxima", "AfinoMaximo", "EnviarEnPorcentaje", "AfinoMultiDosi", "AfinoMaxMultiDosi", "PermitirAsociar", "AfinoMinimo", "MaPTiempoRegistros", "MinimoSiloResetUbi", "NoNegativos", "MezcladoLotes", "MezcladoMinimoDisolucion", "MezcladoDiasMinimoFCaducidad", "TipoPR", "ColaPropuesta", "PaMColaMulti", "Visible", "Ordenacion")
                        .HasName("IUbicaciones1");

                    b.ToTable("Ubicaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UbicacionesAsociadas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("idUbicacion1")
                        .HasColumnType("int");

                    b.Property<int?>("idUbicacion2")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idUbicacion1");

                    b.HasIndex("idUbicacion2");

                    b.ToTable("UbicacionesAsociadas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UbicacionesOpcConfig", b =>
                {
                    b.Property<int>("UbicacionId")
                        .HasColumnType("int");

                    b.Property<int>("OpcConfigId")
                        .HasColumnType("int");

                    b.Property<int>("IdPlc")
                        .HasColumnType("int");

                    b.Property<bool>("PlcEnabled")
                        .HasColumnType("bit");

                    b.HasKey("UbicacionId", "OpcConfigId", "IdPlc");

                    b.HasIndex("OpcConfigId");

                    b.ToTable("UbicacionesOpcConfig");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UbisMedsAfino", b =>
                {
                    b.Property<int>("idUbicacion")
                        .HasColumnType("int");

                    b.Property<int>("idMedidor")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaxAfino")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("PAfino")
                        .HasColumnType("int");

                    b.Property<int?>("VelocidadLenta")
                        .HasColumnType("int");

                    b.Property<int?>("VelocidadMaxima")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("idUbicacion", "idMedidor");

                    b.HasIndex("idMedidor");

                    b.ToTable("UbisMedsAfino");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Unidades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Conversion")
                        .HasColumnType("decimal(12, 3)");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("FiltroCantidad")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Medicion")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Monetaria")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Principal")
                        .HasColumnType("bit");

                    b.Property<string>("RefERP")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<float?>("Relacion")
                        .HasColumnType("real");

                    b.Property<string>("Singular")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ActivoScada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("AutoEntAlmacen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("AutoPremezclas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("AutoTransito")
                        .HasColumnType("bit");

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<int?>("Grupo")
                        .HasColumnType("int");

                    b.Property<int?>("IdOpc")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<bool?>("LDAPUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LDAPUserName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LDAPUserSid")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Nivel")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("PermisoScada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Rol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOpc");

                    b.HasIndex("Rol")
                        .HasName("IX_FK_Usuarios_UsuariosRoles");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UsuariosGruposLDAP", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GrupoLDAP")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("idRol")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idRol");

                    b.ToTable("UsuariosGruposLDAP");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UsuariosLogs", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("Desconexion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Login")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PC")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Activo")
                        .HasName("_dta_index_UsuariosLogs_1");

                    b.HasIndex("idUsuario");

                    b.ToTable("UsuariosLogs");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UsuariosRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Alertas")
                        .HasColumnType("bit");

                    b.Property<bool?>("AutoRespuestasVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("CambioRapidoOPC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("ComprasEditar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("ComprasVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("Comunicaciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("ConfigUbicaciones")
                        .HasColumnType("bit");

                    b.Property<bool?>("Configuracion")
                        .HasColumnType("bit");

                    b.Property<bool?>("ContratosEditar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("ContratosVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("Copias")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("DashboardEditar")
                        .HasColumnType("bit");

                    b.Property<bool?>("DashboardVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool?>("DesinfeccionEditar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("DesinfeccionVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("ERP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("EditarTodosModulos")
                        .HasColumnType("bit");

                    b.Property<bool?>("EntradasAlmacenEditar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("EntradasAlmacenVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("EntradasEditar")
                        .HasColumnType("bit");

                    b.Property<bool?>("EntradasVer")
                        .HasColumnType("bit");

                    b.Property<bool?>("Formulacion")
                        .HasColumnType("bit");

                    b.Property<bool>("ForzarPopupAlarmas")
                        .HasColumnType("bit");

                    b.Property<bool?>("GMAO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("Gestion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("Incompatibilidades")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("InformesEditar")
                        .HasColumnType("bit");

                    b.Property<bool?>("InformesVer")
                        .HasColumnType("bit");

                    b.Property<bool?>("Inventarios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("Laboratorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("LayoutMaximizar")
                        .HasColumnType("bit");

                    b.Property<bool?>("LotesEditar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("LotesVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("Maestros")
                        .HasColumnType("bit");

                    b.Property<bool?>("MedicamentosEditar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("MedicamentosVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("ModuloEnergia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("ModuloOEE")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("OrdenesAConfirmarEditar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("OrdenesAConfirmarVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("OrdenesEditar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("OrdenesVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("PRECabOrdenesProduccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PRECabOrdenesSalidasViajes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("PlantillasEditar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("PlantillasVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("Premezclas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("Produccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("Productividad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("ProductosEditar")
                        .HasColumnType("bit");

                    b.Property<bool?>("ProductosVer")
                        .HasColumnType("bit");

                    b.Property<bool?>("Quimica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("RecetasEditar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("RecetasVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("ResetComunicaciones")
                        .HasColumnType("bit");

                    b.Property<bool?>("ResponderTodasAlarmas")
                        .HasColumnType("bit");

                    b.Property<bool?>("SMTP")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalidasEditar")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalidasVer")
                        .HasColumnType("bit");

                    b.Property<bool?>("SalidasViajesEditar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("SalidasViajesVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("StocksEditar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("StocksPestana")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("StocksVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("Tarjetas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("Transito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("TrazabilidadResumenVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("UbicacionesEditar")
                        .HasColumnType("bit");

                    b.Property<bool?>("UbicacionesVer")
                        .HasColumnType("bit");

                    b.Property<bool?>("Usuarios")
                        .HasColumnType("bit");

                    b.Property<bool?>("Utilidades")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("VentasEditar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("VentasVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("VerTodasAlarmas")
                        .HasColumnType("bit");

                    b.Property<bool?>("VerTodosModulos")
                        .HasColumnType("bit");

                    b.Property<bool?>("VisorDosificacionesVer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.ToTable("UsuariosRoles");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UsuariosRolesConfigForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Control")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Formulario")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Metodo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Propiedad")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioRol")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("UsuarioRol");

                    b.ToTable("UsuariosRolesConfigForm");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UsuariosRolesInformes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Editar")
                        .HasColumnType("bit");

                    b.Property<bool?>("Ver")
                        .HasColumnType("bit");

                    b.Property<int?>("idInforme")
                        .HasColumnType("int");

                    b.Property<int?>("idRol")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idRol");

                    b.ToTable("UsuariosRolesInformes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UsuariosRolesModulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AlarmasResponder")
                        .HasColumnType("bit");

                    b.Property<bool?>("AlarmasVer")
                        .HasColumnType("bit");

                    b.Property<bool?>("OrdenesControlar")
                        .HasColumnType("bit");

                    b.Property<bool?>("OrdenesEditar")
                        .HasColumnType("bit");

                    b.Property<bool?>("OrdenesVer")
                        .HasColumnType("bit");

                    b.Property<int>("idModulo")
                        .HasColumnType("int");

                    b.Property<int>("idRol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("idModulo")
                        .HasName("IX_FK_UsuariosRolesModulos_Modulos");

                    b.HasIndex("idRol")
                        .HasName("IX_FK_UsuariosRolesModulos_UsuariosRoles");

                    b.ToTable("UsuariosRolesModulos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Valores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<int>("IdOld")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<int>("Serie")
                        .HasColumnType("int");

                    b.Property<int?>("SerieOld")
                        .HasColumnType("int");

                    b.Property<float?>("Valor")
                        .HasColumnType("real");

                    b.Property<int?>("Variable")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Orden");

                    b.HasIndex("Variable");

                    b.ToTable("Valores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Variables", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Defecto")
                        .HasColumnType("real");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<float?>("Maximo")
                        .HasColumnType("real");

                    b.Property<float?>("Minimo")
                        .HasColumnType("real");

                    b.Property<bool?>("Modificable")
                        .HasColumnType("bit");

                    b.Property<int>("Modulo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Producto")
                        .HasColumnType("int");

                    b.Property<bool?>("RegistrarEnParte")
                        .HasColumnType("bit");

                    b.Property<bool?>("RegularizarStock")
                        .HasColumnType("bit");

                    b.Property<int?>("Ubicacion")
                        .HasColumnType("int");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<string>("ValorPartePlc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ValorPlc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Modulo");

                    b.ToTable("Variables");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Vehiculos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("Chofer")
                        .HasColumnType("int");

                    b.Property<int?>("EmpresaTransporte")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<string>("Matricula")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("PesoMaximo")
                        .HasColumnType("int");

                    b.Property<int?>("Posicion")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool?>("Refrescado")
                        .HasColumnType("bit");

                    b.Property<string>("Remolque")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<float?>("Tara")
                        .HasColumnType("real");

                    b.Property<int?>("Tarjeta")
                        .HasColumnType("int");

                    b.Property<int?>("idOld")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Chofer");

                    b.HasIndex("EmpresaTransporte");

                    b.HasIndex("Tarjeta");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Ventas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Departamento")
                        .HasColumnType("int");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaEntrega")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int>("Impresiones")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PrecioTransporte")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<string>("RefERP")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("idCliente")
                        .HasColumnType("int");

                    b.Property<int?>("idDomicilio")
                        .HasColumnType("int");

                    b.Property<int?>("idSerie")
                        .HasColumnType("int");

                    b.Property<bool?>("isImport")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("Departamento");

                    b.HasIndex("idCliente");

                    b.HasIndex("idDomicilio");

                    b.HasIndex("idSerie");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.VentasLinias", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Bultos")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<string>("CampoLibre1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CampoLibre2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("MedBultos")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal?>("MedCantidad")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int?>("MedEnvase")
                        .HasColumnType("int");

                    b.Property<int?>("MedFormato")
                        .HasColumnType("int");

                    b.Property<decimal?>("MedPrecioUnidad")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int?>("MedUnidad")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<decimal?>("Precio")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<decimal?>("PrecioTransporte")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<decimal?>("PrecioUnidad")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<int?>("idContrato")
                        .HasColumnType("int");

                    b.Property<int?>("idDomicilio")
                        .HasColumnType("int");

                    b.Property<int?>("idEnvase")
                        .HasColumnType("int");

                    b.Property<int?>("idFormato")
                        .HasColumnType("int");

                    b.Property<int?>("idMedicamento")
                        .HasColumnType("int");

                    b.Property<int?>("idProducto")
                        .HasColumnType("int");

                    b.Property<int?>("idPuntoDescarga")
                        .HasColumnType("int");

                    b.Property<int?>("idUnidad")
                        .HasColumnType("int");

                    b.Property<int?>("idVentas")
                        .HasColumnType("int");

                    b.Property<int?>("linea")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("MedEnvase");

                    b.HasIndex("MedFormato");

                    b.HasIndex("MedUnidad");

                    b.HasIndex("idContrato");

                    b.HasIndex("idDomicilio");

                    b.HasIndex("idEnvase");

                    b.HasIndex("idFormato");

                    b.HasIndex("idMedicamento");

                    b.HasIndex("idProducto");

                    b.HasIndex("idPuntoDescarga");

                    b.HasIndex("idUnidad");

                    b.HasIndex("idVentas");

                    b.ToTable("VentasLinias");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.VentasLiniasMedicaciones", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Bultos")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<decimal?>("PrecioUnidad")
                        .HasColumnType("numeric(18, 6)");

                    b.Property<int?>("idEnvase")
                        .HasColumnType("int");

                    b.Property<int?>("idFormato")
                        .HasColumnType("int");

                    b.Property<int?>("idLineaSalidaMedicamento")
                        .HasColumnType("int");

                    b.Property<int?>("idMedicamento")
                        .HasColumnType("int");

                    b.Property<int?>("idUnidad")
                        .HasColumnType("int");

                    b.Property<int?>("idVentaLinia")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idEnvase");

                    b.HasIndex("idFormato");

                    b.HasIndex("idLineaSalidaMedicamento");

                    b.HasIndex("idMedicamento");

                    b.HasIndex("idUnidad");

                    b.HasIndex("idVentaLinia");

                    b.ToTable("VentasLiniasMedicaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.VentasLiniasPuntosDescarga", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idLineaVenta")
                        .HasColumnType("int");

                    b.Property<int>("idPuntoDescarga")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("idLineaVenta");

                    b.HasIndex("idPuntoDescarga");

                    b.ToTable("VentasLiniasPuntosDescarga");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.VersionDatosExtra", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<decimal?>("KWToneladaEfectivo")
                        .HasColumnType("decimal(18, 4)")
                        .HasComputedColumnSql("([dbo].[VersionKWToneladaEfectivo]([id]))");

                    b.Property<decimal?>("KWToneladaTotal")
                        .HasColumnType("decimal(18, 4)")
                        .HasComputedColumnSql("([dbo].[VersionKWToneladaTotal]([id]))");

                    b.HasKey("id");

                    b.ToTable("VersionDatosExtra");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.VersionTPrevisto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Tiempo")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int>("idModulo")
                        .HasColumnType("int");

                    b.Property<int>("idVersion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("idModulo");

                    b.HasIndex("idVersion");

                    b.ToTable("VersionTPrevisto");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Versiones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Caminos")
                        .HasColumnType("int");

                    b.Property<float?>("Cantidad")
                        .HasColumnType("real");

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<bool?>("Exportado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<int>("Formula")
                        .HasColumnType("int");

                    b.Property<int>("IdOld")
                        .HasColumnType("int");

                    b.Property<bool?>("Importado")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LimitePesoCiclo")
                        .HasColumnType("numeric(18, 3)");

                    b.Property<bool?>("LimpiezaPosteriorObligada")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Recalculado")
                        .HasColumnType("bit");

                    b.Property<string>("RefErp")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Refrescado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int?>("Unidad")
                        .HasColumnType("int");

                    b.Property<int?>("VersionOriginal")
                        .HasColumnType("int");

                    b.Property<string>("comentarios")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Formula");

                    b.HasIndex("Unidad");

                    b.ToTable("Versiones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Veterinarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("NColegiado")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("Veterinarios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Aditivos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "FormatoNavigation")
                        .WithMany("Aditivos")
                        .HasForeignKey("Formato")
                        .HasConstraintName("FK_Aditivos_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "OrdenNavigation")
                        .WithMany("Aditivos")
                        .HasForeignKey("Orden")
                        .HasConstraintName("FK_Aditivos_Ordenes")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("Aditivos")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_Aditivos_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "UbicacionNavigation")
                        .WithMany("Aditivos")
                        .HasForeignKey("Ubicacion")
                        .HasConstraintName("FK_Aditivos_Ubicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("Aditivos")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_Aditivos_Unidades");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Alarmas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "MedidorNavigation")
                        .WithMany("Alarmas")
                        .HasForeignKey("Medidor")
                        .HasConstraintName("FK_Alarmas_Medidores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.AlertasUsuarios", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.AlertasSmtpConfigs", "idServerSmtpNavigation")
                        .WithMany("AlertasUsuarios")
                        .HasForeignKey("idServerSmtp")
                        .HasConstraintName("FK_AlertasUsuarios_AlertasSmtpConfigs")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.AlertasUsuariosAlarmas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.AlertasUsuarios", "idAlertaUsuarioNavigation")
                        .WithMany("AlertasUsuariosAlarmas")
                        .HasForeignKey("idAlertaUsuario")
                        .HasConstraintName("FK_AlertasUsuariosAlarmas_AlertasUsuarios")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "idModuloNavigation")
                        .WithMany("AlertasUsuariosAlarmas")
                        .HasForeignKey("idModulo")
                        .HasConstraintName("FK_AlertasUsuariosAlarmas_Modulos");

                    b.HasOne("VMES.Database.Vmes.Models.NetAlarmasTipos", "idNetAlarmaTipoNavigation")
                        .WithMany("AlertasUsuariosAlarmas")
                        .HasForeignKey("idNetAlarmaTipo")
                        .HasConstraintName("FK_AlertasUsuariosAlarmas_NetAlarmasTipos")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.AlertasUsuariosInformes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.AlertasUsuarios", "idAlertasUsuariosNavigation")
                        .WithMany("AlertasUsuariosInformes")
                        .HasForeignKey("idAlertasUsuarios")
                        .HasConstraintName("FK_AlertasUsuariosInformes_AlertasUsuarios")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.AlertasUsuariosInformesParametros", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.AlertasUsuariosInformes", "idAlertaUsuarioInformesNavigation")
                        .WithMany("AlertasUsuariosInformesParametros")
                        .HasForeignKey("idAlertaUsuarioInformes")
                        .HasConstraintName("FK_AlertasUsuariosInformesParametros_AlertasUsuariosInformes")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.AuditColumn", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.AuditTable", "AuditTable")
                        .WithMany("AuditColumns")
                        .HasForeignKey("AuditTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.AuditTable", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Audit", "Audit")
                        .WithMany("AuditTables")
                        .HasForeignKey("AuditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Basculas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OpcConfig", "OpcConfig")
                        .WithMany("Basculas")
                        .HasForeignKey("OpcConfigId")
                        .HasConstraintName("FK__Basculas__OpcCon__54B68676");

                    b.HasOne("VMES.Database.Vmes.Models.Tags", "TagNavigation")
                        .WithMany("Basculas")
                        .HasForeignKey("Tag")
                        .HasConstraintName("FK_Basculas_Tags");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferConsumidos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OpcConfig", "OpcConfig")
                        .WithMany("BufferConsumidos")
                        .HasForeignKey("OpcConfigId")
                        .HasConstraintName("FK__BufferCon__OpcCo__569ECEE8");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPClienteDomicilioPuntoDescarga", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.BufferERPClientesDomicilios", "idDomicilioNavigation")
                        .WithMany("BufferERPClienteDomicilioPuntoDescarga")
                        .HasForeignKey("idDomicilio")
                        .HasConstraintName("FK_BufferERPClienteDomicilioPuntoDescarga_BufferERPClientesDomicilios")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPClientesDomicilios", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.BufferERPClientes", "idClienteNavigation")
                        .WithMany("BufferERPClientesDomicilios")
                        .HasForeignKey("idCliente")
                        .HasConstraintName("FK_BufferERPClientesDomicilios_BufferERPClientes")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPComponentes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.BufferERPVersiones", "idVersionNavigation")
                        .WithMany("BufferERPComponentes")
                        .HasForeignKey("idVersion")
                        .HasConstraintName("FK_BufferERPComponentes_BufferERPVersiones")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPComprasLineas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.BufferERPCompras", "Compra")
                        .WithMany("BufferERPComprasLineas")
                        .HasForeignKey("CompraId")
                        .HasConstraintName("FK_BufferERPComprasLineas_BufferERPCompras");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPEntradasLineas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.BufferERPEntradas", "idBufferEntradaNavigation")
                        .WithMany("BufferERPEntradasLineas")
                        .HasForeignKey("idBufferEntrada")
                        .HasConstraintName("FK_BufferERPEntradasLineas_BufferERPEntradas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPEntradasLineasLote", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.BufferERPEntradasLineas", "IdLineaEntradaNavigation")
                        .WithMany("BufferERPEntradasLineasLote")
                        .HasForeignKey("IdLineaEntrada")
                        .HasConstraintName("FK_BufferERPEntradasLineasLote_BufferERPEntradasLineas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPFormulaProductosFinales", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.BufferERPFormulas", "idFormulaNavigation")
                        .WithMany("BufferERPFormulaProductosFinales")
                        .HasForeignKey("idFormula")
                        .HasConstraintName("FK_BufferERPFormulaProductosFinales_BufferERPFormulas")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPLinOrdenes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.BufferERPCabOrdenes", "idCabordenNavigation")
                        .WithMany("BufferERPLinOrdenes")
                        .HasForeignKey("idCaborden")
                        .HasConstraintName("FK_BufferERPLinOrdenes_BufferERPCabOrdenes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPSalidasLinMedicamentos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.BufferERPSalidasLinias", "idSalidasLiniaNavigation")
                        .WithMany("BufferERPSalidasLinMedicamentos")
                        .HasForeignKey("idSalidasLinia")
                        .HasConstraintName("FK_BufferERPSalidasLinMedicamentos_BufferERPSalidasLinias")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPSalidasLinias", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.BufferERPSalidas", "idSalidasNavigation")
                        .WithMany("BufferERPSalidasLinias")
                        .HasForeignKey("idSalidas")
                        .HasConstraintName("FK_BufferERPSalidasLinias_BufferERPSalidas")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.BufferERPSalidasViajes", "idviajesNavigation")
                        .WithMany("BufferERPSalidasLinias")
                        .HasForeignKey("idviajes")
                        .HasConstraintName("FK_BufferERPSalidasLinias_BufferERPSalidasViajes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPSalidasLiniasLote", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.BufferERPSalidasLinias", "idLineaSalidaNavigation")
                        .WithMany("BufferERPSalidasLiniasLote")
                        .HasForeignKey("idLineaSalida")
                        .HasConstraintName("FK_BufferERPSalidasLiniasLote_BufferERPSalidasLinias");

                    b.HasOne("VMES.Database.Vmes.Models.BufferERPSalidasLinMedicamentos", "idLineaSalidaMedicamentoNavigation")
                        .WithMany("BufferERPSalidasLiniasLote")
                        .HasForeignKey("idLineaSalidaMedicamento")
                        .HasConstraintName("FK_BufferERPSalidasLiniasLote_BufferERPSalidasLinMedicamentos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPSolicitudRegularizacion", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "IdLoteNavigation")
                        .WithMany("BufferERPSolicitudRegularizacion")
                        .HasForeignKey("IdLote")
                        .HasConstraintName("FK_BufferERPSolicitudRegularizacion_Lotes");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "IdUbicacionNavigation")
                        .WithMany("BufferERPSolicitudRegularizacion")
                        .HasForeignKey("IdUbicacion")
                        .HasConstraintName("FK_BufferERPSolicitudRegularizacion_Ubicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Usuarios", "IdUsuarioNavigation")
                        .WithMany("BufferERPSolicitudRegularizacion")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_BufferERPSolicitudRegularizacion_Usuarios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferERPVersiones", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.BufferERPFormulas", "idFormulaNavigation")
                        .WithMany("BufferERPVersiones")
                        .HasForeignKey("idFormula")
                        .HasConstraintName("FK_BufferERPVersiones_BufferERPFormulas")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.BufferProducidos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OpcConfig", "OpcConfig")
                        .WithMany("BufferProducidos")
                        .HasForeignKey("OpcConfigId")
                        .HasConstraintName("FK__BufferPro__OpcCo__66D536B1");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.CabOrdenes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Entradas", "EntradaNavigation")
                        .WithMany("CabOrdenes")
                        .HasForeignKey("Entrada")
                        .HasConstraintName("FK_CabOrdenes_Entradas");

                    b.HasOne("VMES.Database.Vmes.Models.Formulas", "FormulaNavigation")
                        .WithMany("CabOrdenes")
                        .HasForeignKey("Formula")
                        .HasConstraintName("FK_CabOrdenes_Formulas");

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "LoteDestinoNavigation")
                        .WithMany("CabOrdenes")
                        .HasForeignKey("LoteDestino")
                        .HasConstraintName("FK_CabOrdenes_Lotes");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "ModuloNavigation")
                        .WithMany("CabOrdenes")
                        .HasForeignKey("Modulo")
                        .HasConstraintName("FK_CabOrdenes_Modulos");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoDestinoNavigation")
                        .WithMany("CabOrdenes")
                        .HasForeignKey("ProductoDestino")
                        .HasConstraintName("FK_CabOrdenes_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "UbicacionDestinoNavigation")
                        .WithMany("CabOrdenes")
                        .HasForeignKey("UbicacionDestino")
                        .HasConstraintName("FK_CabOrdenes_Ubicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Versiones", "VersionNavigation")
                        .WithMany("CabOrdenes")
                        .HasForeignKey("Version")
                        .HasConstraintName("FK_CabOrdenes_Versiones");

                    b.HasOne("VMES.Database.Vmes.Models.SalidasViajes", "ViajeSalidaNavigation")
                        .WithMany("CabOrdenes")
                        .HasForeignKey("ViajeSalida")
                        .HasConstraintName("FK_CabOrdenes_SalidasViajes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Camino", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "Medidor")
                        .WithMany("Caminos")
                        .HasForeignKey("MedidorId")
                        .HasConstraintName("FK_Caminos_Medidores")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Caudal", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Productos", "Producto")
                        .WithMany("Caudales")
                        .HasForeignKey("ProductoId")
                        .HasConstraintName("FK__Caudales__Produc__6F6A7CB2")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "Ubicacion")
                        .WithMany("Caudales")
                        .HasForeignKey("UbicacionId")
                        .HasConstraintName("FK__Caudales__Ubicac__15B0212B")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.CertificadoDesinfeccion", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Series", "SerieNavigation")
                        .WithMany("CertificadoDesinfeccion")
                        .HasForeignKey("Serie")
                        .HasConstraintName("FK_CertificadoDesinfeccion_Series");

                    b.HasOne("VMES.Database.Vmes.Models.Vehiculos", "idCamionNavigation")
                        .WithMany("CertificadoDesinfeccion")
                        .HasForeignKey("idCamion")
                        .HasConstraintName("FK_CertificadoDesinfeccion_Vehiculos");

                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "idOrdenNavigation")
                        .WithMany("CertificadoDesinfeccion")
                        .HasForeignKey("idOrden")
                        .HasConstraintName("FK_CertificadoDesinfeccion_Ordenes");

                    b.HasOne("VMES.Database.Vmes.Models.Choferes", "idTransportistaNavigation")
                        .WithMany("CertificadoDesinfeccion")
                        .HasForeignKey("idTransportista")
                        .HasConstraintName("FK_CertificadoDesinfeccion_Choferes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Choferes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Paises", "PaisNavigation")
                        .WithMany("Choferes")
                        .HasForeignKey("Pais")
                        .HasConstraintName("FK_Choferes_Paises");

                    b.HasOne("VMES.Database.Vmes.Models.Provincias", "ProvinciaNavigation")
                        .WithMany("Choferes")
                        .HasForeignKey("Provincia")
                        .HasConstraintName("FK_Choferes_Provincias");

                    b.HasOne("VMES.Database.Vmes.Models.Tarjetas", "TarjetaNavigation")
                        .WithMany("Choferes")
                        .HasForeignKey("Tarjeta")
                        .HasConstraintName("FK_Choferes_SalidasViajes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Clientes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Paises", "PaisNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("Pais")
                        .HasConstraintName("FK_Clientes_Paises");

                    b.HasOne("VMES.Database.Vmes.Models.Provincias", "ProvinciaNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("Provincia")
                        .HasConstraintName("FK_Clientes_Provincias");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.CompActivosLista", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("CompActivosLista")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_CompActivosLista_Unidades");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Componentes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "FormatoNavigation")
                        .WithMany("Componentes")
                        .HasForeignKey("Formato")
                        .HasConstraintName("FK_Componentes_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.TempControles", "IdTempControlNavigation")
                        .WithMany("Componentes")
                        .HasForeignKey("IdTempControl")
                        .HasConstraintName("FK_Componentes_TempControles")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "MedidorNavigation")
                        .WithMany("Componentes")
                        .HasForeignKey("Medidor")
                        .HasConstraintName("FK_Componentes_Medidores");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "ModuloNavigation")
                        .WithMany("Componentes")
                        .HasForeignKey("Modulo")
                        .HasConstraintName("FK_Componentes_Modulos");

                    b.HasOne("VMES.Database.Vmes.Models.OperAcciones", "OperAccionNavigation")
                        .WithMany("Componentes")
                        .HasForeignKey("OperAccion")
                        .HasConstraintName("FK_Componentes_OperAcciones");

                    b.HasOne("VMES.Database.Vmes.Models.OperMotores", "OperMotorNavigation")
                        .WithMany("Componentes")
                        .HasForeignKey("OperMotor")
                        .HasConstraintName("FK_Componentes_OperMotores");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("Componentes")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_Componentes_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("Componentes")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_Componentes_Unidades");

                    b.HasOne("VMES.Database.Vmes.Models.Versiones", "VersionNavigation")
                        .WithMany("Componentes")
                        .HasForeignKey("Version")
                        .HasConstraintName("FK_Componentes_Versiones")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.OperCabPlantillas", "idPlantillaNavigation")
                        .WithMany("Componentes")
                        .HasForeignKey("idPlantilla")
                        .HasConstraintName("FK_Componentes_OperCabPlantillas")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ComponentesActivos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.CompActivosLista", "IdCompActivosListaNavigation")
                        .WithMany("ComponentesActivos")
                        .HasForeignKey("IdCompActivosLista")
                        .HasConstraintName("FK_ComponentesActivos_CompActivosLista");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("ComponentesActivos")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_ComponentesActivos_Productos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Compras", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Departamentos", "DepartamentoNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("Departamento")
                        .HasConstraintName("FK_Compras_Departamentos")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Proveedores", "ProveedorNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("Proveedor")
                        .HasConstraintName("FK_Compras_Proveedores")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Series", "SerieNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("Serie")
                        .HasConstraintName("FK_Compras_Series")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Contratos", "idContratoNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("idContrato")
                        .HasConstraintName("FK__Compras__idContr__0559BDD1");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Contratos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Clientes", "IdClienteNavigation")
                        .WithMany("Contratos")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_Contratos_Clientes");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "IdProductoNavigation")
                        .WithMany("Contratos")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_Contratos_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.Proveedores", "IdProveedorNavigation")
                        .WithMany("Contratos")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK_Contratos_Proveedores");

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("Contratos")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_Contratos_Unidades");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ControlesNIRProductos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.ControlesNIR", "idControlNirNavigation")
                        .WithMany("ControlesNIRProductos")
                        .HasForeignKey("idControlNir")
                        .HasConstraintName("FK_ControlesNIRProductos_ControlesNIR")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "idProductoNavigation")
                        .WithMany("ControlesNIRProductos")
                        .HasForeignKey("idProducto")
                        .HasConstraintName("FK_ControlesNIRProductos_Productos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.DashboardsLib", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.DashboardsLibCategorias", "IdCategoriaNavigation")
                        .WithMany("DashboardsLib")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK_DashboardsLib_DashboardsLibCategorias")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.DashboardsLib", "IdDashboardBaseNavigation")
                        .WithMany("InverseIdDashboardBaseNavigation")
                        .HasForeignKey("IdDashboardBase")
                        .HasConstraintName("FK_DashboardsLib_DashboardsLib");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Departamentos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Provincias", "ProvinciaNavigation")
                        .WithMany("Departamentos")
                        .HasForeignKey("Provincia")
                        .HasConstraintName("FK_Departamentos_Provincias")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Desgloses", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Envases", "EnvaseNavigation")
                        .WithMany("Desgloses")
                        .HasForeignKey("Envase")
                        .HasConstraintName("FK_Desgloses_Envases");

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "LoteNavigation")
                        .WithMany("Desgloses")
                        .HasForeignKey("Lote")
                        .HasConstraintName("FK_Desgloses_Lotes");

                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "Medidor")
                        .WithMany("Desgloses")
                        .HasForeignKey("MedidorId")
                        .HasConstraintName("FK_Desgloses_Medidores");

                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "OrdenNavigation")
                        .WithMany("Desgloses")
                        .HasForeignKey("Orden")
                        .HasConstraintName("FK_Desgloses_Ordenes")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("Desgloses")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_Desgloses_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "UbicacionNavigation")
                        .WithMany("Desgloses")
                        .HasForeignKey("Ubicacion")
                        .HasConstraintName("FK_Desgloses_Ubicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("Desgloses")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_Desgloses_Unidades");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Destinos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "ModuloNavigation")
                        .WithMany("Destinos")
                        .HasForeignKey("Modulo")
                        .HasConstraintName("FK_Destinos_Modulos")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "UbicacionNavigation")
                        .WithMany("Destinos")
                        .HasForeignKey("Ubicacion")
                        .HasConstraintName("FK_Destinos_Ubicaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.DestinosMedidores", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Destinos", "idDestinoNavigation")
                        .WithMany("DestinosMedidores")
                        .HasForeignKey("idDestino")
                        .HasConstraintName("FK_DestinosMedidores_Destinos")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "idMedidorNavigation")
                        .WithMany("DestinosMedidores")
                        .HasForeignKey("idMedidor")
                        .HasConstraintName("FK_DestinosMedidores_Medidores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Disposiciones", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "FormatoNavigation")
                        .WithMany("Disposiciones")
                        .HasForeignKey("Formato")
                        .HasConstraintName("FK_Disposiciones_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "LoteNavigation")
                        .WithMany("Disposiciones")
                        .HasForeignKey("Lote")
                        .HasConstraintName("FK_Disposiciones_Lotes");

                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "OrdenNavigation")
                        .WithMany("Disposiciones")
                        .HasForeignKey("Orden")
                        .HasConstraintName("FK_Disposiciones_Ordenes");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("Disposiciones")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_Disposiciones_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "UbicacionNavigation")
                        .WithMany("Disposiciones")
                        .HasForeignKey("Ubicacion")
                        .HasConstraintName("FK_Disposiciones_Ubicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("Disposiciones")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_Disposiciones_Unidades");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Domicilios", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Clientes", "ClienteNavigation")
                        .WithMany("Domicilios")
                        .HasForeignKey("Cliente")
                        .HasConstraintName("FK_Domicilios_Clientes")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.Especies", "EspecieNavigation")
                        .WithMany("Domicilios")
                        .HasForeignKey("Especie")
                        .HasConstraintName("FK_Domicilios_Especies");

                    b.HasOne("VMES.Database.Vmes.Models.Paises", "PaisNavigation")
                        .WithMany("Domicilios")
                        .HasForeignKey("Pais")
                        .HasConstraintName("FK_Domicilios_Paises");

                    b.HasOne("VMES.Database.Vmes.Models.Provincias", "ProvinciaNavigation")
                        .WithMany("Domicilios")
                        .HasForeignKey("Provincia")
                        .HasConstraintName("FK_Domicilios_Provincias");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Dominios", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Departamentos", "DepartamentoNavigation")
                        .WithMany("Dominios")
                        .HasForeignKey("Departamento")
                        .HasConstraintName("FK_Dominios_Departamentos")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.Familias", "FamiliaNavigation")
                        .WithMany("Dominios")
                        .HasForeignKey("Familia")
                        .HasConstraintName("FK_Dominios_Familias")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Dosificaciones", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "FormatoNavigation")
                        .WithMany("Dosificaciones")
                        .HasForeignKey("Formato")
                        .HasConstraintName("FK_Dosificaciones_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "IdModuloNavigation")
                        .WithMany("Dosificaciones")
                        .HasForeignKey("IdModulo")
                        .HasConstraintName("FK_Dosificaciones_Modulos");

                    b.HasOne("VMES.Database.Vmes.Models.OperAcciones", "IdOperAccionNavigation")
                        .WithMany("Dosificaciones")
                        .HasForeignKey("IdOperAccion")
                        .HasConstraintName("FK_Dosificaciones_OperAcciones");

                    b.HasOne("VMES.Database.Vmes.Models.OperMotores", "IdOperMotorNavigation")
                        .WithMany("Dosificaciones")
                        .HasForeignKey("IdOperMotor")
                        .HasConstraintName("FK_Dosificaciones_OperMotores");

                    b.HasOne("VMES.Database.Vmes.Models.TempControles", "IdTempControlNavigation")
                        .WithMany("Dosificaciones")
                        .HasForeignKey("IdTempControl")
                        .HasConstraintName("FK_Dosificaciones_TempControles")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "LoteNavigation")
                        .WithMany("DosificacionesLoteNavigation")
                        .HasForeignKey("Lote")
                        .HasConstraintName("FK_Dosificaciones_Lotes");

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "LoteActualNavigation")
                        .WithMany("DosificacionesLoteActualNavigation")
                        .HasForeignKey("LoteActual")
                        .HasConstraintName("FK_Dosificaciones_LotesActual");

                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "MedidorNavigation")
                        .WithMany("DosificacionesNavigation")
                        .HasForeignKey("Medidor")
                        .HasConstraintName("FK_Dosificaciones_Medidores");

                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "OrdenNavigation")
                        .WithMany("Dosificaciones")
                        .HasForeignKey("Orden")
                        .HasConstraintName("FK_Dosificaciones_Ordenes")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("DosificacionesProductoNavigation")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_Dosificaciones_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoActualNavigation")
                        .WithMany("DosificacionesProductoActualNavigation")
                        .HasForeignKey("ProductoActual")
                        .HasConstraintName("FK_Dosificaciones_ProductosActual");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "UbicacionNavigation")
                        .WithMany("Dosificaciones")
                        .HasForeignKey("Ubicacion")
                        .HasConstraintName("FK_Dosificaciones_Ubicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("Dosificaciones")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_Dosificaciones_Unidades");

                    b.HasOne("VMES.Database.Vmes.Models.MedidoresDosificaciones", "idMedGeneradorNavigation")
                        .WithMany("Dosificaciones")
                        .HasForeignKey("idMedGenerador")
                        .HasConstraintName("FK_Dosificaciones_MedidoresDosificaciones");

                    b.HasOne("VMES.Database.Vmes.Models.OperCabPlantillas", "idPlantillaNavigation")
                        .WithMany("Dosificaciones")
                        .HasForeignKey("idPlantilla")
                        .HasConstraintName("FK_Dosificaciones_OperCabPlantillas")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Electrovalvula", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OpcConfig", "OpcConfig")
                        .WithMany("Electrovalvulas")
                        .HasForeignKey("OpcConfigId")
                        .HasConstraintName("FK_Electrovalvulas_OpcConfig")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EmpresasTransporte", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Paises", "PaisNavigation")
                        .WithMany("EmpresasTransporte")
                        .HasForeignKey("Pais")
                        .HasConstraintName("FK_EmpresasTransporte_Paises");

                    b.HasOne("VMES.Database.Vmes.Models.Provincias", "ProvinciaNavigation")
                        .WithMany("EmpresasTransporte")
                        .HasForeignKey("Provincia")
                        .HasConstraintName("FK_EmpresasTransporte_Provincias");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EnlaceERP", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.EnlaceERPTipo", "idEnlaceERPTipoNavigation")
                        .WithMany("EnlaceERP")
                        .HasForeignKey("idEnlaceERPTipo")
                        .HasConstraintName("FK_EnlaceERP_EnlaceERPTipo");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EnlaceERPAsigUbi", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Productos", "IdProductoNavigation")
                        .WithMany("EnlaceERPAsigUbi")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_EnlaceERPAsigUbi_Productos")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "IdUbicacionNavigation")
                        .WithMany("EnlaceERPAsigUbi")
                        .HasForeignKey("IdUbicacion")
                        .HasConstraintName("FK_EnlaceERPAsigUbi_Ubicaciones")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EnlaceERPLinea", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.EnlaceERP", "idEnlaceERPNavigation")
                        .WithMany("EnlaceERPLinea")
                        .HasForeignKey("idEnlaceERP")
                        .HasConstraintName("FK_EnlaceERPLinea_EnlaceERP");

                    b.HasOne("VMES.Database.Vmes.Models.EnlaceERPTipoLinea", "idEnlaceERPTipoLineaNavigation")
                        .WithMany("EnlaceERPLinea")
                        .HasForeignKey("idEnlaceERPTipoLinea")
                        .HasConstraintName("FK_EnlaceERPLinea_EnlaceERPTipoLinea");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EnlaceERPTipoLinea", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.EnlaceERPTipo", "idEnlaceERPTipoNavigation")
                        .WithMany("EnlaceERPTipoLinea")
                        .HasForeignKey("idEnlaceERPTipo")
                        .HasConstraintName("FK_EnlaceERPTipoLinea_EnlaceERPTipo");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Entradas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Series", "SerieNavigation")
                        .WithMany("Entradas")
                        .HasForeignKey("Serie")
                        .HasConstraintName("FK_Entradas_Series")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Choferes", "idChoferNavigation")
                        .WithMany("Entradas")
                        .HasForeignKey("idChofer")
                        .HasConstraintName("FK_Entradas_Choferes")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.EmpresasTransporte", "idEmpresaTransporteNavigation")
                        .WithMany("Entradas")
                        .HasForeignKey("idEmpresaTransporte")
                        .HasConstraintName("FK_Entradas_EmpresasTransporte")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Proveedores", "idProveedorNavigation")
                        .WithMany("Entradas")
                        .HasForeignKey("idProveedor")
                        .HasConstraintName("FK_Entradas_Proveedores")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Tarjetas", "idTarjetaNavigation")
                        .WithMany("Entradas")
                        .HasForeignKey("idTarjeta")
                        .HasConstraintName("FK_Entradas_Tarjetas")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Vehiculos", "idVehiculoNavigation")
                        .WithMany("Entradas")
                        .HasForeignKey("idVehiculo")
                        .HasConstraintName("FK_Entradas_Vehiculos")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EntradasContratos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Contratos", "idContratoNavigation")
                        .WithMany("EntradasContratos")
                        .HasForeignKey("idContrato")
                        .HasConstraintName("FK_EntradasContratos_Contratos")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.EntradasLineas", "idEntradasLineasNavigation")
                        .WithMany("EntradasContratos")
                        .HasForeignKey("idEntradasLineas")
                        .HasConstraintName("FK_EntradasContratos_EntradasLineas")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EntradasLineas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "Destino1Navigation")
                        .WithMany("EntradasLineasDestino1Navigation")
                        .HasForeignKey("Destino1")
                        .HasConstraintName("FK_EntradasLineas_Ubicaciones1");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "Destino2Navigation")
                        .WithMany("EntradasLineasDestino2Navigation")
                        .HasForeignKey("Destino2")
                        .HasConstraintName("FK_EntradasLineas_Ubicaciones2");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "Destino3Navigation")
                        .WithMany("EntradasLineasDestino3Navigation")
                        .HasForeignKey("Destino3")
                        .HasConstraintName("FK_EntradasLineas_Ubicaciones3");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "Destino4Navigation")
                        .WithMany("EntradasLineasDestino4Navigation")
                        .HasForeignKey("Destino4")
                        .HasConstraintName("FK_EntradasLineas_Ubicaciones4");

                    b.HasOne("VMES.Database.Vmes.Models.Envases", "EnvaseNavigation")
                        .WithMany("EntradasLineas")
                        .HasForeignKey("Envase")
                        .HasConstraintName("FK_EntradasLineas_Envases");

                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "FormatoNavigation")
                        .WithMany("EntradasLineas")
                        .HasForeignKey("Formato")
                        .HasConstraintName("FK_EntradasLineas_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "LoteNavigation")
                        .WithMany("EntradasLineas")
                        .HasForeignKey("Lote")
                        .HasConstraintName("FK_EntradasLineas_Lotes");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "Origen1Navigation")
                        .WithMany("EntradasLineasOrigen1Navigation")
                        .HasForeignKey("Origen1")
                        .HasConstraintName("FK_EntradasLineas_Ubicaciones5");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "Origen2Navigation")
                        .WithMany("EntradasLineasOrigen2Navigation")
                        .HasForeignKey("Origen2")
                        .HasConstraintName("FK_EntradasLineas_Ubicaciones6");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "Origen3Navigation")
                        .WithMany("EntradasLineasOrigen3Navigation")
                        .HasForeignKey("Origen3")
                        .HasConstraintName("FK_EntradasLineas_Ubicaciones7");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "Origen4Navigation")
                        .WithMany("EntradasLineasOrigen4Navigation")
                        .HasForeignKey("Origen4")
                        .HasConstraintName("FK_EntradasLineas_Ubicaciones8");

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("EntradasLineas")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_EntradasLineas_Unidades");

                    b.HasOne("VMES.Database.Vmes.Models.Basculas", "idBasculaPesajeBrutoNavigation")
                        .WithMany("EntradasLineasidBasculaPesajeBrutoNavigation")
                        .HasForeignKey("idBasculaPesajeBruto")
                        .HasConstraintName("FK_EntradasLineas_BasculasBruto");

                    b.HasOne("VMES.Database.Vmes.Models.Basculas", "idBasculaPesajeNetoNavigation")
                        .WithMany("EntradasLineasidBasculaPesajeNetoNavigation")
                        .HasForeignKey("idBasculaPesajeNeto")
                        .HasConstraintName("FK_EntradasLineas_BasculasNeto");

                    b.HasOne("VMES.Database.Vmes.Models.Entradas", "idEntradasNavigation")
                        .WithMany("EntradasLineas")
                        .HasForeignKey("idEntradas")
                        .HasConstraintName("FK_EntradasLineas_Entradas")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "idModuloNavigation")
                        .WithMany("EntradasLineas")
                        .HasForeignKey("idModulo")
                        .HasConstraintName("FK_EntradasLineas_Modulos");

                    b.HasOne("VMES.Database.Vmes.Models.ProveedoresOrigenes", "idOrigenProvNavigation")
                        .WithMany("EntradasLineas")
                        .HasForeignKey("idOrigenProv")
                        .HasConstraintName("FK_EntradasLineas_ProveedoresOrigenes");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "idProductoNavigation")
                        .WithMany("EntradasLineas")
                        .HasForeignKey("idProducto")
                        .HasConstraintName("FK_EntradasLineas_Productos")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Proveedores", "idProveedorNavigation")
                        .WithMany("EntradasLineas")
                        .HasForeignKey("idProveedor")
                        .HasConstraintName("FK_EntradasLineas_Proveedores")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EntradasLineasResultadosNIR", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.ControlesNIR", "idControlesNirNavigation")
                        .WithMany("EntradasLineasResultadosNIR")
                        .HasForeignKey("idControlesNir")
                        .HasConstraintName("FK_EntradasLineasResultadosNIR_ControlesNIR")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.EntradasLineas", "idEntradasLineasNavigation")
                        .WithMany("EntradasLineasResultadosNIR")
                        .HasForeignKey("idEntradasLineas")
                        .HasConstraintName("FK_EntradasLineasResultadosNIR_EntradasLineas")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EntradasLotes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.EntradasLineas", "IdEntradasLineasNavigation")
                        .WithMany("EntradasLotes")
                        .HasForeignKey("IdEntradasLineas")
                        .HasConstraintName("FK_EntradasLotes_EntradasLineas")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "IdLoteNavigation")
                        .WithMany("EntradasLotes")
                        .HasForeignKey("IdLote")
                        .HasConstraintName("FK_EntradasLotes_Lotes")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Envases", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("Envases")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_Envases_Unidades")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.EventosDetalle", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Eventos", "EventoNavigation")
                        .WithMany("EventosDetalle")
                        .HasForeignKey("Evento")
                        .HasConstraintName("FK_EventosDetalle_Eventos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Existencias", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Envases", "EnvaseNavigation")
                        .WithMany("Existencias")
                        .HasForeignKey("Envase")
                        .HasConstraintName("FK_Existencias_Envases");

                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "FormatoNavigation")
                        .WithMany("Existencias")
                        .HasForeignKey("Formato")
                        .HasConstraintName("FK_Existencias_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.Inventarios", "InventarioNavigation")
                        .WithMany("Existencias")
                        .HasForeignKey("Inventario")
                        .HasConstraintName("FK_Existencias_Inventarios")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "LoteNavigation")
                        .WithMany("Existencias")
                        .HasForeignKey("Lote")
                        .HasConstraintName("FK_Existencias_Lotes");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("Existencias")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_Existencias_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "UbicacionNavigation")
                        .WithMany("Existencias")
                        .HasForeignKey("Ubicacion")
                        .HasConstraintName("FK_Existencias_Ubicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("Existencias")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_Existencias_Unidades");

                    b.HasOne("VMES.Database.Vmes.Models.EntradasLineas", "idEntradaLineaNavigation")
                        .WithMany("Existencias")
                        .HasForeignKey("idEntradaLinea")
                        .HasConstraintName("FK_Existencias_EntradasLineas");

                    b.HasOne("VMES.Database.Vmes.Models.Proveedores", "idProveedorNavigation")
                        .WithMany("Existencias")
                        .HasForeignKey("idProveedor")
                        .HasConstraintName("FK_Existencias_Proveedores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Familias", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Analisis", "AnalisiNavigation")
                        .WithMany("Familias")
                        .HasForeignKey("Analisi")
                        .HasConstraintName("FK_Familias_Analisis")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Departamentos", "DepartamentoNavigation")
                        .WithMany("Familias")
                        .HasForeignKey("Departamento")
                        .HasConstraintName("FK_Familias_Departamentos")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.FileGmaoElement", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Files", "File")
                        .WithMany("FileGmaoElement")
                        .HasForeignKey("FileId")
                        .HasConstraintName("FK__FileGmaoE__FileI__5575A085")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "GmaoElement")
                        .WithMany("FileGmaoElement")
                        .HasForeignKey("GmaoElementId")
                        .HasConstraintName("FK__FileGmaoE__GmaoE__5669C4BE")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.FormulaProdModulo", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Formularios", "idFormularioNavigation")
                        .WithMany("FormulaProdModulo")
                        .HasForeignKey("idFormulario")
                        .HasConstraintName("FK_FormulaProdModulo_Formularios")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "idModuloNavigation")
                        .WithMany("FormulaProdModulo")
                        .HasForeignKey("idModulo")
                        .HasConstraintName("FK_FormulaProdModulo_Modulos");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "idProductoNavigation")
                        .WithMany("FormulaProdModulo")
                        .HasForeignKey("idProducto")
                        .HasConstraintName("FK_FormulaProdModulo_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "idUbicacionNavigation")
                        .WithMany("FormulaProdModulo")
                        .HasForeignKey("idUbicacion")
                        .HasConstraintName("FK_FormulaProdModulo_Ubicaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Formularios", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Formulas", "FormulaNavigation")
                        .WithMany("Formularios")
                        .HasForeignKey("Formula")
                        .HasConstraintName("FK_Formularios_Formulas")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Medicaciones", "MedicacionNavigation")
                        .WithMany("Formularios")
                        .HasForeignKey("Medicacion")
                        .HasConstraintName("FK_Formularios_Medicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("Formularios")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_Formularios_Productos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Formulas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Departamentos", "DepartamentoNavigation")
                        .WithMany("Formulas")
                        .HasForeignKey("Departamento")
                        .HasConstraintName("FK_Formulas_Departamentos");

                    b.HasOne("VMES.Database.Vmes.Models.Familias", "FamiliaNavigation")
                        .WithMany("Formulas")
                        .HasForeignKey("Familia")
                        .HasConstraintName("FK_Formulas_Familias");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "ModuloNavigation")
                        .WithMany("Formulas")
                        .HasForeignKey("Modulo")
                        .HasConstraintName("FK_Formulas_Modulos");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("Formulas")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_Formulas_Productos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.FormulasDatosExtra", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Formulas", "idNavigation")
                        .WithOne("FormulasDatosExtra")
                        .HasForeignKey("VMES.Database.Vmes.Models.FormulasDatosExtra", "id")
                        .HasConstraintName("FK_FormulasDatosExtra_Formulas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Archivos_Elementos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Archivos", "idArchivoNavigation")
                        .WithMany("GMAO_Archivos_Elementos")
                        .HasForeignKey("idArchivo")
                        .HasConstraintName("FK_GMAO_Archivos_Elementos_GMAO_Archivos")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "idElementoNavigation")
                        .WithMany("GMAO_Archivos_Elementos")
                        .HasForeignKey("idElemento")
                        .HasConstraintName("FK_GMAO_Archivos_Elementos_GMAO_Elementos")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Archivos_Intervenciones", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Archivos", "idArchivoNavigation")
                        .WithMany("GMAO_Archivos_Intervenciones")
                        .HasForeignKey("idArchivo")
                        .HasConstraintName("FK_GMAO_ElemIntervenciones_GMAO_Archivos")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_ElemIntervenciones", "idIntervencionNavigation")
                        .WithMany("GMAO_Archivos_Intervenciones")
                        .HasForeignKey("idIntervencion")
                        .HasConstraintName("FK_GMAO_Archivos_Intervenciones_GMAO_ElemIntervenciones")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Archivos_Modelos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Archivos", "idArchivoNavigation")
                        .WithMany("GMAO_Archivos_Modelos")
                        .HasForeignKey("idArchivo")
                        .HasConstraintName("FK_GMAO_Modelos_GMAO_Archivos")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_MarcasModelos", "idModeloNavigation")
                        .WithMany("GMAO_Archivos_Modelos")
                        .HasForeignKey("idModelo")
                        .HasConstraintName("FK_GMAO_Archivos_Modelos_GMAO_MarcasModelos")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Archivos_Tipos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Archivos", "idArchivoNavigation")
                        .WithMany("GMAO_Archivos_Tipos")
                        .HasForeignKey("idArchivo")
                        .HasConstraintName("FK_GMAO_Archivos_Tipos_GMAO_Archivos")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_ElementosTipos", "idTipoElementoNavigation")
                        .WithMany("GMAO_Archivos_Tipos")
                        .HasForeignKey("idTipoElemento")
                        .HasConstraintName("FK_GMAO_Archivos_Tipos_GMAO_ElementosTipos")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_CaracteristicasElementos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Caracteristicas", "idCaracteristicaNavigation")
                        .WithMany("GMAO_CaracteristicasElementos")
                        .HasForeignKey("idCaracteristica")
                        .HasConstraintName("FK_GMAO_CaracteristicasElementos_GMAO_Caracteristicas")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "idElementoNavigation")
                        .WithMany("GMAO_CaracteristicasElementos")
                        .HasForeignKey("idElemento")
                        .HasConstraintName("FK_GMAO_CaracteristicasElementos_GMAO_Elementos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_CaracteristicasTipos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Caracteristicas", "idCaracteristicaNavigation")
                        .WithMany("GMAO_CaracteristicasTipos")
                        .HasForeignKey("idCaracteristica")
                        .HasConstraintName("FK_GMAO_CaracteristicasTipos_GMAO_Caracteristicas")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_ElementosTipos", "idTipoElementoNavigation")
                        .WithMany("GMAO_CaracteristicasTipos")
                        .HasForeignKey("idTipoElemento")
                        .HasConstraintName("FK_GMAO_CaracteristicasTipos_GMAO_ElementosTipos")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Compras", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Proveedores", "IdProveedorNavigation")
                        .WithMany("GMAO_Compras")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK_GMAO_Compras_GMAO_Proveedores")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ComprasLineas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Compras", "idCompraNavigation")
                        .WithMany("GMAO_ComprasLineas")
                        .HasForeignKey("idCompra")
                        .HasConstraintName("FK_GMAO_ComprasLineas_GMAO_Compras")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "idElementoNavigation")
                        .WithMany("GMAO_ComprasLineas")
                        .HasForeignKey("idElemento")
                        .HasConstraintName("FK_GMAO_ComprasLineas_GMAO_Elementos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Departamentos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Operarios", "IdResponsableNavigation")
                        .WithMany("GMAO_Departamentos")
                        .HasForeignKey("IdResponsable")
                        .HasConstraintName("FK_GMAO_Departamentos_GMAO_Operarios")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Deps_Operarios", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Departamentos", "idDepartamentoNavigation")
                        .WithMany("GMAO_Deps_Operarios")
                        .HasForeignKey("idDepartamento")
                        .HasConstraintName("FK_GMAO_Deps_Operarios_GMAO_Departamentos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Operarios", "idOperarioNavigation")
                        .WithMany("GMAO_Deps_Operarios")
                        .HasForeignKey("idOperario")
                        .HasConstraintName("FK_GMAO_Deps_Operarios_GMAO_Operarios")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElemAlternativos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "IdHijoNavigation")
                        .WithMany("GMAO_ElemAlternativosIdHijoNavigation")
                        .HasForeignKey("IdHijo")
                        .HasConstraintName("FK_GMAO_ElemAlternativos_Hijo")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "IdPadreNavigation")
                        .WithMany("GMAO_ElemAlternativosIdPadreNavigation")
                        .HasForeignKey("IdPadre")
                        .HasConstraintName("FK_GMAO_ElemAlternativos_Padre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElemIntervenciones", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Departamentos", "IDDepartamentoNavigation")
                        .WithMany("GMAO_ElemIntervenciones")
                        .HasForeignKey("IDDepartamento")
                        .HasConstraintName("FK_GMAO_ElemIntervenciones_GMAO_Departamentos");

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Operarios", "IdOperarioResponsableNavigation")
                        .WithMany("GMAO_ElemIntervenciones")
                        .HasForeignKey("IdOperarioResponsable")
                        .HasConstraintName("FK_GMAO_ElemIntervenciones_GMAO_Operarios");

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_ParadasConfiguracion", "IdParadaConfiguracionNavigation")
                        .WithMany("GMAO_ElemIntervenciones")
                        .HasForeignKey("IdParadaConfiguracion")
                        .HasConstraintName("FK_GMAO_ElemIntervenciones_GMAO_ParadasConfiguracion");

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "idElementoNavigation")
                        .WithMany("GMAO_ElemIntervenciones")
                        .HasForeignKey("idElemento")
                        .HasConstraintName("FK_GMAO_ElemIntervenciones_GMAO_Elementos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElemIntervencionesPiezas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "Element")
                        .WithMany("GMAO_ElemIntervencionesPiezas")
                        .HasForeignKey("ElementId")
                        .HasConstraintName("FK_GMAO_ElemIntervencionesPiezas_GMAO_Elementos")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_ElemIntervenciones", "IdIntervencionNavigation")
                        .WithMany("GMAO_ElemIntervencionesPiezas")
                        .HasForeignKey("IdIntervencion")
                        .HasConstraintName("FK_GMAO_ElemIntervencionesPiezas_GMAO_ElemIntervenciones")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Warehouses", "Warehouse")
                        .WithMany("GMAO_ElemIntervencionesPiezas")
                        .HasForeignKey("WarehouseId")
                        .HasConstraintName("FK_GMAO_ElemIntervencionesPiezas_GMAO_Warehouses")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElemIntervencionesTrabajos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_ElemIntervenciones", "IdIntervencionNavigation")
                        .WithMany("GMAO_ElemIntervencionesTrabajos")
                        .HasForeignKey("IdIntervencion")
                        .HasConstraintName("FK_GMAO_ElemIntervencionesTrabajos_GMAO_ElemIntervenciones")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Operarios", "IdOperarioNavigation")
                        .WithMany("GMAO_ElemIntervencionesTrabajos")
                        .HasForeignKey("IdOperario")
                        .HasConstraintName("FK_GMAO_ElemIntervencionesTrabajos_GMAO_Operarios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElemPertenencia", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "IdHijoNavigation")
                        .WithMany("GMAO_ElemPertenenciaIdHijoNavigation")
                        .HasForeignKey("IdHijo")
                        .HasConstraintName("FK_GMAO_ElemPertenencia_Hijo")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "IdPadreNavigation")
                        .WithMany("GMAO_ElemPertenenciaIdPadreNavigation")
                        .HasForeignKey("IdPadre")
                        .HasConstraintName("FK_GMAO_ElemPertenencia_Padre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElemStocks", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_ComprasLineas", "IdCompraLineaNavigation")
                        .WithMany("GMAO_ElemStocks")
                        .HasForeignKey("IdCompraLinea")
                        .HasConstraintName("FK_GMAO_ElemStocks_GMAO_ComprasLineas");

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_MarcasModelos", "IdModeloNavigation")
                        .WithMany("GMAO_ElemStocks")
                        .HasForeignKey("IdModelo")
                        .HasConstraintName("FK_GMAO_ElemStocks_GMAO_MarcasModelo");

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Proveedores", "IdProveedorNavigation")
                        .WithMany("GMAO_ElemStocks")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK_GMAO_ElemStocks_GMAO_Proveedores")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "idElementoNavigation")
                        .WithMany("GMAO_ElemStocks")
                        .HasForeignKey("idElemento")
                        .HasConstraintName("FK_GMAO_ElemStocks_GMAO_Elementos")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElementReviewSettings", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "Element")
                        .WithOne("GMAO_ElementReviewSettings")
                        .HasForeignKey("VMES.Database.Vmes.Models.GMAO_ElementReviewSettings", "ElementId")
                        .HasConstraintName("FK__GMAO_Elem__Eleme__7D8391DF")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_Elementos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Electrovalvula", "Electrovalvula")
                        .WithMany("GMAO_Elementos")
                        .HasForeignKey("ElectrovalvulaId")
                        .HasConstraintName("FK__GMAO_Elem__Elect__75E27017");

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "ElementoPadre")
                        .WithMany("InverseElementoPadre")
                        .HasForeignKey("ElementoPadreId")
                        .HasConstraintName("FK__GMAO_Elem__Eleme__74EE4BDE");

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_MarcasModelos", "Modelo")
                        .WithMany("GMAO_Elementos")
                        .HasForeignKey("ModeloId")
                        .HasConstraintName("FK_GMAO_Elementos_MarcasModelos");

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_ElementosTipos", "TipoNavigation")
                        .WithMany("GMAO_Elementos")
                        .HasForeignKey("Tipo")
                        .HasConstraintName("FK_GMAO_Elementos_GMAO_ElementosTipos");

                    b.HasOne("VMES.Database.Vmes.Models.Motor", "idMotorNavigation")
                        .WithMany("GMAO_Elementos")
                        .HasForeignKey("idMotor")
                        .HasConstraintName("FK_GMAO_Elementos_Motores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElementosTipos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Proveedores", "ProveedorHabitualNavigation")
                        .WithMany("GMAO_ElementosTipos")
                        .HasForeignKey("ProveedorHabitual")
                        .HasConstraintName("FK_GMAO_ElementosTipos_GMAO_Proveedores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ElementosTiposModelos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_MarcasModelos", "idModeloNavigation")
                        .WithMany("GMAO_ElementosTiposModelos")
                        .HasForeignKey("idModelo")
                        .HasConstraintName("FK_GMAO_ElementosTiposModelos_GMAO_MarcasModelos")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_ElementosTipos", "idTipoNavigation")
                        .WithMany("GMAO_ElementosTiposModelos")
                        .HasForeignKey("idTipo")
                        .HasConstraintName("FK_GMAO_ElementosTiposModelos_GMAO_ElementosTipos")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_HistStocksYElementos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "idElementoNavigation")
                        .WithMany("GMAO_HistStocksYElementos")
                        .HasForeignKey("idElemento")
                        .HasConstraintName("FK_GMAO_HistStocksYElementos_GMAO_Elementos");

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_ElemStocks", "idStockNavigation")
                        .WithMany("GMAO_HistStocksYElementos")
                        .HasForeignKey("idStock")
                        .HasConstraintName("FK_GMAO_HistStocksYElementos_GMAO_ElemStocks");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_MarcasModelos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Marcas", "idMarcaNavigation")
                        .WithMany("GMAO_MarcasModelos")
                        .HasForeignKey("idMarca")
                        .HasConstraintName("FK_GMAO_MarcasModelos_GMAO_Marcas")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ParadasConfiguracionModulos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "idModuloNavigation")
                        .WithMany("GMAO_ParadasConfiguracionModulos")
                        .HasForeignKey("idModulo")
                        .HasConstraintName("FK_GMAO_ParadasConfiguracionModulos_Modulos")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_ParadasConfiguracion", "idParadaConfiguracionNavigation")
                        .WithMany("GMAO_ParadasConfiguracionModulos")
                        .HasForeignKey("idParadaConfiguracion")
                        .HasConstraintName("FK_GMAO_ParadasConfiguracionModulos_GMAO_ParadasConfiguracion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_ParadasConfiguracionTareas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "idElementoNavigation")
                        .WithMany("GMAO_ParadasConfiguracionTareas")
                        .HasForeignKey("idElemento")
                        .HasConstraintName("FK_GMAO_ParadasConfiguracionTareas_GMAO_Elementos");

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Operarios", "idOperarioNavigation")
                        .WithMany("GMAO_ParadasConfiguracionTareas")
                        .HasForeignKey("idOperario")
                        .HasConstraintName("FK_GMAO_ParadasConfiguracionTareas_GMAO_Operarios");

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_ParadasConfiguracion", "idParadaConfiguracionNavigation")
                        .WithMany("GMAO_ParadasConfiguracionTareas")
                        .HasForeignKey("idParadaConfiguracion")
                        .HasConstraintName("FK_GMAO_ParadasConfiguracionTareas_GMAO_ParadasConfiguracion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_SolicitudOrdenTrabajo", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Usuarios", "CreadaPor")
                        .WithMany("GMAO_SolicitudOrdenTrabajoCreadaPor")
                        .HasForeignKey("CreadaPorId")
                        .HasConstraintName("FK_GMAO_SolicitudOrdenTrabajo_CreadaPor")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "Elemento")
                        .WithMany("GMAO_SolicitudOrdenTrabajo")
                        .HasForeignKey("ElementoId")
                        .HasConstraintName("FK_GMAO_SolicitudOrdenTrabajo_Elemento")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Usuarios", "GestionadaPor")
                        .WithMany("GMAO_SolicitudOrdenTrabajoGestionadaPor")
                        .HasForeignKey("GestionadaPorId")
                        .HasConstraintName("FK_GMAO_SolicitudOrdenTrabajo_GestionadaPor");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GMAO_WarehouseStocks", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Elementos", "Element")
                        .WithMany("GMAO_WarehouseStocks")
                        .HasForeignKey("ElementId")
                        .HasConstraintName("FK__GMAO_Ware__Eleme__1837881B")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_MarcasModelos", "Model")
                        .WithMany("GMAO_WarehouseStocks")
                        .HasForeignKey("ModelId")
                        .HasConstraintName("FK__GMAO_Ware__Model__174363E2")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.GMAO_Warehouses", "Warehouse")
                        .WithMany("GMAO_WarehouseStocks")
                        .HasForeignKey("WarehouseId")
                        .HasConstraintName("FK__GMAO_Ware__Wareh__192BAC54")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Gateway", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Tenant", "Tenant")
                        .WithMany("Gateways")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.GruposIncompatibilidadesLineas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GruposIncompatibilidades", "IdGrupoNavigation")
                        .WithMany("GruposIncompatibilidadesLineas")
                        .HasForeignKey("IdGrupo")
                        .HasConstraintName("FK_GruposIncompatibilidadesLineas_GruposIncompatibilidades")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "IdProductoNavigation")
                        .WithMany("GruposIncompatibilidadesLineas")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_GruposIncompatibilidadesLineas_Productos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Incompatibilidades", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Formulas", "FormulaNavigation")
                        .WithMany("Incompatibilidades")
                        .HasForeignKey("Formula")
                        .HasConstraintName("FK_Incompatibilidades_Formulas")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("Incompatibilidades")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_Incompatibilidades_Productos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Indicadores", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Basculas", "IdBasculaNavigation")
                        .WithMany("Indicadores")
                        .HasForeignKey("IdBascula")
                        .HasConstraintName("FK_Indicadores_Basculas");

                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "IdMedidorNavigation")
                        .WithMany("Indicadores")
                        .HasForeignKey("IdMedidor")
                        .HasConstraintName("FK_Indicadores_Medidores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.InformesLib", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.InformesLibCategorias", "IdCategoriaNavigation")
                        .WithMany("InformesLib")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK_InformesLib_InformesLibCategorias")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.InformesLib", "IdInformeBaseNavigation")
                        .WithMany("InverseIdInformeBaseNavigation")
                        .HasForeignKey("IdInformeBase")
                        .HasConstraintName("FK_InformesLib_InformesLib");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.InformesLibUsuarios", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.InformesLib", "IdInformeNavigation")
                        .WithMany("InformesLibUsuarios")
                        .HasForeignKey("IdInforme")
                        .HasConstraintName("FK_InformesLibUsuarios_InformesLib")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Usuarios", "IdUsuarioNavigation")
                        .WithMany("InformesLibUsuarios")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_InformesLibUsuarios_Usuarios")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.LineaVentaLineaSalida", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.SalidasLinias", "idLineaSalidaNavigation")
                        .WithMany("LineaVentaLineaSalida")
                        .HasForeignKey("idLineaSalida")
                        .HasConstraintName("FK_LineaVentaLineaSalida_SalidasLinias")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.VentasLinias", "idLineaVentaNavigation")
                        .WithMany("LineaVentaLineaSalida")
                        .HasForeignKey("idLineaVenta")
                        .HasConstraintName("FK_LineaVentaLineaSalida_VentasLinias")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.LineasCompra", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Compras", "CompraNavigation")
                        .WithMany("LineasCompra")
                        .HasForeignKey("Compra")
                        .HasConstraintName("FK_LineasCompra_Compras")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Envases", "EnvaseNavigation")
                        .WithMany("LineasCompra")
                        .HasForeignKey("Envase")
                        .HasConstraintName("FK_LineasCompra_Envases");

                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "FormatoNavigation")
                        .WithMany("LineasCompra")
                        .HasForeignKey("Formato")
                        .HasConstraintName("FK_LineasCompra_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.Contratos", "IdContratoNavigation")
                        .WithMany("LineasCompra")
                        .HasForeignKey("IdContrato")
                        .HasConstraintName("FK_LineasCompra_Contratos");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("LineasCompra")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_LineasCompra_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("LineasCompra")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_LineasCompra_Unidades");

                    b.HasOne("VMES.Database.Vmes.Models.EntradasLineas", "idLineaEntradaNavigation")
                        .WithMany("LineasCompra")
                        .HasForeignKey("idLineaEntrada")
                        .HasConstraintName("FK_LineasCompra_EntradasLineas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.LogMovimientosStocks", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "IdLoteNavigation")
                        .WithMany("LogMovimientosStocks")
                        .HasForeignKey("IdLote")
                        .HasConstraintName("FK_LogMovimientosStocks_Lotes");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "IdProductoNavigation")
                        .WithMany("LogMovimientosStocks")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_LogMovimientosStocks_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.Stocks", "IdStockNavigation")
                        .WithMany("LogMovimientosStocks")
                        .HasForeignKey("IdStock")
                        .HasConstraintName("FK_LogMovimientosStocks_Stocks")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "IdUbicacionNavigation")
                        .WithMany("LogMovimientosStocks")
                        .HasForeignKey("IdUbicacion")
                        .HasConstraintName("FK_LogMovimientosStocks_Ubicaciones")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "MedidorNavigation")
                        .WithMany("LogMovimientosStocks")
                        .HasForeignKey("Medidor")
                        .HasConstraintName("FK_LogMovimientosStocks_Medidores");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "ModuloNavigation")
                        .WithMany("LogMovimientosStocks")
                        .HasForeignKey("Modulo")
                        .HasConstraintName("FK_LogMovimientosStocks_Modulos")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Usuarios", "OperarioNavigation")
                        .WithMany("LogMovimientosStocks")
                        .HasForeignKey("Operario")
                        .HasConstraintName("FK_LogMovimientosStocks_Usuarios")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "idOrdenNavigation")
                        .WithMany("LogMovimientosStocks")
                        .HasForeignKey("idOrden")
                        .HasConstraintName("FK_LogMovimientosStocks_Ordenes")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Lotes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "FormatoNavigation")
                        .WithMany("Lotes")
                        .HasForeignKey("Formato")
                        .HasConstraintName("FK_Lotes_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.Proveedores", "IdProveedorNavigation")
                        .WithMany("Lotes")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK_Lotes_Proveedores");

                    b.HasOne("VMES.Database.Vmes.Models.Medicaciones", "MedicacionNavigation")
                        .WithMany("Lotes")
                        .HasForeignKey("Medicacion")
                        .HasConstraintName("FK_Lotes_Medicaciones")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("Lotes")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_Lotes_Productos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.LotesMezclados", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "idLoteNuevoNavigation")
                        .WithMany("LotesMezcladosidLoteNuevoNavigation")
                        .HasForeignKey("idLoteNuevo")
                        .HasConstraintName("FK_LotesMezclados_LotesNuevo")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "idLoteOrigenNavigation")
                        .WithMany("LotesMezcladosidLoteOrigenNavigation")
                        .HasForeignKey("idLoteOrigen")
                        .HasConstraintName("FK_LotesMezclados_LotesOrigen");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Maquinas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Sesiones", "SesionNavigation")
                        .WithMany("MaquinasSesionNavigation")
                        .HasForeignKey("Sesion")
                        .HasConstraintName("FK_Maquinas_Sesiones")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Sesiones", "SesionNotificacionNavigation")
                        .WithMany("MaquinasSesionNotificacionNavigation")
                        .HasForeignKey("SesionNotificacion")
                        .HasConstraintName("FK_Maquinas_Sesiones1");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Medicaciones", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Afecciones", "AfeccionNavigation")
                        .WithMany("Medicaciones")
                        .HasForeignKey("Afeccion")
                        .HasConstraintName("FK_Medicaciones_Afecciones");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "idProductoNavigation")
                        .WithMany("Medicaciones")
                        .HasForeignKey("idProducto")
                        .HasConstraintName("FK_Medicaciones_Productos")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.MedicacionesIngredientes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Medicaciones", "MedicacionNavigation")
                        .WithMany("MedicacionesIngredientes")
                        .HasForeignKey("Medicacion")
                        .HasConstraintName("FK_MedicacionesIngredientes_Medicaciones")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("MedicacionesIngredientes")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_MedicacionesIngredientes_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("MedicacionesIngredientes")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_MedicacionesIngredientes_Unidades");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Medidor", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OEEEstadosTipo", "EstadoForzadoNavigation")
                        .WithMany("Medidores")
                        .HasForeignKey("EstadoForzado")
                        .HasConstraintName("FK_Medidores_OEEEstadosTipo");

                    b.HasOne("VMES.Database.Vmes.Models.FamiliasMedidor", "FamiliaMedidorNavigation")
                        .WithMany("Medidores")
                        .HasForeignKey("FamiliaMedidor")
                        .HasConstraintName("FK_Medidores_FamiliasMedidor");

                    b.HasOne("VMES.Database.Vmes.Models.Basculas", "IdBasculaNavigation")
                        .WithMany("Medidores")
                        .HasForeignKey("IdBascula")
                        .HasConstraintName("FK_Medidores_Basculas")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "ModuloNavigation")
                        .WithMany("Medidores")
                        .HasForeignKey("ModuloId")
                        .HasConstraintName("FK_Medidores_Modulos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.OperCabPlantillas", "idPlantillaOcultaNavigation")
                        .WithMany("Medidores")
                        .HasForeignKey("idPlantillaOculta")
                        .HasConstraintName("FK_Medidores_OperCabPlantillas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.MedidoresDosificaciones", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "idMedidorNavigation")
                        .WithMany("MedidoresDosificaciones")
                        .HasForeignKey("idMedidor")
                        .HasConstraintName("FK_MedidoresDosificaciones_Medidores")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Origenes", "idOrigenNavigation")
                        .WithMany("MedidoresDosificaciones")
                        .HasForeignKey("idOrigen")
                        .HasConstraintName("FK_MedidoresDosificaciones_Origenes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "idProductoNavigation")
                        .WithMany("MedidoresDosificaciones")
                        .HasForeignKey("idProducto")
                        .HasConstraintName("FK_MedidoresDosificaciones_Productos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ModuloEstadoComunicaciones", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "Modulo")
                        .WithOne("ModuloEstadoComunicaciones")
                        .HasForeignKey("VMES.Database.Vmes.Models.ModuloEstadoComunicaciones", "ModuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Modulos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Departamentos", "DepartamentoNavigation")
                        .WithMany("Modulos")
                        .HasForeignKey("Departamento")
                        .HasConstraintName("FK_Modulos_Departamentos");

                    b.HasOne("VMES.Database.Vmes.Models.OEEEstadosTipo", "EstadoForzadoNavigation")
                        .WithMany("Modulos")
                        .HasForeignKey("EstadoForzado")
                        .HasConstraintName("FK_Modulos_OEEEstadosTipo");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "ModuloAsociadoOrdenes1Navigation")
                        .WithMany("InverseModuloAsociadoOrdenes1Navigation")
                        .HasForeignKey("ModuloAsociadoOrdenes1")
                        .HasConstraintName("FK_Modulos_ModulosAsociadoOrden1");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "ModuloAsociadoOrdenes2Navigation")
                        .WithMany("InverseModuloAsociadoOrdenes2Navigation")
                        .HasForeignKey("ModuloAsociadoOrdenes2")
                        .HasConstraintName("FK_Modulos_ModulosAsociadoOrden2");

                    b.HasOne("VMES.Database.Vmes.Models.OpcConfig", "OpcConfig")
                        .WithMany("Modulos")
                        .HasForeignKey("OpcConfigId")
                        .HasConstraintName("FK_Modulos_OpcConfig")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "PLCOrdenNumActualNavigation")
                        .WithMany("Modulos")
                        .HasForeignKey("PLCOrdenNumActual")
                        .HasConstraintName("FK_Modulos_Ordenes");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProdFinalDefectoNavigation")
                        .WithMany("Modulos")
                        .HasForeignKey("ProdFinalDefecto")
                        .HasConstraintName("FK_Modulos_ProdFinal");

                    b.HasOne("VMES.Database.Vmes.Models.UsuariosRoles", "RolBaseNavigation")
                        .WithMany("Modulos")
                        .HasForeignKey("RolBase")
                        .HasConstraintName("FK_Modulos_UsuariosRoles")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.OperCabPlantillas", "idPlantillaBaseNavigation")
                        .WithMany("ModulosidPlantillaBaseNavigation")
                        .HasForeignKey("idPlantillaBase")
                        .HasConstraintName("FK_Modulos_OperCabPlantillas");

                    b.HasOne("VMES.Database.Vmes.Models.OperCabPlantillas", "idPlantillaLimpiezaNavigation")
                        .WithMany("ModulosidPlantillaLimpiezaNavigation")
                        .HasForeignKey("idPlantillaLimpieza")
                        .HasConstraintName("FK_Modulos_OperCabPlantillasLimpieza")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ModulosAscendentes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "AscendenteNavigation")
                        .WithMany("ModulosAscendentes")
                        .HasForeignKey("Ascendente")
                        .HasConstraintName("FK_ModulosAscendentes_Modulos");

                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "MedidorNavigation")
                        .WithMany("ModulosAscendentes")
                        .HasForeignKey("Medidor")
                        .HasConstraintName("FK_ModulosAscendentes_Medidores")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ModulosIncompatibilidades", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "ModuloBaseNavigation")
                        .WithMany("ModulosIncompatibilidadesModuloBaseNavigation")
                        .HasForeignKey("ModuloBase")
                        .HasConstraintName("FK_ModulosIncompatibilidadesBase_ModulosBase");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "ModuloRelacionadoNavigation")
                        .WithMany("ModulosIncompatibilidadesModuloRelacionadoNavigation")
                        .HasForeignKey("ModuloRelacionado")
                        .HasConstraintName("FK_ModulosIncompatibilidadesRelacionado_ModulosRelacionado");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ModulosMotores", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "Modulo")
                        .WithMany("ModulosMotores")
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Motor", "Motor")
                        .WithMany("ModulosMotores")
                        .HasForeignKey("MotorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ModulosTagsScada", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "ModuloNavigation")
                        .WithMany("ModulosTagsScada")
                        .HasForeignKey("Modulo")
                        .HasConstraintName("FK_ModulosTagsScada_Modulos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Motor", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OpcConfig", "OpcConfig")
                        .WithMany("Motores")
                        .HasForeignKey("OpcConfigId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.MotoresGruposRelacion", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.MotoresGrupos", "idGrupoNavigation")
                        .WithMany("MotoresGruposRelacion")
                        .HasForeignKey("idGrupo")
                        .HasConstraintName("FK_MotoresGruposRelacion_MotoresGrupos")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Motor", "idMotorNavigation")
                        .WithMany("MotoresGruposRelacion")
                        .HasForeignKey("idMotor")
                        .HasConstraintName("FK_MotoresGruposRelacion_Motores")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.MotoresHistorico", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Motor", "Motor")
                        .WithMany("MotoresHistorico")
                        .HasForeignKey("MotorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.MultiDosificaciones", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Dosificaciones", "idDosificacionNavigation")
                        .WithMany("MultiDosificaciones")
                        .HasForeignKey("idDosificacion")
                        .HasConstraintName("FK_MultiDosificaciones_Dosificaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "idUbicacionNavigation")
                        .WithMany("MultiDosificaciones")
                        .HasForeignKey("idUbicacion")
                        .HasConstraintName("FK_MultiDosificaciones_Ubicaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.NetAlarmas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "IdDestinoNavigation")
                        .WithMany("NetAlarmasIdDestinoNavigation")
                        .HasForeignKey("IdDestino")
                        .HasConstraintName("FK_NetAlarmas_Ubicaciones2");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "IdDestinoPropuestoNavigation")
                        .WithMany("NetAlarmasIdDestinoPropuestoNavigation")
                        .HasForeignKey("IdDestinoPropuesto")
                        .HasConstraintName("FK_NetAlarmas_Ubicaciones4");

                    b.HasOne("VMES.Database.Vmes.Models.NetAlarmasTipos", "IdErrorNavigation")
                        .WithMany("NetAlarmas")
                        .HasForeignKey("IdError")
                        .HasConstraintName("FK_NetAlarmas_NetAlarmasTipos")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.SeccionesGrupos", "IdGrupoNavigation")
                        .WithMany("NetAlarmas")
                        .HasForeignKey("IdGrupo")
                        .HasConstraintName("FK_NetAlarmas_SeccionesGrupos");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "IdModuloNavigation")
                        .WithMany("NetAlarmas")
                        .HasForeignKey("IdModulo")
                        .HasConstraintName("FK_NetAlarmas_Modulos")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "IdOrigenNavigation")
                        .WithMany("NetAlarmasIdOrigenNavigation")
                        .HasForeignKey("IdOrigen")
                        .HasConstraintName("FK_NetAlarmas_Ubicaciones1");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "IdOrigenPropuestoNavigation")
                        .WithMany("NetAlarmasIdOrigenPropuestoNavigation")
                        .HasForeignKey("IdOrigenPropuesto")
                        .HasConstraintName("FK_NetAlarmas_Ubicaciones3");

                    b.HasOne("VMES.Database.Vmes.Models.Secciones", "IdSeccionNavigation")
                        .WithMany("NetAlarmas")
                        .HasForeignKey("IdSeccion")
                        .HasConstraintName("FK_NetAlarmas_Secciones");

                    b.HasOne("VMES.Database.Vmes.Models.OpcConfig", "OpcConfig")
                        .WithMany("NetAlarmas")
                        .HasForeignKey("OpcConfigId")
                        .HasConstraintName("FK__NetAlarma__OpcCo__5AF96FB1");

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "RespIdLoteNavigation")
                        .WithMany("NetAlarmas")
                        .HasForeignKey("RespIdLote")
                        .HasConstraintName("FK_NetAlarmas_Lotes");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "RespIdProductoNavigation")
                        .WithMany("NetAlarmas")
                        .HasForeignKey("RespIdProducto")
                        .HasConstraintName("FK_NetAlarmas_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.NetAlarmasRespuestas", "RespuestaNavigation")
                        .WithMany("NetAlarmas")
                        .HasForeignKey("Respuesta")
                        .HasConstraintName("FK_NetAlarmas_NetAlarmasRespuestas")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Dosificaciones", "idDosificacionNavigation")
                        .WithMany("NetAlarmas")
                        .HasForeignKey("idDosificacion")
                        .HasConstraintName("FK_NetAlarmas_Dosificaciones")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "idMedidorNavigation")
                        .WithMany("NetAlarmas")
                        .HasForeignKey("idMedidor")
                        .HasConstraintName("FK_NetAlarmas_Medidores");

                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "idOrdenNavigation")
                        .WithMany("NetAlarmas")
                        .HasForeignKey("idOrden")
                        .HasConstraintName("FK_NetAlarmas_Ordenes")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "idUbicacionNavigation")
                        .WithMany("NetAlarmasidUbicacionNavigation")
                        .HasForeignKey("idUbicacion")
                        .HasConstraintName("FK_NetAlarmas_Ubicaciones")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.NetAlarmasAutomaticas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.NetAlarmasTipos", "IdAlarmasTipoNavigation")
                        .WithMany("NetAlarmasAutomaticas")
                        .HasForeignKey("IdAlarmasTipo")
                        .HasConstraintName("FK_NetAlarmasAutomaticas_NetAlarmasTipos")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "IdMedidorNavigation")
                        .WithMany("NetAlarmasAutomaticas")
                        .HasForeignKey("IdMedidor")
                        .HasConstraintName("FK_NetAlarmasAutomaticas_Medidores");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "IdModuloNavigation")
                        .WithMany("NetAlarmasAutomaticas")
                        .HasForeignKey("IdModulo")
                        .HasConstraintName("FK_NetAlarmasAutomaticas_Modulos")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.NetAlarmasTiposRespuestas", "IdNetAlarmasRespuestaNavigation")
                        .WithMany("NetAlarmasAutomaticas")
                        .HasForeignKey("IdNetAlarmasRespuesta")
                        .HasConstraintName("FK_NetAlarmasAutomaticas_NetAlarmasTiposRespuestas");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "IdUbicacionNavigation")
                        .WithMany("NetAlarmasAutomaticas")
                        .HasForeignKey("IdUbicacion")
                        .HasConstraintName("FK_NetAlarmasAutomaticas_Ubicaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.NetAlarmasAutomaticasOrdenUbicaciones", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Dosificaciones", "IdDosificacionNavigation")
                        .WithMany("NetAlarmasAutomaticasOrdenUbicaciones")
                        .HasForeignKey("IdDosificacion")
                        .HasConstraintName("FK_NetAlarmasAutomaticasOrdenUbicaciones_Dosificaciones");

                    b.HasOne("VMES.Database.Vmes.Models.NetAlarmasAutomaticas", "IdNetAlarmaAutomaticaNavigation")
                        .WithMany("NetAlarmasAutomaticasOrdenUbicaciones")
                        .HasForeignKey("IdNetAlarmaAutomatica")
                        .HasConstraintName("FK_NetAlarmasAutomaticasOrdenUbicaciones_NetAlarmasAutomaticas")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "IdOrdenNavigation")
                        .WithMany("NetAlarmasAutomaticasOrdenUbicaciones")
                        .HasForeignKey("IdOrden")
                        .HasConstraintName("FK_NetAlarmasAutomaticasOrdenUbicaciones_Ordenes")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "IdUbicacionNavigation")
                        .WithMany("NetAlarmasAutomaticasOrdenUbicaciones")
                        .HasForeignKey("IdUbicacion")
                        .HasConstraintName("FK_NetAlarmasAutomaticasOrdenUbicaciones_Ubicaciones")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.NetAlarmasTipoRespuestaOrigen", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.NetAlarmasRespuestas", "NetAlarmasRespuesta")
                        .WithMany("NetAlarmasTiposRespuestasOrigenes")
                        .HasForeignKey("NetAlarmasRespuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.NetAlarmasTipos", "NetAlarmasTipo")
                        .WithMany("NetAlarmasTiposRespuestasOrigenes")
                        .HasForeignKey("NetAlarmasTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Origenes", "Origen")
                        .WithMany("NetAlarmasTiposRespuestasOrigenes")
                        .HasForeignKey("OrigenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.NetAlarmasTipos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.UsuariosRoles", "RolShowNavigation")
                        .WithMany("NetAlarmasTipos")
                        .HasForeignKey("RolShow")
                        .HasConstraintName("FK_NetAlarmasTipos_UsuariosRoles");

                    b.HasOne("VMES.Database.Vmes.Models.Usuarios", "UserShowNavigation")
                        .WithMany("NetAlarmasTipos")
                        .HasForeignKey("UserShow")
                        .HasConstraintName("FK_NetAlarmasTipos_Usuarios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.NetAlarmasTiposRespuestas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.NetAlarmasRespuestas", "idRespuestaNavigation")
                        .WithMany("NetAlarmasTiposRespuestas")
                        .HasForeignKey("idRespuesta")
                        .HasConstraintName("FK_NetAlarmasTiposRespuestas_NetAlarmasRespuestas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.NetAlarmasTipos", "idTipoNavigation")
                        .WithMany("NetAlarmasTiposRespuestas")
                        .HasForeignKey("idTipo")
                        .HasConstraintName("FK_NetAlarmasTiposRespuestas_NetAlarmasTipos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OEEEstados", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OEEEstadosTipo", "EstadoNavigation")
                        .WithMany("OEEEstados")
                        .HasForeignKey("Estado")
                        .HasConstraintName("FK_OEEEstados_OEEEstadosTipo");

                    b.HasOne("VMES.Database.Vmes.Models.NetAlarmas", "IdAlarmaActualNavigation")
                        .WithMany("OEEEstados")
                        .HasForeignKey("IdAlarmaActual")
                        .HasConstraintName("FK_OEEEstados_NetAlarmas");

                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "IdMedidorNavigation")
                        .WithMany("OEEEstados")
                        .HasForeignKey("IdMedidor")
                        .HasConstraintName("FK_OEEEstados_Medidores");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "IdModuloNavigation")
                        .WithMany("OEEEstados")
                        .HasForeignKey("IdModulo")
                        .HasConstraintName("FK_OEEEstados_Modulos");

                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "IdOrdenActualNavigation")
                        .WithMany("OEEEstados")
                        .HasForeignKey("IdOrdenActual")
                        .HasConstraintName("FK_OEEEstados_Ordenes");

                    b.HasOne("VMES.Database.Vmes.Models.Turnos", "IdTurnoNavigation")
                        .WithMany("OEEEstados")
                        .HasForeignKey("IdTurno")
                        .HasConstraintName("FK_OEEEstados_Turnos");

                    b.HasOne("VMES.Database.Vmes.Models.Usuarios", "Operario")
                        .WithMany("OEEEstados")
                        .HasForeignKey("OperarioId")
                        .HasConstraintName("FK_OEEEstados_Usuarios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OEEEstadosMedidores", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OEEEstadosTipo", "idEstadoTipoNavigation")
                        .WithMany("OEEEstadosMedidores")
                        .HasForeignKey("idEstadoTipo")
                        .HasConstraintName("FK_OEEEstadosMedidores_OEEEstadosTipo")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "idMedidorNavigation")
                        .WithMany("OEEEstadosMedidores")
                        .HasForeignKey("idMedidor")
                        .HasConstraintName("FK_OEEEstadosMedidores_Medidores")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OEEEstadosModulos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OEEEstadosTipo", "idEstadoTipoNavigation")
                        .WithMany("OEEEstadosModulos")
                        .HasForeignKey("idEstadoTipo")
                        .HasConstraintName("FK_OEEEstadosModulos_OEEEstadosTipo")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "idModuloNavigation")
                        .WithMany("OEEEstadosModulos")
                        .HasForeignKey("idModulo")
                        .HasConstraintName("FK_OEEEstadosModulos_Modulos")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OEEEstadosTipoLista", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OEEEstadosTipo", "IdEstadoTipoNavigation")
                        .WithMany("OEEEstadosTipoLista")
                        .HasForeignKey("IdEstadoTipo")
                        .HasConstraintName("FK_OEEEstadosTipoLista_OEEEstadosTipo")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OEEHorarios", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "idMedidorNavigation")
                        .WithMany("OEEHorarios")
                        .HasForeignKey("idMedidor")
                        .HasConstraintName("FK_OEEHorarios_Medidores");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "idModuloNavigation")
                        .WithMany("OEEHorarios")
                        .HasForeignKey("idModulo")
                        .HasConstraintName("FK_OEEHorarios_Modulos")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OpcConfig", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Gateway", "Gateway")
                        .WithMany("OpcConfig")
                        .HasForeignKey("GatewayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OpcionesRoles", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Opciones", "idClaveNavigation")
                        .WithMany("OpcionesRoles")
                        .HasForeignKey("idClave")
                        .HasConstraintName("FK_OpcionesRoles_Opciones")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.UsuariosRoles", "idRolNavigation")
                        .WithMany("OpcionesRoles")
                        .HasForeignKey("idRol")
                        .HasConstraintName("FK_OpcionesRoles_UsuariosRoles")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OpcionesUsuarios", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Opciones", "idClaveNavigation")
                        .WithMany("OpcionesUsuarios")
                        .HasForeignKey("idClave")
                        .HasConstraintName("FK_OpcionesUsuarios_Opciones")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Usuarios", "idUsuarioNavigation")
                        .WithMany("OpcionesUsuarios")
                        .HasForeignKey("idUsuario")
                        .HasConstraintName("FK_OpcionesUsuarios_Usuarios")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OperCabPlantillas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "IdModuloNavigation")
                        .WithMany("OperCabPlantillas")
                        .HasForeignKey("IdModulo")
                        .HasConstraintName("FK_OperCabPlantillas_Modulos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OperMotores", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "IdMedidorNavigation")
                        .WithMany("OperMotoresIdMedidorNavigation")
                        .HasForeignKey("IdMedidor")
                        .HasConstraintName("FK_OperMotores_Medidores");

                    b.HasOne("VMES.Database.Vmes.Models.OpcConfig", "OpcConfig")
                        .WithMany("OperMotores")
                        .HasForeignKey("OpcConfigId")
                        .HasConstraintName("FK__OperMotor__OpcCo__0307610B");

                    b.HasOne("VMES.Database.Vmes.Models.OperAcciones", "idAccionMotorNavigation")
                        .WithMany("OperMotores")
                        .HasForeignKey("idAccionMotor")
                        .HasConstraintName("FK_OperMotores_OperAcciones");

                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "idMedidorForzadoNavigation")
                        .WithMany("OperMotoresidMedidorForzadoNavigation")
                        .HasForeignKey("idMedidorForzado")
                        .HasConstraintName("FK_OperMotores_MedidoresForzado");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OperMotoresModulos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "IdMedidorNavigation")
                        .WithMany("OperMotoresModulos")
                        .HasForeignKey("IdMedidor")
                        .HasConstraintName("FK_OperMotoresModulos_Medidores");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "IdModuloNavigation")
                        .WithMany("OperMotoresModulos")
                        .HasForeignKey("IdModulo")
                        .HasConstraintName("FK_OperMotoresModulos_Modulos");

                    b.HasOne("VMES.Database.Vmes.Models.OperMotores", "IdOperMotorNavigation")
                        .WithMany("OperMotoresModulos")
                        .HasForeignKey("IdOperMotor")
                        .HasConstraintName("FK_OperMotoresModulos_OperMotores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OperPlantillas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OperAcciones", "IdOperAccionNavigation")
                        .WithMany("OperPlantillas")
                        .HasForeignKey("IdOperAccion")
                        .HasConstraintName("FK_OperPlantillas_OperAcciones")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.OperCabPlantillas", "IdOperCabPlantillasNavigation")
                        .WithMany("OperPlantillas")
                        .HasForeignKey("IdOperCabPlantillas")
                        .HasConstraintName("FK_OperPlantillas_OperCabPlantillas")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.OperMotores", "IdOperMotorNavigation")
                        .WithMany("OperPlantillas")
                        .HasForeignKey("IdOperMotor")
                        .HasConstraintName("FK_OperPlantillas_OperMotores")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "IdProductoNavigation")
                        .WithMany("OperPlantillas")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_OperPlantillas_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.TempControles", "IdTempControlNavigation")
                        .WithMany("OperPlantillas")
                        .HasForeignKey("IdTempControl")
                        .HasConstraintName("FK_OperPlantillas_TempControles")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "IdUbicacionNavigation")
                        .WithMany("OperPlantillas")
                        .HasForeignKey("IdUbicacion")
                        .HasConstraintName("FK_OperPlantillas_Ubicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "MedidorNavigation")
                        .WithMany("OperPlantillas")
                        .HasForeignKey("Medidor")
                        .HasConstraintName("FK_OperPlantillas_Medidores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Ordenes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Departamentos", "DepartamentoNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("Departamento")
                        .HasConstraintName("FK_Ordenes_Departamentos");

                    b.HasOne("VMES.Database.Vmes.Models.Entradas", "EntradaNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("Entrada")
                        .HasConstraintName("FK_Ordenes_Entradas");

                    b.HasOne("VMES.Database.Vmes.Models.Envases", "EnvaseOrigenNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("EnvaseOrigen")
                        .HasConstraintName("FK_Ordenes_Envases");

                    b.HasOne("VMES.Database.Vmes.Models.Formulas", "FormulaNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("Formula")
                        .HasConstraintName("FK_Ordenes_Formulas");

                    b.HasOne("VMES.Database.Vmes.Models.CabOrdenes", "IdCabNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdCab")
                        .HasConstraintName("FK_Ordenes_CabOrdenes");

                    b.HasOne("VMES.Database.Vmes.Models.Vehiculos", "IdVehiculoNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdVehiculo")
                        .HasConstraintName("FK_Ordenes_Vehiculos");

                    b.HasOne("VMES.Database.Vmes.Models.EntradasLineas", "LineaEntradaNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("LineaEntrada")
                        .HasConstraintName("FK_Ordenes_EntradasLineas");

                    b.HasOne("VMES.Database.Vmes.Models.SalidasLinias", "LineaSalidaNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("LineaSalida")
                        .HasConstraintName("FK_Ordenes_SalidasLinias");

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "LoteDestinoNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("LoteDestino")
                        .HasConstraintName("FK_Ordenes_Lotes");

                    b.HasOne("VMES.Database.Vmes.Models.Medicaciones", "MedicacionNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("Medicacion")
                        .HasConstraintName("FK_Ordenes_Medicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "ModuloNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("Modulo")
                        .HasConstraintName("FK_Ordenes_Modulos");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoDestinoNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("ProductoDestino")
                        .HasConstraintName("FK_Ordenes_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.Versiones", "VersionNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("Version")
                        .HasConstraintName("FK_Ordenes_Versiones")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.SalidasViajes", "ViajeSalidaNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("ViajeSalida")
                        .HasConstraintName("FK_Ordenes_SalidasViajes");

                    b.HasOne("VMES.Database.Vmes.Models.Choferes", "idChoferNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("idChofer")
                        .HasConstraintName("FK_Ordenes_Choferes")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Tarjetas", "idTarjetaNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("idTarjeta")
                        .HasConstraintName("FK_Ordenes_Tarjetas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OrdenesAutoInicio", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "idOrdenNavigation")
                        .WithMany("OrdenesAutoInicioidOrdenNavigation")
                        .HasForeignKey("idOrden")
                        .HasConstraintName("FK_OrdenesAutoInicio_Ordenes")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "idOrdenObjetivoNavigation")
                        .WithMany("OrdenesAutoInicioidOrdenObjetivoNavigation")
                        .HasForeignKey("idOrdenObjetivo")
                        .HasConstraintName("FK_OrdenesAutoInicio_Ordenes1")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OrdenesDatosExtra", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "idNavigation")
                        .WithOne("OrdenesDatosExtra")
                        .HasForeignKey("VMES.Database.Vmes.Models.OrdenesDatosExtra", "id")
                        .HasConstraintName("FK_OrdenesDatosExtra_Ordenes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.OrdenesRelacion", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "idOrdenHijoNavigation")
                        .WithMany("OrdenesRelacionidOrdenHijoNavigation")
                        .HasForeignKey("idOrdenHijo")
                        .HasConstraintName("FK_OrdenesRelacion_Ordenes1");

                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "idOrdenPadreNavigation")
                        .WithMany("OrdenesRelacionidOrdenPadreNavigation")
                        .HasForeignKey("idOrdenPadre")
                        .HasConstraintName("FK_OrdenesRelacion_Ordenes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Origenes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "MedidorNavigation")
                        .WithMany("Origenes")
                        .HasForeignKey("Medidor")
                        .HasConstraintName("FK_Origenes_Medidores")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "UbicacionNavigation")
                        .WithMany("Origenes")
                        .HasForeignKey("Ubicacion")
                        .HasConstraintName("FK_Origenes_Ubicaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.PLCAddonsVars", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.PLCAddons", "idAddonNavigation")
                        .WithMany("PLCAddonsVars")
                        .HasForeignKey("idAddon")
                        .HasConstraintName("FK_PLCAddonsVars_PLCAddons")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Pistolas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "IdMedidorNavigation")
                        .WithMany("Pistolas")
                        .HasForeignKey("IdMedidor")
                        .HasConstraintName("FK_Pistolas_Medidores");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Productos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Afecciones", "AfeccionNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("Afeccion")
                        .HasConstraintName("FK_Productos_Afecciones")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "DestinoDefectoNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("DestinoDefecto")
                        .HasConstraintName("FK_Productos_Ubicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Envases", "EnvaseNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("Envase")
                        .HasConstraintName("FK_Productos_Envases");

                    b.HasOne("VMES.Database.Vmes.Models.Etiquetas", "EtiquetaControlNavigation")
                        .WithMany("ProductosEtiquetaControlNavigation")
                        .HasForeignKey("EtiquetaControl")
                        .HasConstraintName("FK_Productos_Etiquetas3");

                    b.HasOne("VMES.Database.Vmes.Models.Etiquetas", "EtiquetaEntradasNavigation")
                        .WithMany("ProductosEtiquetaEntradasNavigation")
                        .HasForeignKey("EtiquetaEntradas")
                        .HasConstraintName("FK_Productos_Etiquetas4");

                    b.HasOne("VMES.Database.Vmes.Models.Etiquetas", "EtiquetaGranelNavigation")
                        .WithMany("ProductosEtiquetaGranelNavigation")
                        .HasForeignKey("EtiquetaGranel")
                        .HasConstraintName("FK_Productos_Etiquetas");

                    b.HasOne("VMES.Database.Vmes.Models.Etiquetas", "EtiquetaMuestrasNavigation")
                        .WithMany("ProductosEtiquetaMuestrasNavigation")
                        .HasForeignKey("EtiquetaMuestras")
                        .HasConstraintName("FK_Productos_Etiquetas2");

                    b.HasOne("VMES.Database.Vmes.Models.Etiquetas", "EtiquetaSacosNavigation")
                        .WithMany("ProductosEtiquetaSacosNavigation")
                        .HasForeignKey("EtiquetaSacos")
                        .HasConstraintName("FK_Productos_Etiquetas1");

                    b.HasOne("VMES.Database.Vmes.Models.Familias", "FamiliaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("Familia")
                        .HasConstraintName("FK_Productos_Familias")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.FamiliasMedidor", "FamiliaMedidorNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("FamiliaMedidor")
                        .HasConstraintName("FK_Productos_FamiliasMedidor")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "FormatoNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("Formato")
                        .HasConstraintName("FK_Productos_Formatos")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "MedidorNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("Medidor")
                        .HasConstraintName("FK_Productos_Medidores");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "ModuloNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("Modulo")
                        .HasConstraintName("FK_Productos_Modulos")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.OperCabPlantillas", "PlantillaCabCargaPiqueraNavigation")
                        .WithMany("ProductosPlantillaCabCargaPiqueraNavigation")
                        .HasForeignKey("PlantillaCabCargaPiquera")
                        .HasConstraintName("FK_Productos_OperCabPlantillas");

                    b.HasOne("VMES.Database.Vmes.Models.OperCabPlantillas", "PlantillaCabCargaPiquera2Navigation")
                        .WithMany("ProductosPlantillaCabCargaPiquera2Navigation")
                        .HasForeignKey("PlantillaCabCargaPiquera2")
                        .HasConstraintName("FK_Productos_OperCabPlantillas3");

                    b.HasOne("VMES.Database.Vmes.Models.OperCabPlantillas", "PlantillaCabMolturacionNavigation")
                        .WithMany("ProductosPlantillaCabMolturacionNavigation")
                        .HasForeignKey("PlantillaCabMolturacion")
                        .HasConstraintName("FK_Productos_OperCabPlantillas7");

                    b.HasOne("VMES.Database.Vmes.Models.OperCabPlantillas", "PlantillaCabProduccionNavigation")
                        .WithMany("ProductosPlantillaCabProduccionNavigation")
                        .HasForeignKey("PlantillaCabProduccion")
                        .HasConstraintName("FK_Productos_OperCabPlantillas2");

                    b.HasOne("VMES.Database.Vmes.Models.OperCabPlantillas", "PlantillaCabProduccion2Navigation")
                        .WithMany("ProductosPlantillaCabProduccion2Navigation")
                        .HasForeignKey("PlantillaCabProduccion2")
                        .HasConstraintName("FK_Productos_OperCabPlantillas5");

                    b.HasOne("VMES.Database.Vmes.Models.OperCabPlantillas", "PlantillaCabProduccion3Navigation")
                        .WithMany("ProductosPlantillaCabProduccion3Navigation")
                        .HasForeignKey("PlantillaCabProduccion3")
                        .HasConstraintName("FK_Productos_OperCabPlantillas6");

                    b.HasOne("VMES.Database.Vmes.Models.OperCabPlantillas", "PlantillaCabSecaderoNavigation")
                        .WithMany("ProductosPlantillaCabSecaderoNavigation")
                        .HasForeignKey("PlantillaCabSecadero")
                        .HasConstraintName("FK_Productos_OperCabPlantillas4");

                    b.HasOne("VMES.Database.Vmes.Models.TiposIva", "TipoIvaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("TipoIva")
                        .HasConstraintName("FK_Productos_TiposIva")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_Productos_Unidades")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ProductosGruposIncompatibilidades", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.GruposIncompatibilidades", "IdGrupoIncompatibilidadNavigation")
                        .WithMany("ProductosGruposIncompatibilidades")
                        .HasForeignKey("IdGrupoIncompatibilidad")
                        .HasConstraintName("FK_ProductosGruposIncompatibilidades_GruposIncompatibilidades")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "IdProductoNavigation")
                        .WithMany("ProductosGruposIncompatibilidades")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_ProductosGruposIncompatibilidades_Productos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ProductosOperCabPlantillas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OperCabPlantillas", "IdOperCabPlantillaNavigation")
                        .WithMany("ProductosOperCabPlantillas")
                        .HasForeignKey("IdOperCabPlantilla")
                        .HasConstraintName("FK_ProductosOperCabPlantillas_OperCabPlantillas")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "IdProductoNavigation")
                        .WithMany("ProductosOperCabPlantillas")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_ProductosOperCabPlantillas_Productos")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Proveedores", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Paises", "PaisNavigation")
                        .WithMany("Proveedores")
                        .HasForeignKey("Pais")
                        .HasConstraintName("FK_Proveedores_Paises");

                    b.HasOne("VMES.Database.Vmes.Models.Provincias", "ProvinciaNavigation")
                        .WithMany("Proveedores")
                        .HasForeignKey("Provincia")
                        .HasConstraintName("FK_Proveedores_Provincias");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.ProveedoresOrigenes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Paises", "PaisNavigation")
                        .WithMany("ProveedoresOrigenes")
                        .HasForeignKey("Pais")
                        .HasConstraintName("FK_ProveedoresOrigenes_Paises");

                    b.HasOne("VMES.Database.Vmes.Models.Proveedores", "ProveedorNavigation")
                        .WithMany("ProveedoresOrigenes")
                        .HasForeignKey("Proveedor")
                        .HasConstraintName("FK_ProveedoresOrigenes_Proveedores")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Provincias", "ProvinciaNavigation")
                        .WithMany("ProveedoresOrigenes")
                        .HasForeignKey("Provincia")
                        .HasConstraintName("FK_ProveedoresOrigenes_Provincias");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Provincias", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Paises", "PaisNavigation")
                        .WithMany("Provincias")
                        .HasForeignKey("Pais")
                        .HasConstraintName("FK_Provincias_Paises");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.PuntosDescarga", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Domicilios", "idDomicilioNavigation")
                        .WithMany("PuntosDescarga")
                        .HasForeignKey("idDomicilio")
                        .HasConstraintName("FK_PuntosDescarga_Domicilios")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Recetas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Afecciones", "idAfeccionNavigation")
                        .WithMany("Recetas")
                        .HasForeignKey("idAfeccion")
                        .HasConstraintName("FK_Recetas_Afecciones")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Clientes", "idClienteNavigation")
                        .WithMany("Recetas")
                        .HasForeignKey("idCliente")
                        .HasConstraintName("FK_Recetas_Clientes")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Domicilios", "idDomicilioNavigation")
                        .WithMany("Recetas")
                        .HasForeignKey("idDomicilio")
                        .HasConstraintName("FK_Recetas_Domicilios");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "idProductoNavigation")
                        .WithMany("Recetas")
                        .HasForeignKey("idProducto")
                        .HasConstraintName("FK_Recetas_Productos")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.SalidasLinias", "idSalidaLineaNavigation")
                        .WithMany("Recetas")
                        .HasForeignKey("idSalidaLinea")
                        .HasConstraintName("FK_Recetas_SalidasLinias")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Series", "idSerieNavigation")
                        .WithMany("Recetas")
                        .HasForeignKey("idSerie")
                        .HasConstraintName("FK_Recetas_Series");

                    b.HasOne("VMES.Database.Vmes.Models.Veterinarios", "idVeterinarioNavigation")
                        .WithMany("Recetas")
                        .HasForeignKey("idVeterinario")
                        .HasConstraintName("FK_Recetas_Veterinarios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.RecetasLineas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Medicaciones", "idMedicamentoNavigation")
                        .WithMany("RecetasLineas")
                        .HasForeignKey("idMedicamento")
                        .HasConstraintName("FK_RecetasLineas_Medicaciones")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Recetas", "idRecetaNavigation")
                        .WithMany("RecetasLineas")
                        .HasForeignKey("idReceta")
                        .HasConstraintName("FK_RecetasLineas_Recetas")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Regularizaciones", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Envases", "EnvaseNavigation")
                        .WithMany("Regularizaciones")
                        .HasForeignKey("Envase")
                        .HasConstraintName("FK_Regularizaciones_Envases");

                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "FormatoNavigation")
                        .WithMany("Regularizaciones")
                        .HasForeignKey("Formato")
                        .HasConstraintName("FK_Regularizaciones_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "LoteNavigation")
                        .WithMany("Regularizaciones")
                        .HasForeignKey("Lote")
                        .HasConstraintName("FK_Regularizaciones_Lotes");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("Regularizaciones")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_Regularizaciones_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.Series", "SerieNavigation")
                        .WithMany("Regularizaciones")
                        .HasForeignKey("Serie")
                        .HasConstraintName("FK_Regularizaciones_Series");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "UbicacionNavigation")
                        .WithMany("Regularizaciones")
                        .HasForeignKey("Ubicacion")
                        .HasConstraintName("FK_Regularizaciones_Ubicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("Regularizaciones")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_Regularizaciones_Unidades");

                    b.HasOne("VMES.Database.Vmes.Models.Usuarios", "UsuarioNavigation")
                        .WithMany("Regularizaciones")
                        .HasForeignKey("Usuario")
                        .HasConstraintName("FK_Regularizaciones_Usuarios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Resultados", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "FormatoNavigation")
                        .WithMany("Resultados")
                        .HasForeignKey("Formato")
                        .HasConstraintName("FK_Resultados_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "LoteNavigation")
                        .WithMany("Resultados")
                        .HasForeignKey("Lote")
                        .HasConstraintName("FK_Resultados_Lotes");

                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "MedidorNavigation")
                        .WithMany("ResultadosNavigation")
                        .HasForeignKey("Medidor")
                        .HasConstraintName("FK_Resultados_Medidores");

                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "OrdenNavigation")
                        .WithMany("Resultados")
                        .HasForeignKey("Orden")
                        .HasConstraintName("FK_Resultados_Ordenes")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("Resultados")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_Resultados_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "UbicacionNavigation")
                        .WithMany("Resultados")
                        .HasForeignKey("Ubicacion")
                        .HasConstraintName("FK_Resultados_Ubicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("Resultados")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_Resultados_Unidades");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Salidas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Departamentos", "IdDepartamentoNavigation")
                        .WithMany("Salidas")
                        .HasForeignKey("IdDepartamento")
                        .HasConstraintName("FK_Salidas_Departamentos");

                    b.HasOne("VMES.Database.Vmes.Models.Clientes", "idClienteNavigation")
                        .WithMany("Salidas")
                        .HasForeignKey("idCliente")
                        .HasConstraintName("FK_Salidas_Clientes");

                    b.HasOne("VMES.Database.Vmes.Models.Series", "idSerieNavigation")
                        .WithMany("Salidas")
                        .HasForeignKey("idSerie")
                        .HasConstraintName("FK_Salidas_Series")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.SalidasViajes", "idViajeNavigation")
                        .WithMany("Salidas")
                        .HasForeignKey("idViaje")
                        .HasConstraintName("FK_Salidas_SalidasViajes")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SalidasAlbaranes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Series", "SerieNavigation")
                        .WithMany("SalidasAlbaranes")
                        .HasForeignKey("Serie")
                        .HasConstraintName("FK_SalidasAlbaranes_Series");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SalidasLinias", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "Origen1Navigation")
                        .WithMany("SalidasLiniasOrigen1Navigation")
                        .HasForeignKey("Origen1")
                        .HasConstraintName("FK_SalidasLinias_Ubicaciones1");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "Origen2Navigation")
                        .WithMany("SalidasLiniasOrigen2Navigation")
                        .HasForeignKey("Origen2")
                        .HasConstraintName("FK_SalidasLinias_Ubicaciones2");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "Origen3Navigation")
                        .WithMany("SalidasLiniasOrigen3Navigation")
                        .HasForeignKey("Origen3")
                        .HasConstraintName("FK_SalidasLinias_Ubicaciones3");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "Origen4Navigation")
                        .WithMany("SalidasLiniasOrigen4Navigation")
                        .HasForeignKey("Origen4")
                        .HasConstraintName("FK_SalidasLinias_Ubicaciones4");

                    b.HasOne("VMES.Database.Vmes.Models.SalidasAlbaranes", "idAlbaranNavigation")
                        .WithMany("SalidasLinias")
                        .HasForeignKey("idAlbaran")
                        .HasConstraintName("FK_SalidasLinias_SalidasAlbaranes");

                    b.HasOne("VMES.Database.Vmes.Models.Basculas", "idBasculaPesajeBrutoNavigation")
                        .WithMany("SalidasLiniasidBasculaPesajeBrutoNavigation")
                        .HasForeignKey("idBasculaPesajeBruto")
                        .HasConstraintName("FK_SalidasLinias_BasculasBruto");

                    b.HasOne("VMES.Database.Vmes.Models.Basculas", "idBasculaPesajeNetoNavigation")
                        .WithMany("SalidasLiniasidBasculaPesajeNetoNavigation")
                        .HasForeignKey("idBasculaPesajeNeto")
                        .HasConstraintName("FK_SalidasLinias_BasculasNeto");

                    b.HasOne("VMES.Database.Vmes.Models.Domicilios", "idDomicilioNavigation")
                        .WithMany("SalidasLinias")
                        .HasForeignKey("idDomicilio")
                        .HasConstraintName("FK_SalidasLinias_Domicilios");

                    b.HasOne("VMES.Database.Vmes.Models.Envases", "idEnvaseNavigation")
                        .WithMany("SalidasLinias")
                        .HasForeignKey("idEnvase")
                        .HasConstraintName("FK_SalidasLinias_Envases");

                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "idFormatoNavigation")
                        .WithMany("SalidasLinias")
                        .HasForeignKey("idFormato")
                        .HasConstraintName("FK_SalidasLinias_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "idProductoNavigation")
                        .WithMany("SalidasLinias")
                        .HasForeignKey("idProducto")
                        .HasConstraintName("FK_SalidasLinias_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.PuntosDescarga", "idPuntoDescargaNavigation")
                        .WithMany("SalidasLinias")
                        .HasForeignKey("idPuntoDescarga")
                        .HasConstraintName("FK_SalidasLinias_PuntosDescarga");

                    b.HasOne("VMES.Database.Vmes.Models.Salidas", "idSalidasNavigation")
                        .WithMany("SalidasLinias")
                        .HasForeignKey("idSalidas")
                        .HasConstraintName("FK_SalidasLinias_Salidas");

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "idUnidadNavigation")
                        .WithMany("SalidasLinias")
                        .HasForeignKey("idUnidad")
                        .HasConstraintName("FK_SalidasLinias_Unidades");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "idmoduloNavigation")
                        .WithMany("SalidasLinias")
                        .HasForeignKey("idmodulo")
                        .HasConstraintName("FK_SalidasLinias_Modulos");

                    b.HasOne("VMES.Database.Vmes.Models.SalidasViajes", "idviajesNavigation")
                        .WithMany("SalidasLinias")
                        .HasForeignKey("idviajes")
                        .HasConstraintName("FK_SalidasLinias_SalidasViajes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SalidasLiniasLote", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.SalidasLinias", "idLineaSalidaNavigation")
                        .WithMany("SalidasLiniasLote")
                        .HasForeignKey("idLineaSalida")
                        .HasConstraintName("FK_SalidasLiniasLote_SalidasLinias");

                    b.HasOne("VMES.Database.Vmes.Models.SalidasLiniasMedicaciones", "idLineaSalidaMedicamentoNavigation")
                        .WithMany("SalidasLiniasLote")
                        .HasForeignKey("idLineaSalidaMedicamento")
                        .HasConstraintName("FK_SalidasLiniasLote_SalidasLiniasMedicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "idLoteNavigation")
                        .WithMany("SalidasLiniasLote")
                        .HasForeignKey("idLote")
                        .HasConstraintName("FK_SalidasLiniasLote_Lotes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SalidasLiniasMedicaciones", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "IdUnidadNavigation")
                        .WithMany("SalidasLiniasMedicaciones")
                        .HasForeignKey("IdUnidad")
                        .HasConstraintName("FK_SalidasLiniasMedicaciones_Unidades");

                    b.HasOne("VMES.Database.Vmes.Models.Envases", "idEnvaseNavigation")
                        .WithMany("SalidasLiniasMedicaciones")
                        .HasForeignKey("idEnvase")
                        .HasConstraintName("FK_SalidasLiniasMedicaciones_Envases");

                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "idFormatoNavigation")
                        .WithMany("SalidasLiniasMedicaciones")
                        .HasForeignKey("idFormato")
                        .HasConstraintName("FK_SalidasLiniasMedicaciones_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.Medicaciones", "idMedicamentoNavigation")
                        .WithMany("SalidasLiniasMedicaciones")
                        .HasForeignKey("idMedicamento")
                        .HasConstraintName("FK_SalidasLiniasMedicaciones_Medicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "idOrigenNavigation")
                        .WithMany("SalidasLiniasMedicaciones")
                        .HasForeignKey("idOrigen")
                        .HasConstraintName("FK_SalidasLiniasMedicaciones_Ubicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.SalidasLinias", "idSalidaLiniaNavigation")
                        .WithMany("SalidasLiniasMedicaciones")
                        .HasForeignKey("idSalidaLinia")
                        .HasConstraintName("FK_SalidasLiniasMedicaciones_SalidasLinias")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SalidasLiniasMuestras", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.ControlesNIR", "idControlesNirNavigation")
                        .WithMany("SalidasLiniasMuestras")
                        .HasForeignKey("idControlesNir")
                        .HasConstraintName("FK_SalidasLiniasMuestras_ControlesNIR");

                    b.HasOne("VMES.Database.Vmes.Models.SalidasLinias", "idSalidasLineasNavigation")
                        .WithMany("SalidasLiniasMuestras")
                        .HasForeignKey("idSalidasLineas")
                        .HasConstraintName("FK_SalidasLiniasMuestras_SalidasLinias");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SalidasLiniasPuntosDescarga", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.SalidasLinias", "idLineaSalidaNavigation")
                        .WithMany("SalidasLiniasPuntosDescarga")
                        .HasForeignKey("idLineaSalida")
                        .HasConstraintName("FK_SalidasLiniasPuntosDescarga_SalidasLinias")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.PuntosDescarga", "idPuntoDescargaNavigation")
                        .WithMany("SalidasLiniasPuntosDescarga")
                        .HasForeignKey("idPuntoDescarga")
                        .HasConstraintName("FK_SalidasLiniasPuntosDescarga_PuntosDescarga")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SalidasViajes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Choferes", "idChoferNavigation")
                        .WithMany("SalidasViajes")
                        .HasForeignKey("idChofer")
                        .HasConstraintName("FK_SalidasViajes_Choferes");

                    b.HasOne("VMES.Database.Vmes.Models.EmpresasTransporte", "idEmpresaTransporteNavigation")
                        .WithMany("SalidasViajes")
                        .HasForeignKey("idEmpresaTransporte")
                        .HasConstraintName("FK_SalidasViajes_EmpresasTransporte");

                    b.HasOne("VMES.Database.Vmes.Models.Series", "idSerieNavigation")
                        .WithMany("SalidasViajes")
                        .HasForeignKey("idSerie")
                        .HasConstraintName("FK_SalidasViajes_Series")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Tarjetas", "idTarjetaNavigation")
                        .WithMany("SalidasViajes")
                        .HasForeignKey("idTarjeta")
                        .HasConstraintName("FK_SalidasViajes_Tarjetas");

                    b.HasOne("VMES.Database.Vmes.Models.Vehiculos", "idVehiculoNavigation")
                        .WithMany("SalidasViajes")
                        .HasForeignKey("idVehiculo")
                        .HasConstraintName("FK_SalidasViajes_Vehiculos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Secciones", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OpcConfig", "OpcConfig")
                        .WithMany("Secciones")
                        .HasForeignKey("OpcConfigId")
                        .HasConstraintName("FK__Secciones__OpcCo__7948ECA7");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SeccionesGrupos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OpcConfig", "OpcConfig")
                        .WithMany("SeccionesGrupos")
                        .HasForeignKey("OpcConfigId")
                        .HasConstraintName("FK__Secciones__OpcCo__7A3D10E0");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SesionesModulo", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "ModuloNavigation")
                        .WithMany("SesionesModulo")
                        .HasForeignKey("Modulo")
                        .HasConstraintName("FK_SesionesModulo_Modulos")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Sesiones", "SesionNavigation")
                        .WithMany("SesionesModulo")
                        .HasForeignKey("Sesion")
                        .HasConstraintName("FK_SesionesModulo_Sesiones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SesionesSeccion", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Secciones", "SeccionNavigation")
                        .WithMany("SesionesSeccion")
                        .HasForeignKey("Seccion")
                        .HasConstraintName("FK_SesionesSeccion_Secciones")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Sesiones", "SesionNavigation")
                        .WithMany("SesionesSeccion")
                        .HasForeignKey("Sesion")
                        .HasConstraintName("FK_SesionesSeccion_Sesiones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.SolicitudAjusteCaudal", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "Orden")
                        .WithMany("SolicitudesAjusteCaudal")
                        .HasForeignKey("OrdenId");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "Producto")
                        .WithMany("SolicitudesAjusteCaudal")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "Ubicacion")
                        .WithMany("SolicitudesAjusteCaudal")
                        .HasForeignKey("UbicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Usuarios", "Usuario")
                        .WithMany("SolicitudesAjusteCaudal")
                        .HasForeignKey("UsuarioId");

                    b.HasOne("VMES.Database.Vmes.Models.Caudal", "Caudal")
                        .WithMany("SolicitudesAjusteCaudal")
                        .HasForeignKey("ProductoId", "UbicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Stocks", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Envases", "EnvaseNavigation")
                        .WithMany("Stocks")
                        .HasForeignKey("Envase")
                        .HasConstraintName("FK_Stocks_Envases");

                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "FormatoNavigation")
                        .WithMany("Stocks")
                        .HasForeignKey("Formato")
                        .HasConstraintName("FK_Stocks_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "LoteNavigation")
                        .WithMany("Stocks")
                        .HasForeignKey("Lote")
                        .HasConstraintName("FK_Stocks_Lotes")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("Stocks")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_Stocks_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "UbicacionNavigation")
                        .WithMany("Stocks")
                        .HasForeignKey("Ubicacion")
                        .HasConstraintName("FK_Stocks_Ubicaciones")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("Stocks")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_Stocks_Unidades");

                    b.HasOne("VMES.Database.Vmes.Models.EntradasLineas", "idEntradasLineasNavigation")
                        .WithMany("Stocks")
                        .HasForeignKey("idEntradasLineas")
                        .HasConstraintName("FK_Stocks_EntradasLineas")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.SalidasLinias", "idSalidasLineasNavigation")
                        .WithMany("Stocks")
                        .HasForeignKey("idSalidasLineas")
                        .HasConstraintName("FK_Stocks_SalidasLinias");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.StocksReserva", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.EntradasLineas", "idEntradasLineasNavigation")
                        .WithMany("StocksReserva")
                        .HasForeignKey("idEntradasLineas")
                        .HasConstraintName("FK_StocksReserva_EntradasLineas");

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "idLoteNavigation")
                        .WithMany("StocksReserva")
                        .HasForeignKey("idLote")
                        .HasConstraintName("FK_StocksReserva_Lotes");

                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "idOrdenNavigation")
                        .WithMany("StocksReserva")
                        .HasForeignKey("idOrden")
                        .HasConstraintName("FK_StocksReserva_Ordenes");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "idProductoNavigation")
                        .WithMany("StocksReserva")
                        .HasForeignKey("idProducto")
                        .HasConstraintName("FK_StocksReserva_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.SalidasLinias", "idSalidasLineasNavigation")
                        .WithMany("StocksReserva")
                        .HasForeignKey("idSalidasLineas")
                        .HasConstraintName("FK_StocksReserva_SalidasLinias");

                    b.HasOne("VMES.Database.Vmes.Models.SalidasLiniasMedicaciones", "idSalidasLineasMedicNavigation")
                        .WithMany("StocksReserva")
                        .HasForeignKey("idSalidasLineasMedic")
                        .HasConstraintName("FK_StocksReserva_SalidasLiniasMedicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Stocks", "idStockNavigation")
                        .WithMany("StocksReserva")
                        .HasForeignKey("idStock")
                        .HasConstraintName("FK_StocksReserva_Stocks");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "idUbicacionNavigation")
                        .WithMany("StocksReserva")
                        .HasForeignKey("idUbicacion")
                        .HasConstraintName("FK_StocksReserva_Ubicaciones");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Tags", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OpcConfig", "OpcConfig")
                        .WithMany("Tags")
                        .HasForeignKey("OpcConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "UbicacionNavigation")
                        .WithMany("Tags")
                        .HasForeignKey("Ubicacion")
                        .HasConstraintName("FK_Tags_Ubicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.TagsLecturas", "idLecturaTagNavigation")
                        .WithMany("Tags")
                        .HasForeignKey("idLecturaTag")
                        .HasConstraintName("FK_Tags_TagsLecturas");

                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "idModuloNavigation")
                        .WithMany("Tags")
                        .HasForeignKey("idModulo")
                        .HasConstraintName("FK_Tags_Modulos");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.TagsBasculas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Basculas", "idBasculaNavigation")
                        .WithMany("TagsBasculas")
                        .HasForeignKey("idBascula")
                        .HasConstraintName("FK_TagsBasculas_Basculas")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.Tags", "idTagNavigation")
                        .WithMany("TagsBasculas")
                        .HasForeignKey("idTag")
                        .HasConstraintName("FK_TagsBasculas_Tags")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.TagsLecturas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Tags", "idTagNavigation")
                        .WithMany("TagsLecturas")
                        .HasForeignKey("idTag")
                        .HasConstraintName("FK_TagsLecturas_Tags");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Tarifas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Clientes", "ClienteNavigation")
                        .WithMany("Tarifas")
                        .HasForeignKey("Cliente")
                        .HasConstraintName("FK_Tarifas_Clientes")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.Envases", "EnvaseNavigation")
                        .WithMany("Tarifas")
                        .HasForeignKey("Envase")
                        .HasConstraintName("FK_Tarifas_Envases")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Medicaciones", "MedicacionNavigation")
                        .WithMany("Tarifas")
                        .HasForeignKey("Medicacion")
                        .HasConstraintName("FK_Tarifas_Medicaciones")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("Tarifas")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_Tarifas_Productos")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("Tarifas")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_Tarifas_Unidades")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Tarjetas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.EntradasLineas", "IdLinEntradaNavigation")
                        .WithMany("Tarjetas")
                        .HasForeignKey("IdLinEntrada")
                        .HasConstraintName("FK_Tarjetas_EntradasLineas");

                    b.HasOne("VMES.Database.Vmes.Models.SalidasLinias", "IdLinSalidaNavigation")
                        .WithMany("Tarjetas")
                        .HasForeignKey("IdLinSalida")
                        .HasConstraintName("FK_Tarjetas_SalidasLinias");

                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "IdOrdenActualNavigation")
                        .WithMany("Tarjetas")
                        .HasForeignKey("IdOrdenActual")
                        .HasConstraintName("FK_Tarjetas_ordenes");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.TempControlesMedidores", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "idMedidorNavigation")
                        .WithMany("TempControlesMedidores")
                        .HasForeignKey("idMedidor")
                        .HasConstraintName("FK_TempControlesMedidores_Medidores")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VMES.Database.Vmes.Models.TempControles", "idTempControlNavigation")
                        .WithMany("TempControlesMedidores")
                        .HasForeignKey("idTempControl")
                        .HasConstraintName("FK_TempControlesMedidores_TempControles")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.TiempoLimpieza", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "Modulo")
                        .WithMany("TiempoLimpieza")
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "Ubicacion")
                        .WithMany("TiempoLimpieza")
                        .HasForeignKey("UbicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Ubicaciones", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "AsociacionNavigation")
                        .WithMany("InverseAsociacionNavigation")
                        .HasForeignKey("Asociacion")
                        .HasConstraintName("FK_Ubicaciones_Ubicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Sesiones", "AvisosSesionNavigation")
                        .WithMany("Ubicaciones")
                        .HasForeignKey("AvisosSesion")
                        .HasConstraintName("FK_Ubicaciones_Sesiones");

                    b.HasOne("VMES.Database.Vmes.Models.Departamentos", "DepartamentoNavigation")
                        .WithMany("Ubicaciones")
                        .HasForeignKey("Departamento")
                        .HasConstraintName("FK_Ubicaciones_Departamentos");

                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "FormatoNavigation")
                        .WithMany("Ubicaciones")
                        .HasForeignKey("Formato")
                        .HasConstraintName("FK_Ubicaciones_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.Lotes", "LoteNavigation")
                        .WithMany("Ubicaciones")
                        .HasForeignKey("Lote")
                        .HasConstraintName("FK_Ubicaciones_Lotes");

                    b.HasOne("VMES.Database.Vmes.Models.OpcConfig", "OpcConfig")
                        .WithMany("Ubicaciones")
                        .HasForeignKey("OpcConfigId")
                        .HasConstraintName("FK__Ubicacion__OpcCo__3AE1A5DA");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "ProductoNavigation")
                        .WithMany("Ubicaciones")
                        .HasForeignKey("Producto")
                        .HasConstraintName("FK_Ubicaciones_Productos")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("Ubicaciones")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_Ubicaciones_Unidades");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UbicacionesAsociadas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "idUbicacion1Navigation")
                        .WithMany("UbicacionesAsociadasidUbicacion1Navigation")
                        .HasForeignKey("idUbicacion1")
                        .HasConstraintName("FK_UbicacionesAsociadas_Ubicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "idUbicacion2Navigation")
                        .WithMany("UbicacionesAsociadasidUbicacion2Navigation")
                        .HasForeignKey("idUbicacion2")
                        .HasConstraintName("FK_UbicacionesAsociadas_Ubicaciones1");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UbicacionesOpcConfig", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OpcConfig", "OpcConfig")
                        .WithMany("UbicacionesOpcConfig")
                        .HasForeignKey("OpcConfigId")
                        .HasConstraintName("FK_UbicacionesOpcConfig_OpcConfig")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "Ubicacion")
                        .WithMany("UbicacionesOpcConfig")
                        .HasForeignKey("UbicacionId")
                        .HasConstraintName("FK_UbicacionesOpcConfig_Ubicacion")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UbisMedsAfino", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Medidor", "idMedidorNavigation")
                        .WithMany("UbisMedsAfino")
                        .HasForeignKey("idMedidor")
                        .HasConstraintName("FK_UbisMedsAfino_Medidores")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Ubicaciones", "idUbicacionNavigation")
                        .WithMany("UbisMedsAfino")
                        .HasForeignKey("idUbicacion")
                        .HasConstraintName("FK_UbisMedsAfino_Ubicaciones")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Usuarios", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.OpcConfig", "IdOpcNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdOpc");

                    b.HasOne("VMES.Database.Vmes.Models.UsuariosRoles", "RolNavigation")
                        .WithMany("UsuariosNavigation")
                        .HasForeignKey("Rol")
                        .HasConstraintName("FK_Usuarios_UsuariosRoles");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UsuariosGruposLDAP", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.UsuariosRoles", "idRolNavigation")
                        .WithMany("UsuariosGruposLDAP")
                        .HasForeignKey("idRol")
                        .HasConstraintName("FK_UsuariosGruposLDAP_UsuariosRoles")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UsuariosLogs", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Usuarios", "idUsuarioNavigation")
                        .WithMany("UsuariosLogs")
                        .HasForeignKey("idUsuario")
                        .HasConstraintName("FK_UsuariosLogs_Usuarios");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UsuariosRolesConfigForm", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.UsuariosRoles", "UsuarioRolNavigation")
                        .WithMany("UsuariosRolesConfigForm")
                        .HasForeignKey("UsuarioRol")
                        .HasConstraintName("FK_UsuariosRolesConfigForm_UsuariosRoles")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UsuariosRolesInformes", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.UsuariosRoles", "idRolNavigation")
                        .WithMany("UsuariosRolesInformes")
                        .HasForeignKey("idRol")
                        .HasConstraintName("FK_UsuariosRolesInformes_UsuariosRoles");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.UsuariosRolesModulos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "idModuloNavigation")
                        .WithMany("UsuariosRolesModulos")
                        .HasForeignKey("idModulo")
                        .HasConstraintName("FK_UsuariosRolesModulos_Modulos")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.UsuariosRoles", "idRolNavigation")
                        .WithMany("UsuariosRolesModulos")
                        .HasForeignKey("idRol")
                        .HasConstraintName("FK_UsuariosRolesModulos_UsuariosRoles")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Valores", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Ordenes", "OrdenNavigation")
                        .WithMany("Valores")
                        .HasForeignKey("Orden")
                        .HasConstraintName("FK_Valores_Ordenes")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Variables", "VariableNavigation")
                        .WithMany("Valores")
                        .HasForeignKey("Variable")
                        .HasConstraintName("FK_Valores_Variables");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Variables", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "ModuloNavigation")
                        .WithMany("Variables")
                        .HasForeignKey("Modulo")
                        .HasConstraintName("FK_Variables_Modulos")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Vehiculos", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Choferes", "ChoferNavigation")
                        .WithMany("Vehiculos")
                        .HasForeignKey("Chofer")
                        .HasConstraintName("FK_Vehiculos_Choferes");

                    b.HasOne("VMES.Database.Vmes.Models.EmpresasTransporte", "EmpresaTransporteNavigation")
                        .WithMany("Vehiculos")
                        .HasForeignKey("EmpresaTransporte")
                        .HasConstraintName("FK_Vehiculos_EmpresasTransporte")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("VMES.Database.Vmes.Models.Tarjetas", "TarjetaNavigation")
                        .WithMany("Vehiculos")
                        .HasForeignKey("Tarjeta")
                        .HasConstraintName("FK_Vehiculos_Tarjetas");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Ventas", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Departamentos", "DepartamentoNavigation")
                        .WithMany("Ventas")
                        .HasForeignKey("Departamento")
                        .HasConstraintName("FK_Ventas_Departamentos");

                    b.HasOne("VMES.Database.Vmes.Models.Clientes", "idClienteNavigation")
                        .WithMany("Ventas")
                        .HasForeignKey("idCliente")
                        .HasConstraintName("FK_Ventas_Clientes");

                    b.HasOne("VMES.Database.Vmes.Models.Domicilios", "idDomicilioNavigation")
                        .WithMany("Ventas")
                        .HasForeignKey("idDomicilio")
                        .HasConstraintName("FK_Ventas_Domicilios");

                    b.HasOne("VMES.Database.Vmes.Models.Series", "idSerieNavigation")
                        .WithMany("Ventas")
                        .HasForeignKey("idSerie")
                        .HasConstraintName("FK_Ventas_Series");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.VentasLinias", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Envases", "MedEnvaseNavigation")
                        .WithMany("VentasLiniasMedEnvaseNavigation")
                        .HasForeignKey("MedEnvase")
                        .HasConstraintName("FKMed_VentasLinias_Envases");

                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "MedFormatoNavigation")
                        .WithMany("VentasLiniasMedFormatoNavigation")
                        .HasForeignKey("MedFormato")
                        .HasConstraintName("FKMed_VentasLinias_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "MedUnidadNavigation")
                        .WithMany("VentasLiniasMedUnidadNavigation")
                        .HasForeignKey("MedUnidad")
                        .HasConstraintName("FKMed_VentasLinias_Unidades");

                    b.HasOne("VMES.Database.Vmes.Models.Contratos", "idContratoNavigation")
                        .WithMany("VentasLinias")
                        .HasForeignKey("idContrato")
                        .HasConstraintName("FK_VentasLinias_Contratos");

                    b.HasOne("VMES.Database.Vmes.Models.Domicilios", "idDomicilioNavigation")
                        .WithMany("VentasLinias")
                        .HasForeignKey("idDomicilio")
                        .HasConstraintName("FK_VentasLinias_Domicilios");

                    b.HasOne("VMES.Database.Vmes.Models.Envases", "idEnvaseNavigation")
                        .WithMany("VentasLiniasidEnvaseNavigation")
                        .HasForeignKey("idEnvase")
                        .HasConstraintName("FK_VentasLinias_Envases");

                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "idFormatoNavigation")
                        .WithMany("VentasLiniasidFormatoNavigation")
                        .HasForeignKey("idFormato")
                        .HasConstraintName("FK_VentasLinias_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.Medicaciones", "idMedicamentoNavigation")
                        .WithMany("VentasLinias")
                        .HasForeignKey("idMedicamento")
                        .HasConstraintName("FK_VentasLinias_Medicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Productos", "idProductoNavigation")
                        .WithMany("VentasLinias")
                        .HasForeignKey("idProducto")
                        .HasConstraintName("FK_VentasLinias_Productos");

                    b.HasOne("VMES.Database.Vmes.Models.PuntosDescarga", "idPuntoDescargaNavigation")
                        .WithMany("VentasLinias")
                        .HasForeignKey("idPuntoDescarga")
                        .HasConstraintName("FK_VentasLinias_PuntosDescarga");

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "idUnidadNavigation")
                        .WithMany("VentasLiniasidUnidadNavigation")
                        .HasForeignKey("idUnidad")
                        .HasConstraintName("FK_VentasLinias_Unidades");

                    b.HasOne("VMES.Database.Vmes.Models.Ventas", "idVentasNavigation")
                        .WithMany("VentasLinias")
                        .HasForeignKey("idVentas")
                        .HasConstraintName("FK_VentasLinias_Ventas")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.VentasLiniasMedicaciones", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Envases", "idEnvaseNavigation")
                        .WithMany("VentasLiniasMedicaciones")
                        .HasForeignKey("idEnvase")
                        .HasConstraintName("FK_VentasLiniasMedicaciones_Envases");

                    b.HasOne("VMES.Database.Vmes.Models.Formatos", "idFormatoNavigation")
                        .WithMany("VentasLiniasMedicaciones")
                        .HasForeignKey("idFormato")
                        .HasConstraintName("FK_VentasLiniasMedicaciones_Formatos");

                    b.HasOne("VMES.Database.Vmes.Models.SalidasLiniasMedicaciones", "idLineaSalidaMedicamentoNavigation")
                        .WithMany("VentasLiniasMedicaciones")
                        .HasForeignKey("idLineaSalidaMedicamento")
                        .HasConstraintName("FK_VentasLiniasMedicaciones_SalidasLiniasMedicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Medicaciones", "idMedicamentoNavigation")
                        .WithMany("VentasLiniasMedicaciones")
                        .HasForeignKey("idMedicamento")
                        .HasConstraintName("FK_VentasLiniasMedicaciones_Medicaciones");

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "idUnidadNavigation")
                        .WithMany("VentasLiniasMedicaciones")
                        .HasForeignKey("idUnidad")
                        .HasConstraintName("FK_VentasLiniasMedicaciones_Unidades");

                    b.HasOne("VMES.Database.Vmes.Models.VentasLinias", "idVentaLiniaNavigation")
                        .WithMany("VentasLiniasMedicaciones")
                        .HasForeignKey("idVentaLinia")
                        .HasConstraintName("FK_VentasLiniasMedicaciones_VentasLinias");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.VentasLiniasPuntosDescarga", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.VentasLinias", "idLineaVentaNavigation")
                        .WithMany("VentasLiniasPuntosDescarga")
                        .HasForeignKey("idLineaVenta")
                        .HasConstraintName("FK_VentasLiniasPuntosDescarga_SalidasLinias")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.PuntosDescarga", "idPuntoDescargaNavigation")
                        .WithMany("VentasLiniasPuntosDescarga")
                        .HasForeignKey("idPuntoDescarga")
                        .HasConstraintName("FK_VentasLiniasPuntosDescarga_PuntosDescarga")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.VersionDatosExtra", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Versiones", "idNavigation")
                        .WithOne("VersionDatosExtra")
                        .HasForeignKey("VMES.Database.Vmes.Models.VersionDatosExtra", "id")
                        .HasConstraintName("FK_VersionDatosExtra_Version")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.VersionTPrevisto", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Modulos", "idModuloNavigation")
                        .WithMany("VersionTPrevisto")
                        .HasForeignKey("idModulo")
                        .HasConstraintName("FK_VersionTPrevisto_Modulos")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Versiones", "idVersionNavigation")
                        .WithMany("VersionTPrevisto")
                        .HasForeignKey("idVersion")
                        .HasConstraintName("FK_VersionTPrevisto_Versiones")
                        .IsRequired();
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Versiones", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Formulas", "FormulaNavigation")
                        .WithMany("Versiones")
                        .HasForeignKey("Formula")
                        .HasConstraintName("FK_Versiones_Formulas")
                        .IsRequired();

                    b.HasOne("VMES.Database.Vmes.Models.Unidades", "UnidadNavigation")
                        .WithMany("Versiones")
                        .HasForeignKey("Unidad")
                        .HasConstraintName("FK_Versiones_Unidades");
                });

            modelBuilder.Entity("VMES.Database.Vmes.Models.Veterinarios", b =>
                {
                    b.HasOne("VMES.Database.Vmes.Models.Empresas", "IdEmpresaNavigation")
                        .WithMany("Veterinarios")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK_Veterinarios_Empresas")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}
